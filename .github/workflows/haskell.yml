name:  Deploy

on:
  push:
    branches: [ master ]

env:
  LANG: C.UTF-8

jobs:
  runhaskell:
    name: Build and test 
    runs-on: ubuntu-latest # or macOS-latest, or windows-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - uses: actions/checkout@v2
      - uses: freckle/stack-cache-action@main
      - uses: haskell/actions/setup@v1
        with:
          ghc-version: 9.8.1 # "8.10.7" # Exact version of ghc to use
          # cabal-version: 'latest'. Omitted, but defalts to 'latest'
          enable-stack: true
          stack-version: "latest"
      # - uses: actions/cache@v2
      #   with:
      #     path: |
      #       ~/.stack
      #       .stack-work
      #     # best effort for cache: tie it to Stack resolver and package config
      #     key: ${{ runner.os }}-stack-${{ hashFiles('stack.yaml.lock', 'package.yaml') }}
      #     restore-keys: |
      #       ${{ runner.os }}-stack
      
      - run: stack --no-terminal build --dependencies-only
      # - run: stack install --local-bin-path=. --ghc-options '-optl-static -fPIC'
      - run: stack install --local-bin-path=. 
      # - run: stack test

      - name: Setup node env
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: npm install
      - run: npx tailwindcss  -i ./static/public/assets/css/tailwind.css -o ./static/public/assets/css/tailwind.min.css
      - run: npx postcss-cli ./static/public/assets/css/tailwind.css -o ./static/public/assets/css/tailwind.min.css


      - name: Login to Container Registry
        uses: docker/login-action@v2
        with:
              registry: ghcr.io
              username: ${{ github.repository_owner }}
              password: ${{ secrets.GH_TOKEN }}

      - name: Preset Image Name
        run: echo "IMAGE_URL=$(echo ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:$(echo ${{ github.sha }} | cut -c1-7) | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Build and push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.IMAGE_URL }}

      - name: Deploy Image to CapRrover
        uses: caprover/deploy-from-github@v1.1.2
        with:
          server: "${{ secrets.CAPTAINROVER_SERVER }}"
          app: "${{ secrets.CAPTAINROVER_APP_NAME }}"
          token: "${{ secrets.CAPTAINROVER_APP_TOKEN }}"
          image: "${{ env.IMAGE_URL }}"

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
