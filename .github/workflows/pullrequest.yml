name: Build and Test PR

on: pull_request

env:
  LANG: C.UTF-8

jobs:
  runhaskell:
    name: Build and test
    runs-on: ubuntu-24.04
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - uses: freckle/stack-cache-action@main
      # - uses: freckle/stack-action@v5
      - uses: haskell-actions/setup@v2
        with:
          ghc-version: 9.10.2
          enable-stack: true
          stack-version: 'latest'
      - name: Install OpenSSL, protoc and snappy
        run:  sudo apt-get update && sudo apt-get install -y libssl-dev librdkafka-dev libgrpc-dev>=1.55 protobuf-compiler libsnappy-dev gnupg postgresql-common apt-transport-https lsb-release wget # or "brew install openssl" for macOS
      - name : Timescaledb
        run : |
          sudo /usr/share/postgresql-common/pgdg/apt.postgresql.org.sh
          sudo apt install postgresql-server-dev-17
          echo "deb https://packagecloud.io/timescale/timescaledb/debian/ $(lsb_release -c -s) main" | sudo tee /etc/apt/sources.list.d/timescaledb.list
          wget --quiet -O - https://packagecloud.io/timescale/timescaledb/gpgkey | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/timescaledb.gpg
          sudo apt update
          sudo apt install timescaledb-2-postgresql-17 postgresql-client-17
          sudo timescaledb-tune
          sudo systemctl restart postgresql
      - name: Set OpenSSL Paths
        run: |
          export OPENSSL_INCLUDE_DIR=$(pkg-config --variable=includedir openssl)
          export OPENSSL_LIB_DIR=$(pkg-config --variable=libdir openssl)
      - name: Setup node env
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: npm install
      - run: npx tailwindcss  -i ./static/public/assets/css/tailwind.css -o ./static/public/assets/css/tailwind.min.css

      - run: |
          make prepare-rust-interop
          sudo mkdir -p /usr/local/lib
          sudo cp rust-interop/target/release/libCrust_interop.so /usr/local/lib
          sudo cp rust-interop/target/release/libCrust_interop.so /usr/local/lib/librust_interop.so
          sudo mkdir -p /usr/lib
          sudo cp rust-interop/target/release/libCrust_interop.so /usr/lib
          sudo cp rust-interop/target/release/libCrust_interop.so /usr/lib/librust_interop.so
      - run: stack --no-terminal build --dependencies-only

      - run: stack install --local-bin-path=.  --ghc-options "-O0"
      - run: |
         export PATH=$PATH:/usr/lib/postgresql/17/bin
         make test

