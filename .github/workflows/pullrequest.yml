name: Build and Test PR

on: pull_request

env:
  LANG: C.UTF-8

jobs:
  runhaskell:
    name: Build and test
    runs-on: ubuntu-24.04
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - uses: freckle/stack-cache-action@main
      # - uses: freckle/stack-action@v5
      - uses: haskell-actions/setup@v2
        with:
          ghc-version: 9.10.2
          enable-stack: true
          stack-version: 'latest'
      - name: Install OpenSSL, protoc and snappy
        run: sudo apt-get update && sudo apt-get install -y libssl-dev librdkafka-dev libgrpc-dev>=1.55 protobuf-compiler libsnappy-dev # or "brew install openssl" for macOS
      - name: Set OpenSSL Paths
        run: |
          export OPENSSL_INCLUDE_DIR=$(pkg-config --variable=includedir openssl)
          export OPENSSL_LIB_DIR=$(pkg-config --variable=libdir openssl)
      - name: "Install and Start PostgreSQL"
        run: |
            sudo apt-get install -y postgresql-16 postgresql-client-16
            sudo systemctl start postgresql
            sudo systemctl status postgresql  # Verify service is running
      - name: "Create Test Database and User"
        run: |
          sudo -u postgres psql -c "CREATE USER postgres WITH PASSWORD 'postgres';"
          sudo -u postgres psql -c "CREATE DATABASE apitoolkit;"
          sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE apitoolkit TO postgres;"
          sudo -u postgres psql -c "ALTER DATABASE apitoolkit OWNER TO postgres;"
      - name: Setup node env
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: npm install
      - run: npx tailwindcss  -i ./static/public/assets/css/tailwind.css -o ./static/public/assets/css/tailwind.min.css

      - run: |
          make prepare-rust-interop
          sudo mkdir -p /usr/local/lib
          sudo cp rust-interop/target/release/libCrust_interop.so /usr/local/lib
          sudo cp rust-interop/target/release/libCrust_interop.so /usr/local/lib/librust_interop.so
          sudo mkdir -p /usr/lib
          sudo cp rust-interop/target/release/libCrust_interop.so /usr/lib
          sudo cp rust-interop/target/release/libCrust_interop.so /usr/lib/librust_interop.so
      - run: stack --no-terminal build --dependencies-only
      - run: stack install --local-bin-path=. --flag pg-entity:prod --ghc-options "-O0"
      - name: "Check PostgreSQL Readiness"
        run: |
          timeout 20 bash -c "until pg_isready -h localhost; do sleep 1; done"
      - run: |
          env:
          PGHOST: localhost
          PGPORT: 5432
          PGDATABASE: apitoolkit
          PGUSER: postgres
          PGPASSWORD: postgres
          DATABASE_URL: host=localhost user=postgres password=postgres dbname=apitoolkit port=5432 sslmode=disable
          export PATH=$PATH:/usr/lib/postgresql/16/bin
          stack test --ghc-options=-w
