title: HTTP Stats
preview: /public/assets/svgs/screens/http-stats.svg
icon: chart-bar
refresh_interval: 60s
widgets:
  # - type: "timeseries_stat"
  #   title: "Requests"
  #   query: requests
  #   unit: reqs
  #   layout: { w: 3, h: 2 }

  - type: group
    title: Overview
    layout: { w: 6, h: 5 }
    children:
      - type: 'timeseries_stat'
        title: 'Requests'
        icon: list-tree
        query: summarize count(*) by bin_auto(timestamp)
        unit: reqs
        eager: true
        layout: { w: 7, h: 2 }

  - type: 'anomalies'
    title: 'Ongoing issues and monitors'
    layout: { w: 6, h: 5 }

  - type: 'timeseries'
    title: 'All requests'
    query: summarize count(*) by bin_auto(timestamp), status_code
    unit: reqs
    layout: { w: 6, h: 4 }

  - type: 'timeseries_line'
    title: 'Latency percentiles (ms)'
    hide_subtitle: true
    # query: timechart count(*) by status_code
    # query: timechart p50(duration_ns) as p50, p75(duration_ns) as p75, p90(duration_ns) as p90, p95(duration_ns) as p95 by duration_ns
    summarize_by: max
    sql: |
      SELECT timeB, value, quantile
      FROM (
        SELECT extract(epoch from time_bucket('1h', created_at))::integer AS timeB,
               ARRAY[
                 (approx_percentile(0.50, percentile_agg(duration_ns)) / 1000000.0)::float,
                 (approx_percentile(0.75, percentile_agg(duration_ns)) / 1000000.0)::float,
                 (approx_percentile(0.90, percentile_agg(duration_ns)) / 1000000.0)::float,
                 (approx_percentile(0.95, percentile_agg(duration_ns)) / 1000000.0)::float
               ] AS values,
               ARRAY['p50', 'p75', 'p90', 'p95'] AS quantiles
        FROM apis.request_dumps
        WHERE project_id='{{project_id}}'::uuid
          {{time_filter_sql_created_at}}
        GROUP BY timeB
      ) s,
      LATERAL unnest(s.values, s.quantiles) AS u(value, quantile);
    layout: { w: 6, h: 4 }

  - type: 'timeseries'
    title: 'Errors'
    theme: 'roma'
    query: status_code >= 300.0 | summarize count(*) by bin_auto(timestamp), status_code
    layout: { w: 6, h: 4 }

  - type: 'timeseries'
    title: 'Requests by Endpoint'
    query: summarize count(*) by bin_auto(timestamp), method, url_path
    layout: { w: 6, h: 4 }
