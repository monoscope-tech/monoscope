{-# LANGUAGE DataKinds #-}
{-# LANGUAGE DeriveAnyClass #-}
{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE GADTs #-}
{-# LANGUAGE NamedFieldPuns #-}
{-# LANGUAGE NegativeLiterals #-}
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE TypeApplications #-}
{-# LANGUAGE TypeOperators #-}
{-# OPTIONS_GHC -fno-warn-missing-export-lists #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- | Generated by Haskell protocol buffer compiler. DO NOT EDIT!
module Opentelemetry.Proto.Trace.V1.Trace where
import qualified Prelude as Hs
import qualified Proto3.Suite.Class as HsProtobuf
import qualified Proto3.Suite.DotProto as HsProtobufAST
import qualified Proto3.Suite.JSONPB as HsJSONPB
import Proto3.Suite.JSONPB ( (.=), (.:) )
import qualified Proto3.Suite.Types as HsProtobuf
import qualified Proto3.Wire as HsProtobuf
import qualified Proto3.Wire.Decode as HsProtobuf
    ( Parser, RawField )
import qualified Control.Applicative as Hs
import Control.Applicative ( (<*>), (<|>), (<$>) )
import qualified Control.DeepSeq as Hs
import qualified Control.Monad as Hs
import qualified Data.ByteString as Hs
import qualified Data.Coerce as Hs
import qualified Data.Int as Hs ( Int16, Int32, Int64 )
import qualified Data.List.NonEmpty as Hs ( NonEmpty(..) )
import qualified Data.Map as Hs ( Map, mapKeysMonotonic )
import qualified Data.Proxy as Proxy
import qualified Data.String as Hs ( fromString )
import qualified Data.Text.Lazy as Hs ( Text )
import qualified Data.Vector as Hs ( Vector )
import qualified Data.Word as Hs ( Word16, Word32, Word64 )
import qualified GHC.Enum as Hs
import qualified GHC.Generics as Hs
import qualified Google.Protobuf.Wrappers.Polymorphic as HsProtobuf
    ( Wrapped(..) )
import qualified Unsafe.Coerce as Hs
import qualified Opentelemetry.Proto.Common.V1.Common
import qualified Opentelemetry.Proto.Resource.V1.Resource
newtype TracesData
  = TracesData {tracesDataResourceSpans :: (Hs.Vector Opentelemetry.Proto.Trace.V1.Trace.ResourceSpans)}
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)
instance (Hs.NFData TracesData)
instance (HsProtobuf.Named TracesData) where
  nameOf _ = Hs.fromString "TracesData"
instance (HsProtobuf.HasDefault TracesData)
instance (HsProtobuf.Message TracesData) where
  encodeMessage _ TracesData {tracesDataResourceSpans}
    = (HsProtobuf.encodeMessageField
         (HsProtobuf.FieldNumber 1)
         ((Hs.coerce
             @(Hs.Vector Opentelemetry.Proto.Trace.V1.Trace.ResourceSpans)
             @(HsProtobuf.NestedVec Opentelemetry.Proto.Trace.V1.Trace.ResourceSpans))
            tracesDataResourceSpans))
  decodeMessage _
    = Hs.pure TracesData
        <*>
          ((HsProtobuf.coerceOver
              @(HsProtobuf.NestedVec Opentelemetry.Proto.Trace.V1.Trace.ResourceSpans)
              @(Hs.Vector Opentelemetry.Proto.Trace.V1.Trace.ResourceSpans))
             (HsProtobuf.at
                HsProtobuf.decodeMessageField (HsProtobuf.FieldNumber 1)))
  dotProto _
    = [HsProtobufAST.DotProtoField
         (HsProtobuf.FieldNumber 1)
         (HsProtobufAST.Repeated
            (HsProtobufAST.Named (HsProtobufAST.Single "ResourceSpans")))
         (HsProtobufAST.Single "resource_spans") [] ""]
instance (HsJSONPB.ToJSONPB TracesData) where
  toJSONPB (TracesData f1)
    = HsJSONPB.object
        ["resource_spans"
           .=
             ((Hs.coerce
                 @(Hs.Vector Opentelemetry.Proto.Trace.V1.Trace.ResourceSpans)
                 @(HsProtobuf.NestedVec Opentelemetry.Proto.Trace.V1.Trace.ResourceSpans))
                f1)]
  toEncodingPB (TracesData f1)
    = HsJSONPB.pairs
        ["resource_spans"
           .=
             ((Hs.coerce
                 @(Hs.Vector Opentelemetry.Proto.Trace.V1.Trace.ResourceSpans)
                 @(HsProtobuf.NestedVec Opentelemetry.Proto.Trace.V1.Trace.ResourceSpans))
                f1)]
instance (HsJSONPB.FromJSONPB TracesData) where
  parseJSONPB
    = HsJSONPB.withObject
        "TracesData"
        (\ obj
           -> Hs.pure TracesData
                <*>
                  ((HsProtobuf.coerceOver
                      @(HsProtobuf.NestedVec Opentelemetry.Proto.Trace.V1.Trace.ResourceSpans)
                      @(Hs.Vector Opentelemetry.Proto.Trace.V1.Trace.ResourceSpans))
                     (obj .: "resource_spans")))
instance (HsJSONPB.ToJSON TracesData) where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding
instance (HsJSONPB.FromJSON TracesData) where
  parseJSON = HsJSONPB.parseJSONPB
instance (HsJSONPB.ToSchema TracesData) where
  declareNamedSchema _
    = do let declare_resource_spans = HsJSONPB.declareSchemaRef
         tracesDataResourceSpans <- declare_resource_spans Proxy.Proxy
         let _ = Hs.pure TracesData
                   <*>
                     ((HsProtobuf.coerceOver
                         @(HsProtobuf.NestedVec Opentelemetry.Proto.Trace.V1.Trace.ResourceSpans)
                         @(Hs.Vector Opentelemetry.Proto.Trace.V1.Trace.ResourceSpans))
                        (HsJSONPB.asProxy declare_resource_spans))
         Hs.return
           HsJSONPB.NamedSchema
             {HsJSONPB._namedSchemaName = Hs.Just "TracesData",
              HsJSONPB._namedSchemaSchema = Hs.mempty
                                              {HsJSONPB._schemaParamSchema = Hs.mempty
                                                                               {HsJSONPB._paramSchemaType = Hs.Just
                                                                                                              HsJSONPB.SwaggerObject},
                                               HsJSONPB._schemaProperties = HsJSONPB.insOrdFromList
                                                                              [("resource_spans", 
                                                                                tracesDataResourceSpans)]}}
data ResourceSpans
  = ResourceSpans {resourceSpansResource :: (Hs.Maybe Opentelemetry.Proto.Resource.V1.Resource.Resource),
                   resourceSpansScopeSpans :: (Hs.Vector Opentelemetry.Proto.Trace.V1.Trace.ScopeSpans),
                   resourceSpansSchemaUrl :: Hs.Text}
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)
instance (Hs.NFData ResourceSpans)
instance (HsProtobuf.Named ResourceSpans) where
  nameOf _ = Hs.fromString "ResourceSpans"
instance (HsProtobuf.HasDefault ResourceSpans)
instance (HsProtobuf.Message ResourceSpans) where
  encodeMessage
    _
    ResourceSpans {resourceSpansResource, resourceSpansScopeSpans,
                   resourceSpansSchemaUrl}
    = Hs.mappend
        (Hs.mappend
           (HsProtobuf.encodeMessageField
              (HsProtobuf.FieldNumber 1)
              ((Hs.coerce
                  @(Hs.Maybe Opentelemetry.Proto.Resource.V1.Resource.Resource)
                  @(HsProtobuf.Nested Opentelemetry.Proto.Resource.V1.Resource.Resource))
                 resourceSpansResource))
           (HsProtobuf.encodeMessageField
              (HsProtobuf.FieldNumber 2)
              ((Hs.coerce
                  @(Hs.Vector Opentelemetry.Proto.Trace.V1.Trace.ScopeSpans)
                  @(HsProtobuf.NestedVec Opentelemetry.Proto.Trace.V1.Trace.ScopeSpans))
                 resourceSpansScopeSpans)))
        (HsProtobuf.encodeMessageField
           (HsProtobuf.FieldNumber 3)
           ((Hs.coerce @Hs.Text @(HsProtobuf.String Hs.Text))
              resourceSpansSchemaUrl))
  decodeMessage _
    = Hs.pure ResourceSpans
        <*>
          ((HsProtobuf.coerceOver
              @(HsProtobuf.Nested Opentelemetry.Proto.Resource.V1.Resource.Resource)
              @(Hs.Maybe Opentelemetry.Proto.Resource.V1.Resource.Resource))
             (HsProtobuf.at
                HsProtobuf.decodeMessageField (HsProtobuf.FieldNumber 1)))
        <*>
          ((HsProtobuf.coerceOver
              @(HsProtobuf.NestedVec Opentelemetry.Proto.Trace.V1.Trace.ScopeSpans)
              @(Hs.Vector Opentelemetry.Proto.Trace.V1.Trace.ScopeSpans))
             (HsProtobuf.at
                HsProtobuf.decodeMessageField (HsProtobuf.FieldNumber 2)))
        <*>
          ((HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @Hs.Text)
             (HsProtobuf.at
                HsProtobuf.decodeMessageField (HsProtobuf.FieldNumber 3)))
  dotProto _
    = [HsProtobufAST.DotProtoField
         (HsProtobuf.FieldNumber 1)
         (HsProtobufAST.Prim
            (HsProtobufAST.Named
               (HsProtobufAST.Dots
                  (HsProtobufAST.Path
                     ("opentelemetry" Hs.:| ["proto", "resource", "v1", "Resource"])))))
         (HsProtobufAST.Single "resource") [] "",
       HsProtobufAST.DotProtoField
         (HsProtobuf.FieldNumber 2)
         (HsProtobufAST.Repeated
            (HsProtobufAST.Named (HsProtobufAST.Single "ScopeSpans")))
         (HsProtobufAST.Single "scope_spans") [] "",
       HsProtobufAST.DotProtoField
         (HsProtobuf.FieldNumber 3)
         (HsProtobufAST.Prim HsProtobufAST.String)
         (HsProtobufAST.Single "schema_url") [] ""]
instance (HsJSONPB.ToJSONPB ResourceSpans) where
  toJSONPB (ResourceSpans f1 f2 f3)
    = HsJSONPB.object
        ["resource"
           .=
             ((Hs.coerce
                 @(Hs.Maybe Opentelemetry.Proto.Resource.V1.Resource.Resource)
                 @(HsProtobuf.Nested Opentelemetry.Proto.Resource.V1.Resource.Resource))
                f1),
         "scope_spans"
           .=
             ((Hs.coerce
                 @(Hs.Vector Opentelemetry.Proto.Trace.V1.Trace.ScopeSpans)
                 @(HsProtobuf.NestedVec Opentelemetry.Proto.Trace.V1.Trace.ScopeSpans))
                f2),
         "schema_url"
           .= ((Hs.coerce @Hs.Text @(HsProtobuf.String Hs.Text)) f3)]
  toEncodingPB (ResourceSpans f1 f2 f3)
    = HsJSONPB.pairs
        ["resource"
           .=
             ((Hs.coerce
                 @(Hs.Maybe Opentelemetry.Proto.Resource.V1.Resource.Resource)
                 @(HsProtobuf.Nested Opentelemetry.Proto.Resource.V1.Resource.Resource))
                f1),
         "scope_spans"
           .=
             ((Hs.coerce
                 @(Hs.Vector Opentelemetry.Proto.Trace.V1.Trace.ScopeSpans)
                 @(HsProtobuf.NestedVec Opentelemetry.Proto.Trace.V1.Trace.ScopeSpans))
                f2),
         "schema_url"
           .= ((Hs.coerce @Hs.Text @(HsProtobuf.String Hs.Text)) f3)]
instance (HsJSONPB.FromJSONPB ResourceSpans) where
  parseJSONPB
    = HsJSONPB.withObject
        "ResourceSpans"
        (\ obj
           -> Hs.pure ResourceSpans
                <*>
                  ((HsProtobuf.coerceOver
                      @(HsProtobuf.Nested Opentelemetry.Proto.Resource.V1.Resource.Resource)
                      @(Hs.Maybe Opentelemetry.Proto.Resource.V1.Resource.Resource))
                     (obj .: "resource"))
                <*>
                  ((HsProtobuf.coerceOver
                      @(HsProtobuf.NestedVec Opentelemetry.Proto.Trace.V1.Trace.ScopeSpans)
                      @(Hs.Vector Opentelemetry.Proto.Trace.V1.Trace.ScopeSpans))
                     (obj .: "scope_spans"))
                <*>
                  ((HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @Hs.Text)
                     (obj .: "schema_url")))
instance (HsJSONPB.ToJSON ResourceSpans) where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding
instance (HsJSONPB.FromJSON ResourceSpans) where
  parseJSON = HsJSONPB.parseJSONPB
instance (HsJSONPB.ToSchema ResourceSpans) where
  declareNamedSchema _
    = do let declare_resource = HsJSONPB.declareSchemaRef
         resourceSpansResource <- declare_resource Proxy.Proxy
         let declare_scope_spans = HsJSONPB.declareSchemaRef
         resourceSpansScopeSpans <- declare_scope_spans Proxy.Proxy
         let declare_schema_url = HsJSONPB.declareSchemaRef
         resourceSpansSchemaUrl <- declare_schema_url Proxy.Proxy
         let _ = Hs.pure ResourceSpans
                   <*>
                     ((HsProtobuf.coerceOver
                         @(HsProtobuf.Nested Opentelemetry.Proto.Resource.V1.Resource.Resource)
                         @(Hs.Maybe Opentelemetry.Proto.Resource.V1.Resource.Resource))
                        (HsJSONPB.asProxy declare_resource))
                   <*>
                     ((HsProtobuf.coerceOver
                         @(HsProtobuf.NestedVec Opentelemetry.Proto.Trace.V1.Trace.ScopeSpans)
                         @(Hs.Vector Opentelemetry.Proto.Trace.V1.Trace.ScopeSpans))
                        (HsJSONPB.asProxy declare_scope_spans))
                   <*>
                     ((HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @Hs.Text)
                        (HsJSONPB.asProxy declare_schema_url))
         Hs.return
           HsJSONPB.NamedSchema
             {HsJSONPB._namedSchemaName = Hs.Just "ResourceSpans",
              HsJSONPB._namedSchemaSchema = Hs.mempty
                                              {HsJSONPB._schemaParamSchema = Hs.mempty
                                                                               {HsJSONPB._paramSchemaType = Hs.Just
                                                                                                              HsJSONPB.SwaggerObject},
                                               HsJSONPB._schemaProperties = HsJSONPB.insOrdFromList
                                                                              [("resource", 
                                                                                resourceSpansResource),
                                                                               ("scope_spans", 
                                                                                resourceSpansScopeSpans),
                                                                               ("schema_url", 
                                                                                resourceSpansSchemaUrl)]}}
data ScopeSpans
  = ScopeSpans {scopeSpansScope :: (Hs.Maybe Opentelemetry.Proto.Common.V1.Common.InstrumentationScope),
                scopeSpansSpans :: (Hs.Vector Opentelemetry.Proto.Trace.V1.Trace.Span),
                scopeSpansSchemaUrl :: Hs.Text}
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)
instance (Hs.NFData ScopeSpans)
instance (HsProtobuf.Named ScopeSpans) where
  nameOf _ = Hs.fromString "ScopeSpans"
instance (HsProtobuf.HasDefault ScopeSpans)
instance (HsProtobuf.Message ScopeSpans) where
  encodeMessage
    _
    ScopeSpans {scopeSpansScope, scopeSpansSpans, scopeSpansSchemaUrl}
    = Hs.mappend
        (Hs.mappend
           (HsProtobuf.encodeMessageField
              (HsProtobuf.FieldNumber 1)
              ((Hs.coerce
                  @(Hs.Maybe Opentelemetry.Proto.Common.V1.Common.InstrumentationScope)
                  @(HsProtobuf.Nested Opentelemetry.Proto.Common.V1.Common.InstrumentationScope))
                 scopeSpansScope))
           (HsProtobuf.encodeMessageField
              (HsProtobuf.FieldNumber 2)
              ((Hs.coerce
                  @(Hs.Vector Opentelemetry.Proto.Trace.V1.Trace.Span)
                  @(HsProtobuf.NestedVec Opentelemetry.Proto.Trace.V1.Trace.Span))
                 scopeSpansSpans)))
        (HsProtobuf.encodeMessageField
           (HsProtobuf.FieldNumber 3)
           ((Hs.coerce @Hs.Text @(HsProtobuf.String Hs.Text))
              scopeSpansSchemaUrl))
  decodeMessage _
    = Hs.pure ScopeSpans
        <*>
          ((HsProtobuf.coerceOver
              @(HsProtobuf.Nested Opentelemetry.Proto.Common.V1.Common.InstrumentationScope)
              @(Hs.Maybe Opentelemetry.Proto.Common.V1.Common.InstrumentationScope))
             (HsProtobuf.at
                HsProtobuf.decodeMessageField (HsProtobuf.FieldNumber 1)))
        <*>
          ((HsProtobuf.coerceOver
              @(HsProtobuf.NestedVec Opentelemetry.Proto.Trace.V1.Trace.Span)
              @(Hs.Vector Opentelemetry.Proto.Trace.V1.Trace.Span))
             (HsProtobuf.at
                HsProtobuf.decodeMessageField (HsProtobuf.FieldNumber 2)))
        <*>
          ((HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @Hs.Text)
             (HsProtobuf.at
                HsProtobuf.decodeMessageField (HsProtobuf.FieldNumber 3)))
  dotProto _
    = [HsProtobufAST.DotProtoField
         (HsProtobuf.FieldNumber 1)
         (HsProtobufAST.Prim
            (HsProtobufAST.Named
               (HsProtobufAST.Dots
                  (HsProtobufAST.Path
                     ("opentelemetry"
                        Hs.:| ["proto", "common", "v1", "InstrumentationScope"])))))
         (HsProtobufAST.Single "scope") [] "",
       HsProtobufAST.DotProtoField
         (HsProtobuf.FieldNumber 2)
         (HsProtobufAST.Repeated
            (HsProtobufAST.Named (HsProtobufAST.Single "Span")))
         (HsProtobufAST.Single "spans") [] "",
       HsProtobufAST.DotProtoField
         (HsProtobuf.FieldNumber 3)
         (HsProtobufAST.Prim HsProtobufAST.String)
         (HsProtobufAST.Single "schema_url") [] ""]
instance (HsJSONPB.ToJSONPB ScopeSpans) where
  toJSONPB (ScopeSpans f1 f2 f3)
    = HsJSONPB.object
        ["scope"
           .=
             ((Hs.coerce
                 @(Hs.Maybe Opentelemetry.Proto.Common.V1.Common.InstrumentationScope)
                 @(HsProtobuf.Nested Opentelemetry.Proto.Common.V1.Common.InstrumentationScope))
                f1),
         "spans"
           .=
             ((Hs.coerce
                 @(Hs.Vector Opentelemetry.Proto.Trace.V1.Trace.Span)
                 @(HsProtobuf.NestedVec Opentelemetry.Proto.Trace.V1.Trace.Span))
                f2),
         "schema_url"
           .= ((Hs.coerce @Hs.Text @(HsProtobuf.String Hs.Text)) f3)]
  toEncodingPB (ScopeSpans f1 f2 f3)
    = HsJSONPB.pairs
        ["scope"
           .=
             ((Hs.coerce
                 @(Hs.Maybe Opentelemetry.Proto.Common.V1.Common.InstrumentationScope)
                 @(HsProtobuf.Nested Opentelemetry.Proto.Common.V1.Common.InstrumentationScope))
                f1),
         "spans"
           .=
             ((Hs.coerce
                 @(Hs.Vector Opentelemetry.Proto.Trace.V1.Trace.Span)
                 @(HsProtobuf.NestedVec Opentelemetry.Proto.Trace.V1.Trace.Span))
                f2),
         "schema_url"
           .= ((Hs.coerce @Hs.Text @(HsProtobuf.String Hs.Text)) f3)]
instance (HsJSONPB.FromJSONPB ScopeSpans) where
  parseJSONPB
    = HsJSONPB.withObject
        "ScopeSpans"
        (\ obj
           -> Hs.pure ScopeSpans
                <*>
                  ((HsProtobuf.coerceOver
                      @(HsProtobuf.Nested Opentelemetry.Proto.Common.V1.Common.InstrumentationScope)
                      @(Hs.Maybe Opentelemetry.Proto.Common.V1.Common.InstrumentationScope))
                     (obj .: "scope"))
                <*>
                  ((HsProtobuf.coerceOver
                      @(HsProtobuf.NestedVec Opentelemetry.Proto.Trace.V1.Trace.Span)
                      @(Hs.Vector Opentelemetry.Proto.Trace.V1.Trace.Span))
                     (obj .: "spans"))
                <*>
                  ((HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @Hs.Text)
                     (obj .: "schema_url")))
instance (HsJSONPB.ToJSON ScopeSpans) where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding
instance (HsJSONPB.FromJSON ScopeSpans) where
  parseJSON = HsJSONPB.parseJSONPB
instance (HsJSONPB.ToSchema ScopeSpans) where
  declareNamedSchema _
    = do let declare_scope = HsJSONPB.declareSchemaRef
         scopeSpansScope <- declare_scope Proxy.Proxy
         let declare_spans = HsJSONPB.declareSchemaRef
         scopeSpansSpans <- declare_spans Proxy.Proxy
         let declare_schema_url = HsJSONPB.declareSchemaRef
         scopeSpansSchemaUrl <- declare_schema_url Proxy.Proxy
         let _ = Hs.pure ScopeSpans
                   <*>
                     ((HsProtobuf.coerceOver
                         @(HsProtobuf.Nested Opentelemetry.Proto.Common.V1.Common.InstrumentationScope)
                         @(Hs.Maybe Opentelemetry.Proto.Common.V1.Common.InstrumentationScope))
                        (HsJSONPB.asProxy declare_scope))
                   <*>
                     ((HsProtobuf.coerceOver
                         @(HsProtobuf.NestedVec Opentelemetry.Proto.Trace.V1.Trace.Span)
                         @(Hs.Vector Opentelemetry.Proto.Trace.V1.Trace.Span))
                        (HsJSONPB.asProxy declare_spans))
                   <*>
                     ((HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @Hs.Text)
                        (HsJSONPB.asProxy declare_schema_url))
         Hs.return
           HsJSONPB.NamedSchema
             {HsJSONPB._namedSchemaName = Hs.Just "ScopeSpans",
              HsJSONPB._namedSchemaSchema = Hs.mempty
                                              {HsJSONPB._schemaParamSchema = Hs.mempty
                                                                               {HsJSONPB._paramSchemaType = Hs.Just
                                                                                                              HsJSONPB.SwaggerObject},
                                               HsJSONPB._schemaProperties = HsJSONPB.insOrdFromList
                                                                              [("scope", 
                                                                                scopeSpansScope),
                                                                               ("spans", 
                                                                                scopeSpansSpans),
                                                                               ("schema_url", 
                                                                                scopeSpansSchemaUrl)]}}
data Span
  = Span {spanTraceId :: Hs.ByteString,
          spanSpanId :: Hs.ByteString,
          spanTraceState :: Hs.Text,
          spanParentSpanId :: Hs.ByteString,
          spanFlags :: Hs.Word32,
          spanName :: Hs.Text,
          spanKind :: (HsProtobuf.Enumerated Opentelemetry.Proto.Trace.V1.Trace.Span_SpanKind),
          spanStartTimeUnixNano :: Hs.Word64,
          spanEndTimeUnixNano :: Hs.Word64,
          spanAttributes :: (Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue),
          spanDroppedAttributesCount :: Hs.Word32,
          spanEvents :: (Hs.Vector Opentelemetry.Proto.Trace.V1.Trace.Span_Event),
          spanDroppedEventsCount :: Hs.Word32,
          spanLinks :: (Hs.Vector Opentelemetry.Proto.Trace.V1.Trace.Span_Link),
          spanDroppedLinksCount :: Hs.Word32,
          spanStatus :: (Hs.Maybe Opentelemetry.Proto.Trace.V1.Trace.Status)}
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)
instance (Hs.NFData Span)
instance (HsProtobuf.Named Span) where
  nameOf _ = Hs.fromString "Span"
instance (HsProtobuf.HasDefault Span)
instance (HsProtobuf.Message Span) where
  encodeMessage
    _
    Span {spanTraceId, spanSpanId, spanTraceState, spanParentSpanId,
          spanFlags, spanName, spanKind, spanStartTimeUnixNano,
          spanEndTimeUnixNano, spanAttributes, spanDroppedAttributesCount,
          spanEvents, spanDroppedEventsCount, spanLinks,
          spanDroppedLinksCount, spanStatus}
    = Hs.mappend
        (Hs.mappend
           (Hs.mappend
              (Hs.mappend
                 (Hs.mappend
                    (Hs.mappend
                       (Hs.mappend
                          (Hs.mappend
                             (Hs.mappend
                                (Hs.mappend
                                   (Hs.mappend
                                      (Hs.mappend
                                         (Hs.mappend
                                            (Hs.mappend
                                               (Hs.mappend
                                                  (HsProtobuf.encodeMessageField
                                                     (HsProtobuf.FieldNumber 1)
                                                     ((Hs.coerce
                                                         @Hs.ByteString
                                                         @(HsProtobuf.Bytes Hs.ByteString))
                                                        spanTraceId))
                                                  (HsProtobuf.encodeMessageField
                                                     (HsProtobuf.FieldNumber 2)
                                                     ((Hs.coerce
                                                         @Hs.ByteString
                                                         @(HsProtobuf.Bytes Hs.ByteString))
                                                        spanSpanId)))
                                               (HsProtobuf.encodeMessageField
                                                  (HsProtobuf.FieldNumber 3)
                                                  ((Hs.coerce @Hs.Text @(HsProtobuf.String Hs.Text))
                                                     spanTraceState)))
                                            (HsProtobuf.encodeMessageField
                                               (HsProtobuf.FieldNumber 4)
                                               ((Hs.coerce
                                                   @Hs.ByteString @(HsProtobuf.Bytes Hs.ByteString))
                                                  spanParentSpanId)))
                                         (HsProtobuf.encodeMessageField
                                            (HsProtobuf.FieldNumber 16)
                                            ((Hs.coerce @Hs.Word32 @(HsProtobuf.Fixed Hs.Word32))
                                               spanFlags)))
                                      (HsProtobuf.encodeMessageField
                                         (HsProtobuf.FieldNumber 5)
                                         ((Hs.coerce @Hs.Text @(HsProtobuf.String Hs.Text))
                                            spanName)))
                                   (HsProtobuf.encodeMessageField
                                      (HsProtobuf.FieldNumber 6) spanKind))
                                (HsProtobuf.encodeMessageField
                                   (HsProtobuf.FieldNumber 7)
                                   ((Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64))
                                      spanStartTimeUnixNano)))
                             (HsProtobuf.encodeMessageField
                                (HsProtobuf.FieldNumber 8)
                                ((Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64))
                                   spanEndTimeUnixNano)))
                          (HsProtobuf.encodeMessageField
                             (HsProtobuf.FieldNumber 9)
                             ((Hs.coerce
                                 @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
                                 @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue))
                                spanAttributes)))
                       (HsProtobuf.encodeMessageField
                          (HsProtobuf.FieldNumber 10) spanDroppedAttributesCount))
                    (HsProtobuf.encodeMessageField
                       (HsProtobuf.FieldNumber 11)
                       ((Hs.coerce
                           @(Hs.Vector Opentelemetry.Proto.Trace.V1.Trace.Span_Event)
                           @(HsProtobuf.NestedVec Opentelemetry.Proto.Trace.V1.Trace.Span_Event))
                          spanEvents)))
                 (HsProtobuf.encodeMessageField
                    (HsProtobuf.FieldNumber 12) spanDroppedEventsCount))
              (HsProtobuf.encodeMessageField
                 (HsProtobuf.FieldNumber 13)
                 ((Hs.coerce
                     @(Hs.Vector Opentelemetry.Proto.Trace.V1.Trace.Span_Link)
                     @(HsProtobuf.NestedVec Opentelemetry.Proto.Trace.V1.Trace.Span_Link))
                    spanLinks)))
           (HsProtobuf.encodeMessageField
              (HsProtobuf.FieldNumber 14) spanDroppedLinksCount))
        (HsProtobuf.encodeMessageField
           (HsProtobuf.FieldNumber 15)
           ((Hs.coerce
               @(Hs.Maybe Opentelemetry.Proto.Trace.V1.Trace.Status)
               @(HsProtobuf.Nested Opentelemetry.Proto.Trace.V1.Trace.Status))
              spanStatus))
  decodeMessage _
    = Hs.pure Span
        <*>
          ((HsProtobuf.coerceOver
              @(HsProtobuf.Bytes Hs.ByteString) @Hs.ByteString)
             (HsProtobuf.at
                HsProtobuf.decodeMessageField (HsProtobuf.FieldNumber 1)))
        <*>
          ((HsProtobuf.coerceOver
              @(HsProtobuf.Bytes Hs.ByteString) @Hs.ByteString)
             (HsProtobuf.at
                HsProtobuf.decodeMessageField (HsProtobuf.FieldNumber 2)))
        <*>
          ((HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @Hs.Text)
             (HsProtobuf.at
                HsProtobuf.decodeMessageField (HsProtobuf.FieldNumber 3)))
        <*>
          ((HsProtobuf.coerceOver
              @(HsProtobuf.Bytes Hs.ByteString) @Hs.ByteString)
             (HsProtobuf.at
                HsProtobuf.decodeMessageField (HsProtobuf.FieldNumber 4)))
        <*>
          ((HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word32) @Hs.Word32)
             (HsProtobuf.at
                HsProtobuf.decodeMessageField (HsProtobuf.FieldNumber 16)))
        <*>
          ((HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @Hs.Text)
             (HsProtobuf.at
                HsProtobuf.decodeMessageField (HsProtobuf.FieldNumber 5)))
        <*>
          HsProtobuf.at
            HsProtobuf.decodeMessageField (HsProtobuf.FieldNumber 6)
        <*>
          ((HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
             (HsProtobuf.at
                HsProtobuf.decodeMessageField (HsProtobuf.FieldNumber 7)))
        <*>
          ((HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
             (HsProtobuf.at
                HsProtobuf.decodeMessageField (HsProtobuf.FieldNumber 8)))
        <*>
          ((HsProtobuf.coerceOver
              @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue)
              @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue))
             (HsProtobuf.at
                HsProtobuf.decodeMessageField (HsProtobuf.FieldNumber 9)))
        <*>
          HsProtobuf.at
            HsProtobuf.decodeMessageField (HsProtobuf.FieldNumber 10)
        <*>
          ((HsProtobuf.coerceOver
              @(HsProtobuf.NestedVec Opentelemetry.Proto.Trace.V1.Trace.Span_Event)
              @(Hs.Vector Opentelemetry.Proto.Trace.V1.Trace.Span_Event))
             (HsProtobuf.at
                HsProtobuf.decodeMessageField (HsProtobuf.FieldNumber 11)))
        <*>
          HsProtobuf.at
            HsProtobuf.decodeMessageField (HsProtobuf.FieldNumber 12)
        <*>
          ((HsProtobuf.coerceOver
              @(HsProtobuf.NestedVec Opentelemetry.Proto.Trace.V1.Trace.Span_Link)
              @(Hs.Vector Opentelemetry.Proto.Trace.V1.Trace.Span_Link))
             (HsProtobuf.at
                HsProtobuf.decodeMessageField (HsProtobuf.FieldNumber 13)))
        <*>
          HsProtobuf.at
            HsProtobuf.decodeMessageField (HsProtobuf.FieldNumber 14)
        <*>
          ((HsProtobuf.coerceOver
              @(HsProtobuf.Nested Opentelemetry.Proto.Trace.V1.Trace.Status)
              @(Hs.Maybe Opentelemetry.Proto.Trace.V1.Trace.Status))
             (HsProtobuf.at
                HsProtobuf.decodeMessageField (HsProtobuf.FieldNumber 15)))
  dotProto _
    = [HsProtobufAST.DotProtoField
         (HsProtobuf.FieldNumber 1) (HsProtobufAST.Prim HsProtobufAST.Bytes)
         (HsProtobufAST.Single "trace_id") [] "",
       HsProtobufAST.DotProtoField
         (HsProtobuf.FieldNumber 2) (HsProtobufAST.Prim HsProtobufAST.Bytes)
         (HsProtobufAST.Single "span_id") [] "",
       HsProtobufAST.DotProtoField
         (HsProtobuf.FieldNumber 3)
         (HsProtobufAST.Prim HsProtobufAST.String)
         (HsProtobufAST.Single "trace_state") [] "",
       HsProtobufAST.DotProtoField
         (HsProtobuf.FieldNumber 4) (HsProtobufAST.Prim HsProtobufAST.Bytes)
         (HsProtobufAST.Single "parent_span_id") [] "",
       HsProtobufAST.DotProtoField
         (HsProtobuf.FieldNumber 16)
         (HsProtobufAST.Prim HsProtobufAST.Fixed32)
         (HsProtobufAST.Single "flags") [] "",
       HsProtobufAST.DotProtoField
         (HsProtobuf.FieldNumber 5)
         (HsProtobufAST.Prim HsProtobufAST.String)
         (HsProtobufAST.Single "name") [] "",
       HsProtobufAST.DotProtoField
         (HsProtobuf.FieldNumber 6)
         (HsProtobufAST.Prim
            (HsProtobufAST.Named (HsProtobufAST.Single "SpanKind")))
         (HsProtobufAST.Single "kind") [] "",
       HsProtobufAST.DotProtoField
         (HsProtobuf.FieldNumber 7)
         (HsProtobufAST.Prim HsProtobufAST.Fixed64)
         (HsProtobufAST.Single "start_time_unix_nano") [] "",
       HsProtobufAST.DotProtoField
         (HsProtobuf.FieldNumber 8)
         (HsProtobufAST.Prim HsProtobufAST.Fixed64)
         (HsProtobufAST.Single "end_time_unix_nano") [] "",
       HsProtobufAST.DotProtoField
         (HsProtobuf.FieldNumber 9)
         (HsProtobufAST.Repeated
            (HsProtobufAST.Named
               (HsProtobufAST.Dots
                  (HsProtobufAST.Path
                     ("opentelemetry" Hs.:| ["proto", "common", "v1", "KeyValue"])))))
         (HsProtobufAST.Single "attributes") [] "",
       HsProtobufAST.DotProtoField
         (HsProtobuf.FieldNumber 10)
         (HsProtobufAST.Prim HsProtobufAST.UInt32)
         (HsProtobufAST.Single "dropped_attributes_count") [] "",
       HsProtobufAST.DotProtoField
         (HsProtobuf.FieldNumber 11)
         (HsProtobufAST.Repeated
            (HsProtobufAST.Named (HsProtobufAST.Single "Event")))
         (HsProtobufAST.Single "events") [] "",
       HsProtobufAST.DotProtoField
         (HsProtobuf.FieldNumber 12)
         (HsProtobufAST.Prim HsProtobufAST.UInt32)
         (HsProtobufAST.Single "dropped_events_count") [] "",
       HsProtobufAST.DotProtoField
         (HsProtobuf.FieldNumber 13)
         (HsProtobufAST.Repeated
            (HsProtobufAST.Named (HsProtobufAST.Single "Link")))
         (HsProtobufAST.Single "links") [] "",
       HsProtobufAST.DotProtoField
         (HsProtobuf.FieldNumber 14)
         (HsProtobufAST.Prim HsProtobufAST.UInt32)
         (HsProtobufAST.Single "dropped_links_count") [] "",
       HsProtobufAST.DotProtoField
         (HsProtobuf.FieldNumber 15)
         (HsProtobufAST.Prim
            (HsProtobufAST.Named (HsProtobufAST.Single "Status")))
         (HsProtobufAST.Single "status") [] ""]
instance (HsJSONPB.ToJSONPB Span) where
  toJSONPB
    (Span f1 f2 f3 f4 f16 f5 f6 f7 f8 f9 f10 f11 f12 f13 f14 f15)
    = HsJSONPB.object
        ["trace_id"
           .=
             ((Hs.coerce @Hs.ByteString @(HsProtobuf.Bytes Hs.ByteString)) f1),
         "span_id"
           .=
             ((Hs.coerce @Hs.ByteString @(HsProtobuf.Bytes Hs.ByteString)) f2),
         "trace_state"
           .= ((Hs.coerce @Hs.Text @(HsProtobuf.String Hs.Text)) f3),
         "parent_span_id"
           .=
             ((Hs.coerce @Hs.ByteString @(HsProtobuf.Bytes Hs.ByteString)) f4),
         "flags"
           .= ((Hs.coerce @Hs.Word32 @(HsProtobuf.Fixed Hs.Word32)) f16),
         "name" .= ((Hs.coerce @Hs.Text @(HsProtobuf.String Hs.Text)) f5),
         "kind" .= f6,
         "start_time_unix_nano"
           .= ((Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64)) f7),
         "end_time_unix_nano"
           .= ((Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64)) f8),
         "attributes"
           .=
             ((Hs.coerce
                 @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
                 @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue))
                f9),
         "dropped_attributes_count" .= f10,
         "events"
           .=
             ((Hs.coerce
                 @(Hs.Vector Opentelemetry.Proto.Trace.V1.Trace.Span_Event)
                 @(HsProtobuf.NestedVec Opentelemetry.Proto.Trace.V1.Trace.Span_Event))
                f11),
         "dropped_events_count" .= f12,
         "links"
           .=
             ((Hs.coerce
                 @(Hs.Vector Opentelemetry.Proto.Trace.V1.Trace.Span_Link)
                 @(HsProtobuf.NestedVec Opentelemetry.Proto.Trace.V1.Trace.Span_Link))
                f13),
         "dropped_links_count" .= f14,
         "status"
           .=
             ((Hs.coerce
                 @(Hs.Maybe Opentelemetry.Proto.Trace.V1.Trace.Status)
                 @(HsProtobuf.Nested Opentelemetry.Proto.Trace.V1.Trace.Status))
                f15)]
  toEncodingPB
    (Span f1 f2 f3 f4 f16 f5 f6 f7 f8 f9 f10 f11 f12 f13 f14 f15)
    = HsJSONPB.pairs
        ["trace_id"
           .=
             ((Hs.coerce @Hs.ByteString @(HsProtobuf.Bytes Hs.ByteString)) f1),
         "span_id"
           .=
             ((Hs.coerce @Hs.ByteString @(HsProtobuf.Bytes Hs.ByteString)) f2),
         "trace_state"
           .= ((Hs.coerce @Hs.Text @(HsProtobuf.String Hs.Text)) f3),
         "parent_span_id"
           .=
             ((Hs.coerce @Hs.ByteString @(HsProtobuf.Bytes Hs.ByteString)) f4),
         "flags"
           .= ((Hs.coerce @Hs.Word32 @(HsProtobuf.Fixed Hs.Word32)) f16),
         "name" .= ((Hs.coerce @Hs.Text @(HsProtobuf.String Hs.Text)) f5),
         "kind" .= f6,
         "start_time_unix_nano"
           .= ((Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64)) f7),
         "end_time_unix_nano"
           .= ((Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64)) f8),
         "attributes"
           .=
             ((Hs.coerce
                 @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
                 @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue))
                f9),
         "dropped_attributes_count" .= f10,
         "events"
           .=
             ((Hs.coerce
                 @(Hs.Vector Opentelemetry.Proto.Trace.V1.Trace.Span_Event)
                 @(HsProtobuf.NestedVec Opentelemetry.Proto.Trace.V1.Trace.Span_Event))
                f11),
         "dropped_events_count" .= f12,
         "links"
           .=
             ((Hs.coerce
                 @(Hs.Vector Opentelemetry.Proto.Trace.V1.Trace.Span_Link)
                 @(HsProtobuf.NestedVec Opentelemetry.Proto.Trace.V1.Trace.Span_Link))
                f13),
         "dropped_links_count" .= f14,
         "status"
           .=
             ((Hs.coerce
                 @(Hs.Maybe Opentelemetry.Proto.Trace.V1.Trace.Status)
                 @(HsProtobuf.Nested Opentelemetry.Proto.Trace.V1.Trace.Status))
                f15)]
instance (HsJSONPB.FromJSONPB Span) where
  parseJSONPB
    = HsJSONPB.withObject
        "Span"
        (\ obj
           -> Hs.pure Span
                <*>
                  ((HsProtobuf.coerceOver
                      @(HsProtobuf.Bytes Hs.ByteString) @Hs.ByteString)
                     (obj .: "trace_id"))
                <*>
                  ((HsProtobuf.coerceOver
                      @(HsProtobuf.Bytes Hs.ByteString) @Hs.ByteString)
                     (obj .: "span_id"))
                <*>
                  ((HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @Hs.Text)
                     (obj .: "trace_state"))
                <*>
                  ((HsProtobuf.coerceOver
                      @(HsProtobuf.Bytes Hs.ByteString) @Hs.ByteString)
                     (obj .: "parent_span_id"))
                <*>
                  ((HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word32) @Hs.Word32)
                     (obj .: "flags"))
                <*>
                  ((HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @Hs.Text)
                     (obj .: "name"))
                <*> obj .: "kind"
                <*>
                  ((HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
                     (obj .: "start_time_unix_nano"))
                <*>
                  ((HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
                     (obj .: "end_time_unix_nano"))
                <*>
                  ((HsProtobuf.coerceOver
                      @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue)
                      @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue))
                     (obj .: "attributes"))
                <*> obj .: "dropped_attributes_count"
                <*>
                  ((HsProtobuf.coerceOver
                      @(HsProtobuf.NestedVec Opentelemetry.Proto.Trace.V1.Trace.Span_Event)
                      @(Hs.Vector Opentelemetry.Proto.Trace.V1.Trace.Span_Event))
                     (obj .: "events"))
                <*> obj .: "dropped_events_count"
                <*>
                  ((HsProtobuf.coerceOver
                      @(HsProtobuf.NestedVec Opentelemetry.Proto.Trace.V1.Trace.Span_Link)
                      @(Hs.Vector Opentelemetry.Proto.Trace.V1.Trace.Span_Link))
                     (obj .: "links"))
                <*> obj .: "dropped_links_count"
                <*>
                  ((HsProtobuf.coerceOver
                      @(HsProtobuf.Nested Opentelemetry.Proto.Trace.V1.Trace.Status)
                      @(Hs.Maybe Opentelemetry.Proto.Trace.V1.Trace.Status))
                     (obj .: "status")))
instance (HsJSONPB.ToJSON Span) where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding
instance (HsJSONPB.FromJSON Span) where
  parseJSON = HsJSONPB.parseJSONPB
instance (HsJSONPB.ToSchema Span) where
  declareNamedSchema _
    = do let declare_trace_id = HsJSONPB.declareSchemaRef
         spanTraceId <- declare_trace_id Proxy.Proxy
         let declare_span_id = HsJSONPB.declareSchemaRef
         spanSpanId <- declare_span_id Proxy.Proxy
         let declare_trace_state = HsJSONPB.declareSchemaRef
         spanTraceState <- declare_trace_state Proxy.Proxy
         let declare_parent_span_id = HsJSONPB.declareSchemaRef
         spanParentSpanId <- declare_parent_span_id Proxy.Proxy
         let declare_flags = HsJSONPB.declareSchemaRef
         spanFlags <- declare_flags Proxy.Proxy
         let declare_name = HsJSONPB.declareSchemaRef
         spanName <- declare_name Proxy.Proxy
         let declare_kind = HsJSONPB.declareSchemaRef
         spanKind <- declare_kind Proxy.Proxy
         let declare_start_time_unix_nano = HsJSONPB.declareSchemaRef
         spanStartTimeUnixNano <- declare_start_time_unix_nano Proxy.Proxy
         let declare_end_time_unix_nano = HsJSONPB.declareSchemaRef
         spanEndTimeUnixNano <- declare_end_time_unix_nano Proxy.Proxy
         let declare_attributes = HsJSONPB.declareSchemaRef
         spanAttributes <- declare_attributes Proxy.Proxy
         let declare_dropped_attributes_count = HsJSONPB.declareSchemaRef
         spanDroppedAttributesCount <- declare_dropped_attributes_count
                                         Proxy.Proxy
         let declare_events = HsJSONPB.declareSchemaRef
         spanEvents <- declare_events Proxy.Proxy
         let declare_dropped_events_count = HsJSONPB.declareSchemaRef
         spanDroppedEventsCount <- declare_dropped_events_count Proxy.Proxy
         let declare_links = HsJSONPB.declareSchemaRef
         spanLinks <- declare_links Proxy.Proxy
         let declare_dropped_links_count = HsJSONPB.declareSchemaRef
         spanDroppedLinksCount <- declare_dropped_links_count Proxy.Proxy
         let declare_status = HsJSONPB.declareSchemaRef
         spanStatus <- declare_status Proxy.Proxy
         let _ = Hs.pure Span
                   <*>
                     ((HsProtobuf.coerceOver
                         @(HsProtobuf.Bytes Hs.ByteString) @Hs.ByteString)
                        (HsJSONPB.asProxy declare_trace_id))
                   <*>
                     ((HsProtobuf.coerceOver
                         @(HsProtobuf.Bytes Hs.ByteString) @Hs.ByteString)
                        (HsJSONPB.asProxy declare_span_id))
                   <*>
                     ((HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @Hs.Text)
                        (HsJSONPB.asProxy declare_trace_state))
                   <*>
                     ((HsProtobuf.coerceOver
                         @(HsProtobuf.Bytes Hs.ByteString) @Hs.ByteString)
                        (HsJSONPB.asProxy declare_parent_span_id))
                   <*>
                     ((HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word32) @Hs.Word32)
                        (HsJSONPB.asProxy declare_flags))
                   <*>
                     ((HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @Hs.Text)
                        (HsJSONPB.asProxy declare_name))
                   <*> HsJSONPB.asProxy declare_kind
                   <*>
                     ((HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
                        (HsJSONPB.asProxy declare_start_time_unix_nano))
                   <*>
                     ((HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
                        (HsJSONPB.asProxy declare_end_time_unix_nano))
                   <*>
                     ((HsProtobuf.coerceOver
                         @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue)
                         @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue))
                        (HsJSONPB.asProxy declare_attributes))
                   <*> HsJSONPB.asProxy declare_dropped_attributes_count
                   <*>
                     ((HsProtobuf.coerceOver
                         @(HsProtobuf.NestedVec Opentelemetry.Proto.Trace.V1.Trace.Span_Event)
                         @(Hs.Vector Opentelemetry.Proto.Trace.V1.Trace.Span_Event))
                        (HsJSONPB.asProxy declare_events))
                   <*> HsJSONPB.asProxy declare_dropped_events_count
                   <*>
                     ((HsProtobuf.coerceOver
                         @(HsProtobuf.NestedVec Opentelemetry.Proto.Trace.V1.Trace.Span_Link)
                         @(Hs.Vector Opentelemetry.Proto.Trace.V1.Trace.Span_Link))
                        (HsJSONPB.asProxy declare_links))
                   <*> HsJSONPB.asProxy declare_dropped_links_count
                   <*>
                     ((HsProtobuf.coerceOver
                         @(HsProtobuf.Nested Opentelemetry.Proto.Trace.V1.Trace.Status)
                         @(Hs.Maybe Opentelemetry.Proto.Trace.V1.Trace.Status))
                        (HsJSONPB.asProxy declare_status))
         Hs.return
           HsJSONPB.NamedSchema
             {HsJSONPB._namedSchemaName = Hs.Just "Span",
              HsJSONPB._namedSchemaSchema = Hs.mempty
                                              {HsJSONPB._schemaParamSchema = Hs.mempty
                                                                               {HsJSONPB._paramSchemaType = Hs.Just
                                                                                                              HsJSONPB.SwaggerObject},
                                               HsJSONPB._schemaProperties = HsJSONPB.insOrdFromList
                                                                              [("trace_id", 
                                                                                spanTraceId),
                                                                               ("span_id", 
                                                                                spanSpanId),
                                                                               ("trace_state", 
                                                                                spanTraceState),
                                                                               ("parent_span_id", 
                                                                                spanParentSpanId),
                                                                               ("flags", spanFlags),
                                                                               ("name", spanName),
                                                                               ("kind", spanKind),
                                                                               ("start_time_unix_nano", 
                                                                                spanStartTimeUnixNano),
                                                                               ("end_time_unix_nano", 
                                                                                spanEndTimeUnixNano),
                                                                               ("attributes", 
                                                                                spanAttributes),
                                                                               ("dropped_attributes_count", 
                                                                                spanDroppedAttributesCount),
                                                                               ("events", 
                                                                                spanEvents),
                                                                               ("dropped_events_count", 
                                                                                spanDroppedEventsCount),
                                                                               ("links", spanLinks),
                                                                               ("dropped_links_count", 
                                                                                spanDroppedLinksCount),
                                                                               ("status", 
                                                                                spanStatus)]}}
data Span_SpanKind
  = Span_SpanKindSPAN_KIND_UNSPECIFIED |
    Span_SpanKindSPAN_KIND_INTERNAL |
    Span_SpanKindSPAN_KIND_SERVER |
    Span_SpanKindSPAN_KIND_CLIENT |
    Span_SpanKindSPAN_KIND_PRODUCER |
    Span_SpanKindSPAN_KIND_CONSUMER
  deriving (Hs.Show, Hs.Eq, Hs.Generic, Hs.NFData)
instance (HsProtobuf.Named Span_SpanKind) where
  nameOf _ = Hs.fromString "Span_SpanKind"
instance (HsProtobuf.HasDefault Span_SpanKind)
instance (Hs.Bounded Span_SpanKind) where
  minBound = Span_SpanKindSPAN_KIND_UNSPECIFIED
  maxBound = Span_SpanKindSPAN_KIND_CONSUMER
instance (Hs.Ord Span_SpanKind) where
  compare x y
    = Hs.compare
        (HsProtobuf.fromProtoEnum x) (HsProtobuf.fromProtoEnum y)
instance (HsProtobuf.ProtoEnum Span_SpanKind) where
  toProtoEnumMay 0 = Hs.Just Span_SpanKindSPAN_KIND_UNSPECIFIED
  toProtoEnumMay 1 = Hs.Just Span_SpanKindSPAN_KIND_INTERNAL
  toProtoEnumMay 2 = Hs.Just Span_SpanKindSPAN_KIND_SERVER
  toProtoEnumMay 3 = Hs.Just Span_SpanKindSPAN_KIND_CLIENT
  toProtoEnumMay 4 = Hs.Just Span_SpanKindSPAN_KIND_PRODUCER
  toProtoEnumMay 5 = Hs.Just Span_SpanKindSPAN_KIND_CONSUMER
  toProtoEnumMay _ = Hs.Nothing
  fromProtoEnum Span_SpanKindSPAN_KIND_UNSPECIFIED = 0
  fromProtoEnum Span_SpanKindSPAN_KIND_INTERNAL = 1
  fromProtoEnum Span_SpanKindSPAN_KIND_SERVER = 2
  fromProtoEnum Span_SpanKindSPAN_KIND_CLIENT = 3
  fromProtoEnum Span_SpanKindSPAN_KIND_PRODUCER = 4
  fromProtoEnum Span_SpanKindSPAN_KIND_CONSUMER = 5
instance (HsJSONPB.ToJSONPB Span_SpanKind) where
  toJSONPB x _ = HsJSONPB.enumFieldString x
  toEncodingPB x _ = HsJSONPB.enumFieldEncoding x
instance (HsJSONPB.FromJSONPB Span_SpanKind) where
  parseJSONPB (HsJSONPB.String "SPAN_KIND_UNSPECIFIED")
    = Hs.pure Span_SpanKindSPAN_KIND_UNSPECIFIED
  parseJSONPB (HsJSONPB.String "SPAN_KIND_INTERNAL")
    = Hs.pure Span_SpanKindSPAN_KIND_INTERNAL
  parseJSONPB (HsJSONPB.String "SPAN_KIND_SERVER")
    = Hs.pure Span_SpanKindSPAN_KIND_SERVER
  parseJSONPB (HsJSONPB.String "SPAN_KIND_CLIENT")
    = Hs.pure Span_SpanKindSPAN_KIND_CLIENT
  parseJSONPB (HsJSONPB.String "SPAN_KIND_PRODUCER")
    = Hs.pure Span_SpanKindSPAN_KIND_PRODUCER
  parseJSONPB (HsJSONPB.String "SPAN_KIND_CONSUMER")
    = Hs.pure Span_SpanKindSPAN_KIND_CONSUMER
  parseJSONPB v = HsJSONPB.typeMismatch "Span_SpanKind" v
instance (HsJSONPB.ToJSON Span_SpanKind) where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding
instance (HsJSONPB.FromJSON Span_SpanKind) where
  parseJSON = HsJSONPB.parseJSONPB
instance (HsProtobuf.Finite Span_SpanKind)
data Span_Event
  = Span_Event {span_EventTimeUnixNano :: Hs.Word64,
                span_EventName :: Hs.Text,
                span_EventAttributes :: (Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue),
                span_EventDroppedAttributesCount :: Hs.Word32}
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)
instance (Hs.NFData Span_Event)
instance (HsProtobuf.Named Span_Event) where
  nameOf _ = Hs.fromString "Span_Event"
instance (HsProtobuf.HasDefault Span_Event)
instance (HsProtobuf.Message Span_Event) where
  encodeMessage
    _
    Span_Event {span_EventTimeUnixNano, span_EventName,
                span_EventAttributes, span_EventDroppedAttributesCount}
    = Hs.mappend
        (Hs.mappend
           (Hs.mappend
              (HsProtobuf.encodeMessageField
                 (HsProtobuf.FieldNumber 1)
                 ((Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64))
                    span_EventTimeUnixNano))
              (HsProtobuf.encodeMessageField
                 (HsProtobuf.FieldNumber 2)
                 ((Hs.coerce @Hs.Text @(HsProtobuf.String Hs.Text))
                    span_EventName)))
           (HsProtobuf.encodeMessageField
              (HsProtobuf.FieldNumber 3)
              ((Hs.coerce
                  @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
                  @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue))
                 span_EventAttributes)))
        (HsProtobuf.encodeMessageField
           (HsProtobuf.FieldNumber 4) span_EventDroppedAttributesCount)
  decodeMessage _
    = Hs.pure Span_Event
        <*>
          ((HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
             (HsProtobuf.at
                HsProtobuf.decodeMessageField (HsProtobuf.FieldNumber 1)))
        <*>
          ((HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @Hs.Text)
             (HsProtobuf.at
                HsProtobuf.decodeMessageField (HsProtobuf.FieldNumber 2)))
        <*>
          ((HsProtobuf.coerceOver
              @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue)
              @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue))
             (HsProtobuf.at
                HsProtobuf.decodeMessageField (HsProtobuf.FieldNumber 3)))
        <*>
          HsProtobuf.at
            HsProtobuf.decodeMessageField (HsProtobuf.FieldNumber 4)
  dotProto _
    = [HsProtobufAST.DotProtoField
         (HsProtobuf.FieldNumber 1)
         (HsProtobufAST.Prim HsProtobufAST.Fixed64)
         (HsProtobufAST.Single "time_unix_nano") [] "",
       HsProtobufAST.DotProtoField
         (HsProtobuf.FieldNumber 2)
         (HsProtobufAST.Prim HsProtobufAST.String)
         (HsProtobufAST.Single "name") [] "",
       HsProtobufAST.DotProtoField
         (HsProtobuf.FieldNumber 3)
         (HsProtobufAST.Repeated
            (HsProtobufAST.Named
               (HsProtobufAST.Dots
                  (HsProtobufAST.Path
                     ("opentelemetry" Hs.:| ["proto", "common", "v1", "KeyValue"])))))
         (HsProtobufAST.Single "attributes") [] "",
       HsProtobufAST.DotProtoField
         (HsProtobuf.FieldNumber 4)
         (HsProtobufAST.Prim HsProtobufAST.UInt32)
         (HsProtobufAST.Single "dropped_attributes_count") [] ""]
instance (HsJSONPB.ToJSONPB Span_Event) where
  toJSONPB (Span_Event f1 f2 f3 f4)
    = HsJSONPB.object
        ["time_unix_nano"
           .= ((Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64)) f1),
         "name" .= ((Hs.coerce @Hs.Text @(HsProtobuf.String Hs.Text)) f2),
         "attributes"
           .=
             ((Hs.coerce
                 @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
                 @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue))
                f3),
         "dropped_attributes_count" .= f4]
  toEncodingPB (Span_Event f1 f2 f3 f4)
    = HsJSONPB.pairs
        ["time_unix_nano"
           .= ((Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64)) f1),
         "name" .= ((Hs.coerce @Hs.Text @(HsProtobuf.String Hs.Text)) f2),
         "attributes"
           .=
             ((Hs.coerce
                 @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
                 @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue))
                f3),
         "dropped_attributes_count" .= f4]
instance (HsJSONPB.FromJSONPB Span_Event) where
  parseJSONPB
    = HsJSONPB.withObject
        "Span_Event"
        (\ obj
           -> Hs.pure Span_Event
                <*>
                  ((HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
                     (obj .: "time_unix_nano"))
                <*>
                  ((HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @Hs.Text)
                     (obj .: "name"))
                <*>
                  ((HsProtobuf.coerceOver
                      @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue)
                      @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue))
                     (obj .: "attributes"))
                <*> obj .: "dropped_attributes_count")
instance (HsJSONPB.ToJSON Span_Event) where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding
instance (HsJSONPB.FromJSON Span_Event) where
  parseJSON = HsJSONPB.parseJSONPB
instance (HsJSONPB.ToSchema Span_Event) where
  declareNamedSchema _
    = do let declare_time_unix_nano = HsJSONPB.declareSchemaRef
         span_EventTimeUnixNano <- declare_time_unix_nano Proxy.Proxy
         let declare_name = HsJSONPB.declareSchemaRef
         span_EventName <- declare_name Proxy.Proxy
         let declare_attributes = HsJSONPB.declareSchemaRef
         span_EventAttributes <- declare_attributes Proxy.Proxy
         let declare_dropped_attributes_count = HsJSONPB.declareSchemaRef
         span_EventDroppedAttributesCount <- declare_dropped_attributes_count
                                               Proxy.Proxy
         let _ = Hs.pure Span_Event
                   <*>
                     ((HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
                        (HsJSONPB.asProxy declare_time_unix_nano))
                   <*>
                     ((HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @Hs.Text)
                        (HsJSONPB.asProxy declare_name))
                   <*>
                     ((HsProtobuf.coerceOver
                         @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue)
                         @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue))
                        (HsJSONPB.asProxy declare_attributes))
                   <*> HsJSONPB.asProxy declare_dropped_attributes_count
         Hs.return
           HsJSONPB.NamedSchema
             {HsJSONPB._namedSchemaName = Hs.Just "Span_Event",
              HsJSONPB._namedSchemaSchema = Hs.mempty
                                              {HsJSONPB._schemaParamSchema = Hs.mempty
                                                                               {HsJSONPB._paramSchemaType = Hs.Just
                                                                                                              HsJSONPB.SwaggerObject},
                                               HsJSONPB._schemaProperties = HsJSONPB.insOrdFromList
                                                                              [("time_unix_nano", 
                                                                                span_EventTimeUnixNano),
                                                                               ("name", 
                                                                                span_EventName),
                                                                               ("attributes", 
                                                                                span_EventAttributes),
                                                                               ("dropped_attributes_count", 
                                                                                span_EventDroppedAttributesCount)]}}
data Span_Link
  = Span_Link {span_LinkTraceId :: Hs.ByteString,
               span_LinkSpanId :: Hs.ByteString,
               span_LinkTraceState :: Hs.Text,
               span_LinkAttributes :: (Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue),
               span_LinkDroppedAttributesCount :: Hs.Word32,
               span_LinkFlags :: Hs.Word32}
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)
instance (Hs.NFData Span_Link)
instance (HsProtobuf.Named Span_Link) where
  nameOf _ = Hs.fromString "Span_Link"
instance (HsProtobuf.HasDefault Span_Link)
instance (HsProtobuf.Message Span_Link) where
  encodeMessage
    _
    Span_Link {span_LinkTraceId, span_LinkSpanId, span_LinkTraceState,
               span_LinkAttributes, span_LinkDroppedAttributesCount,
               span_LinkFlags}
    = Hs.mappend
        (Hs.mappend
           (Hs.mappend
              (Hs.mappend
                 (Hs.mappend
                    (HsProtobuf.encodeMessageField
                       (HsProtobuf.FieldNumber 1)
                       ((Hs.coerce @Hs.ByteString @(HsProtobuf.Bytes Hs.ByteString))
                          span_LinkTraceId))
                    (HsProtobuf.encodeMessageField
                       (HsProtobuf.FieldNumber 2)
                       ((Hs.coerce @Hs.ByteString @(HsProtobuf.Bytes Hs.ByteString))
                          span_LinkSpanId)))
                 (HsProtobuf.encodeMessageField
                    (HsProtobuf.FieldNumber 3)
                    ((Hs.coerce @Hs.Text @(HsProtobuf.String Hs.Text))
                       span_LinkTraceState)))
              (HsProtobuf.encodeMessageField
                 (HsProtobuf.FieldNumber 4)
                 ((Hs.coerce
                     @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
                     @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue))
                    span_LinkAttributes)))
           (HsProtobuf.encodeMessageField
              (HsProtobuf.FieldNumber 5) span_LinkDroppedAttributesCount))
        (HsProtobuf.encodeMessageField
           (HsProtobuf.FieldNumber 6)
           ((Hs.coerce @Hs.Word32 @(HsProtobuf.Fixed Hs.Word32))
              span_LinkFlags))
  decodeMessage _
    = Hs.pure Span_Link
        <*>
          ((HsProtobuf.coerceOver
              @(HsProtobuf.Bytes Hs.ByteString) @Hs.ByteString)
             (HsProtobuf.at
                HsProtobuf.decodeMessageField (HsProtobuf.FieldNumber 1)))
        <*>
          ((HsProtobuf.coerceOver
              @(HsProtobuf.Bytes Hs.ByteString) @Hs.ByteString)
             (HsProtobuf.at
                HsProtobuf.decodeMessageField (HsProtobuf.FieldNumber 2)))
        <*>
          ((HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @Hs.Text)
             (HsProtobuf.at
                HsProtobuf.decodeMessageField (HsProtobuf.FieldNumber 3)))
        <*>
          ((HsProtobuf.coerceOver
              @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue)
              @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue))
             (HsProtobuf.at
                HsProtobuf.decodeMessageField (HsProtobuf.FieldNumber 4)))
        <*>
          HsProtobuf.at
            HsProtobuf.decodeMessageField (HsProtobuf.FieldNumber 5)
        <*>
          ((HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word32) @Hs.Word32)
             (HsProtobuf.at
                HsProtobuf.decodeMessageField (HsProtobuf.FieldNumber 6)))
  dotProto _
    = [HsProtobufAST.DotProtoField
         (HsProtobuf.FieldNumber 1) (HsProtobufAST.Prim HsProtobufAST.Bytes)
         (HsProtobufAST.Single "trace_id") [] "",
       HsProtobufAST.DotProtoField
         (HsProtobuf.FieldNumber 2) (HsProtobufAST.Prim HsProtobufAST.Bytes)
         (HsProtobufAST.Single "span_id") [] "",
       HsProtobufAST.DotProtoField
         (HsProtobuf.FieldNumber 3)
         (HsProtobufAST.Prim HsProtobufAST.String)
         (HsProtobufAST.Single "trace_state") [] "",
       HsProtobufAST.DotProtoField
         (HsProtobuf.FieldNumber 4)
         (HsProtobufAST.Repeated
            (HsProtobufAST.Named
               (HsProtobufAST.Dots
                  (HsProtobufAST.Path
                     ("opentelemetry" Hs.:| ["proto", "common", "v1", "KeyValue"])))))
         (HsProtobufAST.Single "attributes") [] "",
       HsProtobufAST.DotProtoField
         (HsProtobuf.FieldNumber 5)
         (HsProtobufAST.Prim HsProtobufAST.UInt32)
         (HsProtobufAST.Single "dropped_attributes_count") [] "",
       HsProtobufAST.DotProtoField
         (HsProtobuf.FieldNumber 6)
         (HsProtobufAST.Prim HsProtobufAST.Fixed32)
         (HsProtobufAST.Single "flags") [] ""]
instance (HsJSONPB.ToJSONPB Span_Link) where
  toJSONPB (Span_Link f1 f2 f3 f4 f5 f6)
    = HsJSONPB.object
        ["trace_id"
           .=
             ((Hs.coerce @Hs.ByteString @(HsProtobuf.Bytes Hs.ByteString)) f1),
         "span_id"
           .=
             ((Hs.coerce @Hs.ByteString @(HsProtobuf.Bytes Hs.ByteString)) f2),
         "trace_state"
           .= ((Hs.coerce @Hs.Text @(HsProtobuf.String Hs.Text)) f3),
         "attributes"
           .=
             ((Hs.coerce
                 @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
                 @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue))
                f4),
         "dropped_attributes_count" .= f5,
         "flags"
           .= ((Hs.coerce @Hs.Word32 @(HsProtobuf.Fixed Hs.Word32)) f6)]
  toEncodingPB (Span_Link f1 f2 f3 f4 f5 f6)
    = HsJSONPB.pairs
        ["trace_id"
           .=
             ((Hs.coerce @Hs.ByteString @(HsProtobuf.Bytes Hs.ByteString)) f1),
         "span_id"
           .=
             ((Hs.coerce @Hs.ByteString @(HsProtobuf.Bytes Hs.ByteString)) f2),
         "trace_state"
           .= ((Hs.coerce @Hs.Text @(HsProtobuf.String Hs.Text)) f3),
         "attributes"
           .=
             ((Hs.coerce
                 @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
                 @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue))
                f4),
         "dropped_attributes_count" .= f5,
         "flags"
           .= ((Hs.coerce @Hs.Word32 @(HsProtobuf.Fixed Hs.Word32)) f6)]
instance (HsJSONPB.FromJSONPB Span_Link) where
  parseJSONPB
    = HsJSONPB.withObject
        "Span_Link"
        (\ obj
           -> Hs.pure Span_Link
                <*>
                  ((HsProtobuf.coerceOver
                      @(HsProtobuf.Bytes Hs.ByteString) @Hs.ByteString)
                     (obj .: "trace_id"))
                <*>
                  ((HsProtobuf.coerceOver
                      @(HsProtobuf.Bytes Hs.ByteString) @Hs.ByteString)
                     (obj .: "span_id"))
                <*>
                  ((HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @Hs.Text)
                     (obj .: "trace_state"))
                <*>
                  ((HsProtobuf.coerceOver
                      @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue)
                      @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue))
                     (obj .: "attributes"))
                <*> obj .: "dropped_attributes_count"
                <*>
                  ((HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word32) @Hs.Word32)
                     (obj .: "flags")))
instance (HsJSONPB.ToJSON Span_Link) where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding
instance (HsJSONPB.FromJSON Span_Link) where
  parseJSON = HsJSONPB.parseJSONPB
instance (HsJSONPB.ToSchema Span_Link) where
  declareNamedSchema _
    = do let declare_trace_id = HsJSONPB.declareSchemaRef
         span_LinkTraceId <- declare_trace_id Proxy.Proxy
         let declare_span_id = HsJSONPB.declareSchemaRef
         span_LinkSpanId <- declare_span_id Proxy.Proxy
         let declare_trace_state = HsJSONPB.declareSchemaRef
         span_LinkTraceState <- declare_trace_state Proxy.Proxy
         let declare_attributes = HsJSONPB.declareSchemaRef
         span_LinkAttributes <- declare_attributes Proxy.Proxy
         let declare_dropped_attributes_count = HsJSONPB.declareSchemaRef
         span_LinkDroppedAttributesCount <- declare_dropped_attributes_count
                                              Proxy.Proxy
         let declare_flags = HsJSONPB.declareSchemaRef
         span_LinkFlags <- declare_flags Proxy.Proxy
         let _ = Hs.pure Span_Link
                   <*>
                     ((HsProtobuf.coerceOver
                         @(HsProtobuf.Bytes Hs.ByteString) @Hs.ByteString)
                        (HsJSONPB.asProxy declare_trace_id))
                   <*>
                     ((HsProtobuf.coerceOver
                         @(HsProtobuf.Bytes Hs.ByteString) @Hs.ByteString)
                        (HsJSONPB.asProxy declare_span_id))
                   <*>
                     ((HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @Hs.Text)
                        (HsJSONPB.asProxy declare_trace_state))
                   <*>
                     ((HsProtobuf.coerceOver
                         @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue)
                         @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue))
                        (HsJSONPB.asProxy declare_attributes))
                   <*> HsJSONPB.asProxy declare_dropped_attributes_count
                   <*>
                     ((HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word32) @Hs.Word32)
                        (HsJSONPB.asProxy declare_flags))
         Hs.return
           HsJSONPB.NamedSchema
             {HsJSONPB._namedSchemaName = Hs.Just "Span_Link",
              HsJSONPB._namedSchemaSchema = Hs.mempty
                                              {HsJSONPB._schemaParamSchema = Hs.mempty
                                                                               {HsJSONPB._paramSchemaType = Hs.Just
                                                                                                              HsJSONPB.SwaggerObject},
                                               HsJSONPB._schemaProperties = HsJSONPB.insOrdFromList
                                                                              [("trace_id", 
                                                                                span_LinkTraceId),
                                                                               ("span_id", 
                                                                                span_LinkSpanId),
                                                                               ("trace_state", 
                                                                                span_LinkTraceState),
                                                                               ("attributes", 
                                                                                span_LinkAttributes),
                                                                               ("dropped_attributes_count", 
                                                                                span_LinkDroppedAttributesCount),
                                                                               ("flags", 
                                                                                span_LinkFlags)]}}
data Status
  = Status {statusMessage :: Hs.Text,
            statusCode :: (HsProtobuf.Enumerated Opentelemetry.Proto.Trace.V1.Trace.Status_StatusCode)}
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)
instance (Hs.NFData Status)
instance (HsProtobuf.Named Status) where
  nameOf _ = Hs.fromString "Status"
instance (HsProtobuf.HasDefault Status)
instance (HsProtobuf.Message Status) where
  encodeMessage _ Status {statusMessage, statusCode}
    = Hs.mappend
        (HsProtobuf.encodeMessageField
           (HsProtobuf.FieldNumber 2)
           ((Hs.coerce @Hs.Text @(HsProtobuf.String Hs.Text)) statusMessage))
        (HsProtobuf.encodeMessageField
           (HsProtobuf.FieldNumber 3) statusCode)
  decodeMessage _
    = Hs.pure Status
        <*>
          ((HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @Hs.Text)
             (HsProtobuf.at
                HsProtobuf.decodeMessageField (HsProtobuf.FieldNumber 2)))
        <*>
          HsProtobuf.at
            HsProtobuf.decodeMessageField (HsProtobuf.FieldNumber 3)
  dotProto _
    = [HsProtobufAST.DotProtoField
         (HsProtobuf.FieldNumber 2)
         (HsProtobufAST.Prim HsProtobufAST.String)
         (HsProtobufAST.Single "message") [] "",
       HsProtobufAST.DotProtoField
         (HsProtobuf.FieldNumber 3)
         (HsProtobufAST.Prim
            (HsProtobufAST.Named (HsProtobufAST.Single "StatusCode")))
         (HsProtobufAST.Single "code") [] ""]
instance (HsJSONPB.ToJSONPB Status) where
  toJSONPB (Status f2 f3)
    = HsJSONPB.object
        ["message"
           .= ((Hs.coerce @Hs.Text @(HsProtobuf.String Hs.Text)) f2),
         "code" .= f3]
  toEncodingPB (Status f2 f3)
    = HsJSONPB.pairs
        ["message"
           .= ((Hs.coerce @Hs.Text @(HsProtobuf.String Hs.Text)) f2),
         "code" .= f3]
instance (HsJSONPB.FromJSONPB Status) where
  parseJSONPB
    = HsJSONPB.withObject
        "Status"
        (\ obj
           -> Hs.pure Status
                <*>
                  ((HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @Hs.Text)
                     (obj .: "message"))
                <*> obj .: "code")
instance (HsJSONPB.ToJSON Status) where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding
instance (HsJSONPB.FromJSON Status) where
  parseJSON = HsJSONPB.parseJSONPB
instance (HsJSONPB.ToSchema Status) where
  declareNamedSchema _
    = do let declare_message = HsJSONPB.declareSchemaRef
         statusMessage <- declare_message Proxy.Proxy
         let declare_code = HsJSONPB.declareSchemaRef
         statusCode <- declare_code Proxy.Proxy
         let _ = Hs.pure Status
                   <*>
                     ((HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @Hs.Text)
                        (HsJSONPB.asProxy declare_message))
                   <*> HsJSONPB.asProxy declare_code
         Hs.return
           HsJSONPB.NamedSchema
             {HsJSONPB._namedSchemaName = Hs.Just "Status",
              HsJSONPB._namedSchemaSchema = Hs.mempty
                                              {HsJSONPB._schemaParamSchema = Hs.mempty
                                                                               {HsJSONPB._paramSchemaType = Hs.Just
                                                                                                              HsJSONPB.SwaggerObject},
                                               HsJSONPB._schemaProperties = HsJSONPB.insOrdFromList
                                                                              [("message", 
                                                                                statusMessage),
                                                                               ("code", 
                                                                                statusCode)]}}
data Status_StatusCode
  = Status_StatusCodeSTATUS_CODE_UNSET |
    Status_StatusCodeSTATUS_CODE_OK |
    Status_StatusCodeSTATUS_CODE_ERROR
  deriving (Hs.Show, Hs.Eq, Hs.Generic, Hs.NFData)
instance (HsProtobuf.Named Status_StatusCode) where
  nameOf _ = Hs.fromString "Status_StatusCode"
instance (HsProtobuf.HasDefault Status_StatusCode)
instance (Hs.Bounded Status_StatusCode) where
  minBound = Status_StatusCodeSTATUS_CODE_UNSET
  maxBound = Status_StatusCodeSTATUS_CODE_ERROR
instance (Hs.Ord Status_StatusCode) where
  compare x y
    = Hs.compare
        (HsProtobuf.fromProtoEnum x) (HsProtobuf.fromProtoEnum y)
instance (HsProtobuf.ProtoEnum Status_StatusCode) where
  toProtoEnumMay 0 = Hs.Just Status_StatusCodeSTATUS_CODE_UNSET
  toProtoEnumMay 1 = Hs.Just Status_StatusCodeSTATUS_CODE_OK
  toProtoEnumMay 2 = Hs.Just Status_StatusCodeSTATUS_CODE_ERROR
  toProtoEnumMay _ = Hs.Nothing
  fromProtoEnum Status_StatusCodeSTATUS_CODE_UNSET = 0
  fromProtoEnum Status_StatusCodeSTATUS_CODE_OK = 1
  fromProtoEnum Status_StatusCodeSTATUS_CODE_ERROR = 2
instance (HsJSONPB.ToJSONPB Status_StatusCode) where
  toJSONPB x _ = HsJSONPB.enumFieldString x
  toEncodingPB x _ = HsJSONPB.enumFieldEncoding x
instance (HsJSONPB.FromJSONPB Status_StatusCode) where
  parseJSONPB (HsJSONPB.String "STATUS_CODE_UNSET")
    = Hs.pure Status_StatusCodeSTATUS_CODE_UNSET
  parseJSONPB (HsJSONPB.String "STATUS_CODE_OK")
    = Hs.pure Status_StatusCodeSTATUS_CODE_OK
  parseJSONPB (HsJSONPB.String "STATUS_CODE_ERROR")
    = Hs.pure Status_StatusCodeSTATUS_CODE_ERROR
  parseJSONPB v = HsJSONPB.typeMismatch "Status_StatusCode" v
instance (HsJSONPB.ToJSON Status_StatusCode) where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding
instance (HsJSONPB.FromJSON Status_StatusCode) where
  parseJSON = HsJSONPB.parseJSONPB
instance (HsProtobuf.Finite Status_StatusCode)
data SpanFlags
  = SpanFlagsSPAN_FLAGS_DO_NOT_USE |
    SpanFlagsSPAN_FLAGS_TRACE_FLAGS_MASK |
    SpanFlagsSPAN_FLAGS_CONTEXT_HAS_IS_REMOTE_MASK |
    SpanFlagsSPAN_FLAGS_CONTEXT_IS_REMOTE_MASK
  deriving (Hs.Show, Hs.Eq, Hs.Generic, Hs.NFData)
instance (HsProtobuf.Named SpanFlags) where
  nameOf _ = Hs.fromString "SpanFlags"
instance (HsProtobuf.HasDefault SpanFlags)
instance (Hs.Bounded SpanFlags) where
  minBound = SpanFlagsSPAN_FLAGS_DO_NOT_USE
  maxBound = SpanFlagsSPAN_FLAGS_CONTEXT_IS_REMOTE_MASK
instance (Hs.Ord SpanFlags) where
  compare x y
    = Hs.compare
        (HsProtobuf.fromProtoEnum x) (HsProtobuf.fromProtoEnum y)
instance (HsProtobuf.ProtoEnum SpanFlags) where
  toProtoEnumMay 0 = Hs.Just SpanFlagsSPAN_FLAGS_DO_NOT_USE
  toProtoEnumMay 255 = Hs.Just SpanFlagsSPAN_FLAGS_TRACE_FLAGS_MASK
  toProtoEnumMay 256
    = Hs.Just SpanFlagsSPAN_FLAGS_CONTEXT_HAS_IS_REMOTE_MASK
  toProtoEnumMay 512
    = Hs.Just SpanFlagsSPAN_FLAGS_CONTEXT_IS_REMOTE_MASK
  toProtoEnumMay _ = Hs.Nothing
  fromProtoEnum SpanFlagsSPAN_FLAGS_DO_NOT_USE = 0
  fromProtoEnum SpanFlagsSPAN_FLAGS_TRACE_FLAGS_MASK = 255
  fromProtoEnum SpanFlagsSPAN_FLAGS_CONTEXT_HAS_IS_REMOTE_MASK = 256
  fromProtoEnum SpanFlagsSPAN_FLAGS_CONTEXT_IS_REMOTE_MASK = 512
instance (HsJSONPB.ToJSONPB SpanFlags) where
  toJSONPB x _ = HsJSONPB.enumFieldString x
  toEncodingPB x _ = HsJSONPB.enumFieldEncoding x
instance (HsJSONPB.FromJSONPB SpanFlags) where
  parseJSONPB (HsJSONPB.String "SPAN_FLAGS_DO_NOT_USE")
    = Hs.pure SpanFlagsSPAN_FLAGS_DO_NOT_USE
  parseJSONPB (HsJSONPB.String "SPAN_FLAGS_TRACE_FLAGS_MASK")
    = Hs.pure SpanFlagsSPAN_FLAGS_TRACE_FLAGS_MASK
  parseJSONPB
    (HsJSONPB.String "SPAN_FLAGS_CONTEXT_HAS_IS_REMOTE_MASK")
    = Hs.pure SpanFlagsSPAN_FLAGS_CONTEXT_HAS_IS_REMOTE_MASK
  parseJSONPB (HsJSONPB.String "SPAN_FLAGS_CONTEXT_IS_REMOTE_MASK")
    = Hs.pure SpanFlagsSPAN_FLAGS_CONTEXT_IS_REMOTE_MASK
  parseJSONPB v = HsJSONPB.typeMismatch "SpanFlags" v
instance (HsJSONPB.ToJSON SpanFlags) where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding
instance (HsJSONPB.FromJSON SpanFlags) where
  parseJSON = HsJSONPB.parseJSONPB
instance (HsProtobuf.Finite SpanFlags)