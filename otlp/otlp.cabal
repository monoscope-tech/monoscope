cabal-version:      2.4
name:               otlp

version:            0.1.0

-- Extra doc files to be distributed with the package, such as a CHANGELOG or a
-- README.
-- extra-doc-files:

-- Extra source files to be distributed with the package, such as examples, or
-- a tutorial module.
-- extra-source-files:
--
-- FIXME: It's still unclear to me what would be the best strategy to let users
-- publish packages generated by `cargo-cabal` on Hackage. While it is pretty
-- hazardous to put Rust code in sdist archive (because that would require that
-- the library end-user have a Rust developer environment on this machine and
-- that wouldn't play well with cross-compilation), is it a good idea to
-- package generated platform-dependent library as source?

common warnings
    ghc-options: -Wall

library
    -- Import common warning flags.
    import:           warnings

    -- Modules exported by the library.
    exposed-modules: 
      Opentelemetry.Proto.Collector.Logs.V1.LogsService
      -- Opentelemetry.Proto.Collector.Logs.V1.LogsService_Fields
      Opentelemetry.Proto.Collector.Metrics.V1.MetricsService
      -- Opentelemetry.Proto.Collector.Metrics.V1.MetricsService_Fields
      Opentelemetry.Proto.Collector.Trace.V1.TraceService
      -- Opentelemetry.Proto.Collector.Trace.V1.TraceService_Fields
      Opentelemetry.Proto.Common.V1.Common
      -- Opentelemetry.Proto.Common.V1.Common_Fields
      Opentelemetry.Proto.Logs.V1.Logs
      -- Opentelemetry.Proto.Logs.V1.Logs_Fields
      -- Opentelemetry.Proto.Metrics.Experimental.MetricsConfigService
      -- Opentelemetry.Proto.Metrics.Experimental.MetricsConfigService_Fields
      Opentelemetry.Proto.Metrics.V1.Metrics
      -- Opentelemetry.Proto.Metrics.V1.Metrics_Fields
      Opentelemetry.Proto.Resource.V1.Resource
      -- Opentelemetry.Proto.Resource.V1.Resource_Fields
      Opentelemetry.Proto.Trace.V1.Trace
      -- Opentelemetry.Proto.Trace.V1.Trace_Fields
      -- Opentelemetry.Proto.Trace.V1.TraceConfig
      -- Opentelemetry.Proto.Trace.V1.TraceConfig_Fields

    -- Modules included in this library but not exported.
    -- other-modules:

    -- LANGUAGE extensions used by modules in this package.
    -- other-extensions:

    -- Other library packages from which modules are imported.
    build-depends:    base
      , proto3-wire
      , proto3-suite
      , deepseq
      , containers
      , vector
      , text
      , bytestring
      , grpc-haskell
      , proto-lens
      , proto-lens-runtime

    -- Directories containing source files.
    hs-source-dirs:   src

    -- Base language which the package is written in.
    default-language: Haskell2010
    default-extensions:
      ImportQualifiedPost
      -- BlockArguments
      -- DataKinds
      -- DerivingVia
      -- DeriveAnyClass
      -- DuplicateRecordFields
      -- ExplicitNamespaces
      -- ExtendedDefaultRules
      -- LambdaCase
      -- MultiWayIf
      -- NoImplicitPrelude
      -- OverloadedLabels
      -- OverloadedLists
      -- OverloadedRecordDot
      -- OverloadedStrings
      -- PatternSynonyms
      -- QuasiQuotes
      -- RoleAnnotations
      -- UndecidableInstances
      -- TypeFamilies
      -- RecordWildCards
      -- TemplateHaskell
      -- AllowAmbiguousTypes

