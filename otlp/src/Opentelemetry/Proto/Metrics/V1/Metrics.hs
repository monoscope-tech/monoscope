{-# LANGUAGE DataKinds #-}
{-# LANGUAGE DeriveAnyClass #-}
{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE GADTs #-}
{-# LANGUAGE NamedFieldPuns #-}
{-# LANGUAGE NegativeLiterals #-}
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE TypeApplications #-}
{-# LANGUAGE TypeOperators #-}
{-# OPTIONS_GHC -fno-warn-missing-export-lists #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- | Generated by Haskell protocol buffer compiler. DO NOT EDIT!
module Opentelemetry.Proto.Metrics.V1.Metrics where

import Control.Applicative ((<$>), (<*>), (<|>))
import Control.Applicative qualified as Hs
import Control.DeepSeq qualified as Hs
import Control.Monad qualified as Hs
import Data.ByteString qualified as Hs
import Data.Coerce qualified as Hs
import Data.Int qualified as Hs (Int16, Int32, Int64)
import Data.List.NonEmpty qualified as Hs (NonEmpty (..))
import Data.Map qualified as Hs (Map, mapKeysMonotonic)
import Data.Proxy qualified as Proxy
import Data.String qualified as Hs (fromString)
import Data.Text.Lazy qualified as Hs (Text)
import Data.Vector qualified as Hs (Vector)
import Data.Word qualified as Hs (Word16, Word32, Word64)
import GHC.Enum qualified as Hs
import GHC.Generics qualified as Hs
import Google.Protobuf.Wrappers.Polymorphic qualified as HsProtobuf (
  Wrapped (..),
 )
import Opentelemetry.Proto.Common.V1.Common qualified
import Opentelemetry.Proto.Resource.V1.Resource qualified
import Proto3.Suite.Class qualified as HsProtobuf
import Proto3.Suite.DotProto qualified as HsProtobufAST
import Proto3.Suite.JSONPB ((.:), (.=))
import Proto3.Suite.JSONPB qualified as HsJSONPB
import Proto3.Suite.Types qualified as HsProtobuf
import Proto3.Wire qualified as HsProtobuf
import Proto3.Wire.Decode qualified as HsProtobuf (
  Parser,
  RawField,
 )
import Unsafe.Coerce qualified as Hs
import Prelude qualified as Hs


newtype MetricsData = MetricsData {metricsDataResourceMetrics :: (Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.ResourceMetrics)}
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)
instance (Hs.NFData MetricsData)
instance (HsProtobuf.Named MetricsData) where
  nameOf _ = Hs.fromString "MetricsData"
instance (HsProtobuf.HasDefault MetricsData)
instance (HsProtobuf.Message MetricsData) where
  encodeMessage _ MetricsData{metricsDataResourceMetrics} =
    ( HsProtobuf.encodeMessageField
        (HsProtobuf.FieldNumber 1)
        ( ( Hs.coerce
              @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.ResourceMetrics)
              @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.ResourceMetrics)
          )
            metricsDataResourceMetrics
        )
    )
  decodeMessage _ =
    Hs.pure MetricsData
      <*> ( ( HsProtobuf.coerceOver
                @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.ResourceMetrics)
                @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.ResourceMetrics)
            )
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
  dotProto _ =
    [ HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 1)
        ( HsProtobufAST.Repeated
            (HsProtobufAST.Named (HsProtobufAST.Single "ResourceMetrics"))
        )
        (HsProtobufAST.Single "resource_metrics")
        []
        ""
    ]
instance (HsJSONPB.ToJSONPB MetricsData) where
  toJSONPB (MetricsData f1) =
    HsJSONPB.object
      [ "resource_metrics"
          .= ( ( Hs.coerce
                  @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.ResourceMetrics)
                  @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.ResourceMetrics)
               )
                f1
             )
      ]
  toEncodingPB (MetricsData f1) =
    HsJSONPB.pairs
      [ "resource_metrics"
          .= ( ( Hs.coerce
                  @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.ResourceMetrics)
                  @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.ResourceMetrics)
               )
                f1
             )
      ]
instance (HsJSONPB.FromJSONPB MetricsData) where
  parseJSONPB =
    HsJSONPB.withObject
      "MetricsData"
      ( \obj ->
          Hs.pure MetricsData
            <*> ( ( HsProtobuf.coerceOver
                      @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.ResourceMetrics)
                      @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.ResourceMetrics)
                  )
                    (obj .: "resource_metrics")
                )
      )
instance (HsJSONPB.ToJSON MetricsData) where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding
instance (HsJSONPB.FromJSON MetricsData) where
  parseJSON = HsJSONPB.parseJSONPB
instance (HsJSONPB.ToSchema MetricsData) where
  declareNamedSchema _ =
    do
      let declare_resource_metrics = HsJSONPB.declareSchemaRef
      metricsDataResourceMetrics <- declare_resource_metrics Proxy.Proxy
      let _ =
            Hs.pure MetricsData
              <*> ( ( HsProtobuf.coerceOver
                        @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.ResourceMetrics)
                        @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.ResourceMetrics)
                    )
                      (HsJSONPB.asProxy declare_resource_metrics)
                  )
      Hs.return
        HsJSONPB.NamedSchema
          { HsJSONPB._namedSchemaName = Hs.Just "MetricsData"
          , HsJSONPB._namedSchemaSchema =
              Hs.mempty
                { HsJSONPB._schemaParamSchema =
                    Hs.mempty
                      { HsJSONPB._paramSchemaType =
                          Hs.Just
                            HsJSONPB.SwaggerObject
                      }
                , HsJSONPB._schemaProperties =
                    HsJSONPB.insOrdFromList
                      [
                        ( "resource_metrics"
                        , metricsDataResourceMetrics
                        )
                      ]
                }
          }
data ResourceMetrics = ResourceMetrics
  { resourceMetricsResource :: (Hs.Maybe Opentelemetry.Proto.Resource.V1.Resource.Resource)
  , resourceMetricsScopeMetrics :: (Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.ScopeMetrics)
  , resourceMetricsSchemaUrl :: Hs.Text
  }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)
instance (Hs.NFData ResourceMetrics)
instance (HsProtobuf.Named ResourceMetrics) where
  nameOf _ = Hs.fromString "ResourceMetrics"
instance (HsProtobuf.HasDefault ResourceMetrics)
instance (HsProtobuf.Message ResourceMetrics) where
  encodeMessage
    _
    ResourceMetrics
      { resourceMetricsResource
      , resourceMetricsScopeMetrics
      , resourceMetricsSchemaUrl
      } =
      Hs.mappend
        ( Hs.mappend
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                ( ( Hs.coerce
                      @(Hs.Maybe Opentelemetry.Proto.Resource.V1.Resource.Resource)
                      @(HsProtobuf.Nested Opentelemetry.Proto.Resource.V1.Resource.Resource)
                  )
                    resourceMetricsResource
                )
            )
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                ( ( Hs.coerce
                      @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.ScopeMetrics)
                      @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.ScopeMetrics)
                  )
                    resourceMetricsScopeMetrics
                )
            )
        )
        ( HsProtobuf.encodeMessageField
            (HsProtobuf.FieldNumber 3)
            ( (Hs.coerce @Hs.Text @(HsProtobuf.String Hs.Text))
                resourceMetricsSchemaUrl
            )
        )
  decodeMessage _ =
    Hs.pure ResourceMetrics
      <*> ( ( HsProtobuf.coerceOver
                @(HsProtobuf.Nested Opentelemetry.Proto.Resource.V1.Resource.Resource)
                @(Hs.Maybe Opentelemetry.Proto.Resource.V1.Resource.Resource)
            )
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
      <*> ( ( HsProtobuf.coerceOver
                @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.ScopeMetrics)
                @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.ScopeMetrics)
            )
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 2)
              )
          )
      <*> ( (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @Hs.Text)
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 3)
              )
          )
  dotProto _ =
    [ HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 1)
        ( HsProtobufAST.Prim
            ( HsProtobufAST.Named
                ( HsProtobufAST.Dots
                    ( HsProtobufAST.Path
                        ("opentelemetry" Hs.:| ["proto", "resource", "v1", "Resource"])
                    )
                )
            )
        )
        (HsProtobufAST.Single "resource")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 2)
        ( HsProtobufAST.Repeated
            (HsProtobufAST.Named (HsProtobufAST.Single "ScopeMetrics"))
        )
        (HsProtobufAST.Single "scope_metrics")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 3)
        (HsProtobufAST.Prim HsProtobufAST.String)
        (HsProtobufAST.Single "schema_url")
        []
        ""
    ]
instance (HsJSONPB.ToJSONPB ResourceMetrics) where
  toJSONPB (ResourceMetrics f1 f2 f3) =
    HsJSONPB.object
      [ "resource"
          .= ( ( Hs.coerce
                  @(Hs.Maybe Opentelemetry.Proto.Resource.V1.Resource.Resource)
                  @(HsProtobuf.Nested Opentelemetry.Proto.Resource.V1.Resource.Resource)
               )
                f1
             )
      , "scope_metrics"
          .= ( ( Hs.coerce
                  @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.ScopeMetrics)
                  @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.ScopeMetrics)
               )
                f2
             )
      , "schema_url"
          .= ((Hs.coerce @Hs.Text @(HsProtobuf.String Hs.Text)) f3)
      ]
  toEncodingPB (ResourceMetrics f1 f2 f3) =
    HsJSONPB.pairs
      [ "resource"
          .= ( ( Hs.coerce
                  @(Hs.Maybe Opentelemetry.Proto.Resource.V1.Resource.Resource)
                  @(HsProtobuf.Nested Opentelemetry.Proto.Resource.V1.Resource.Resource)
               )
                f1
             )
      , "scope_metrics"
          .= ( ( Hs.coerce
                  @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.ScopeMetrics)
                  @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.ScopeMetrics)
               )
                f2
             )
      , "schema_url"
          .= ((Hs.coerce @Hs.Text @(HsProtobuf.String Hs.Text)) f3)
      ]
instance (HsJSONPB.FromJSONPB ResourceMetrics) where
  parseJSONPB =
    HsJSONPB.withObject
      "ResourceMetrics"
      ( \obj ->
          Hs.pure ResourceMetrics
            <*> ( ( HsProtobuf.coerceOver
                      @(HsProtobuf.Nested Opentelemetry.Proto.Resource.V1.Resource.Resource)
                      @(Hs.Maybe Opentelemetry.Proto.Resource.V1.Resource.Resource)
                  )
                    (obj .: "resource")
                )
            <*> ( ( HsProtobuf.coerceOver
                      @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.ScopeMetrics)
                      @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.ScopeMetrics)
                  )
                    (obj .: "scope_metrics")
                )
            <*> ( (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @Hs.Text)
                    (obj .: "schema_url")
                )
      )
instance (HsJSONPB.ToJSON ResourceMetrics) where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding
instance (HsJSONPB.FromJSON ResourceMetrics) where
  parseJSON = HsJSONPB.parseJSONPB
instance (HsJSONPB.ToSchema ResourceMetrics) where
  declareNamedSchema _ =
    do
      let declare_resource = HsJSONPB.declareSchemaRef
      resourceMetricsResource <- declare_resource Proxy.Proxy
      let declare_scope_metrics = HsJSONPB.declareSchemaRef
      resourceMetricsScopeMetrics <- declare_scope_metrics Proxy.Proxy
      let declare_schema_url = HsJSONPB.declareSchemaRef
      resourceMetricsSchemaUrl <- declare_schema_url Proxy.Proxy
      let _ =
            Hs.pure ResourceMetrics
              <*> ( ( HsProtobuf.coerceOver
                        @(HsProtobuf.Nested Opentelemetry.Proto.Resource.V1.Resource.Resource)
                        @(Hs.Maybe Opentelemetry.Proto.Resource.V1.Resource.Resource)
                    )
                      (HsJSONPB.asProxy declare_resource)
                  )
              <*> ( ( HsProtobuf.coerceOver
                        @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.ScopeMetrics)
                        @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.ScopeMetrics)
                    )
                      (HsJSONPB.asProxy declare_scope_metrics)
                  )
              <*> ( (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @Hs.Text)
                      (HsJSONPB.asProxy declare_schema_url)
                  )
      Hs.return
        HsJSONPB.NamedSchema
          { HsJSONPB._namedSchemaName = Hs.Just "ResourceMetrics"
          , HsJSONPB._namedSchemaSchema =
              Hs.mempty
                { HsJSONPB._schemaParamSchema =
                    Hs.mempty
                      { HsJSONPB._paramSchemaType =
                          Hs.Just
                            HsJSONPB.SwaggerObject
                      }
                , HsJSONPB._schemaProperties =
                    HsJSONPB.insOrdFromList
                      [
                        ( "resource"
                        , resourceMetricsResource
                        )
                      ,
                        ( "scope_metrics"
                        , resourceMetricsScopeMetrics
                        )
                      ,
                        ( "schema_url"
                        , resourceMetricsSchemaUrl
                        )
                      ]
                }
          }
data ScopeMetrics = ScopeMetrics
  { scopeMetricsScope :: (Hs.Maybe Opentelemetry.Proto.Common.V1.Common.InstrumentationScope)
  , scopeMetricsMetrics :: (Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.Metric)
  , scopeMetricsSchemaUrl :: Hs.Text
  }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)
instance (Hs.NFData ScopeMetrics)
instance (HsProtobuf.Named ScopeMetrics) where
  nameOf _ = Hs.fromString "ScopeMetrics"
instance (HsProtobuf.HasDefault ScopeMetrics)
instance (HsProtobuf.Message ScopeMetrics) where
  encodeMessage
    _
    ScopeMetrics
      { scopeMetricsScope
      , scopeMetricsMetrics
      , scopeMetricsSchemaUrl
      } =
      Hs.mappend
        ( Hs.mappend
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                ( ( Hs.coerce
                      @(Hs.Maybe Opentelemetry.Proto.Common.V1.Common.InstrumentationScope)
                      @(HsProtobuf.Nested Opentelemetry.Proto.Common.V1.Common.InstrumentationScope)
                  )
                    scopeMetricsScope
                )
            )
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                ( ( Hs.coerce
                      @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.Metric)
                      @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.Metric)
                  )
                    scopeMetricsMetrics
                )
            )
        )
        ( HsProtobuf.encodeMessageField
            (HsProtobuf.FieldNumber 3)
            ( (Hs.coerce @Hs.Text @(HsProtobuf.String Hs.Text))
                scopeMetricsSchemaUrl
            )
        )
  decodeMessage _ =
    Hs.pure ScopeMetrics
      <*> ( ( HsProtobuf.coerceOver
                @(HsProtobuf.Nested Opentelemetry.Proto.Common.V1.Common.InstrumentationScope)
                @(Hs.Maybe Opentelemetry.Proto.Common.V1.Common.InstrumentationScope)
            )
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
      <*> ( ( HsProtobuf.coerceOver
                @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.Metric)
                @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.Metric)
            )
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 2)
              )
          )
      <*> ( (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @Hs.Text)
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 3)
              )
          )
  dotProto _ =
    [ HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 1)
        ( HsProtobufAST.Prim
            ( HsProtobufAST.Named
                ( HsProtobufAST.Dots
                    ( HsProtobufAST.Path
                        ( "opentelemetry"
                            Hs.:| ["proto", "common", "v1", "InstrumentationScope"]
                        )
                    )
                )
            )
        )
        (HsProtobufAST.Single "scope")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 2)
        ( HsProtobufAST.Repeated
            (HsProtobufAST.Named (HsProtobufAST.Single "Metric"))
        )
        (HsProtobufAST.Single "metrics")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 3)
        (HsProtobufAST.Prim HsProtobufAST.String)
        (HsProtobufAST.Single "schema_url")
        []
        ""
    ]
instance (HsJSONPB.ToJSONPB ScopeMetrics) where
  toJSONPB (ScopeMetrics f1 f2 f3) =
    HsJSONPB.object
      [ "scope"
          .= ( ( Hs.coerce
                  @(Hs.Maybe Opentelemetry.Proto.Common.V1.Common.InstrumentationScope)
                  @(HsProtobuf.Nested Opentelemetry.Proto.Common.V1.Common.InstrumentationScope)
               )
                f1
             )
      , "metrics"
          .= ( ( Hs.coerce
                  @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.Metric)
                  @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.Metric)
               )
                f2
             )
      , "schema_url"
          .= ((Hs.coerce @Hs.Text @(HsProtobuf.String Hs.Text)) f3)
      ]
  toEncodingPB (ScopeMetrics f1 f2 f3) =
    HsJSONPB.pairs
      [ "scope"
          .= ( ( Hs.coerce
                  @(Hs.Maybe Opentelemetry.Proto.Common.V1.Common.InstrumentationScope)
                  @(HsProtobuf.Nested Opentelemetry.Proto.Common.V1.Common.InstrumentationScope)
               )
                f1
             )
      , "metrics"
          .= ( ( Hs.coerce
                  @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.Metric)
                  @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.Metric)
               )
                f2
             )
      , "schema_url"
          .= ((Hs.coerce @Hs.Text @(HsProtobuf.String Hs.Text)) f3)
      ]
instance (HsJSONPB.FromJSONPB ScopeMetrics) where
  parseJSONPB =
    HsJSONPB.withObject
      "ScopeMetrics"
      ( \obj ->
          Hs.pure ScopeMetrics
            <*> ( ( HsProtobuf.coerceOver
                      @(HsProtobuf.Nested Opentelemetry.Proto.Common.V1.Common.InstrumentationScope)
                      @(Hs.Maybe Opentelemetry.Proto.Common.V1.Common.InstrumentationScope)
                  )
                    (obj .: "scope")
                )
            <*> ( ( HsProtobuf.coerceOver
                      @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.Metric)
                      @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.Metric)
                  )
                    (obj .: "metrics")
                )
            <*> ( (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @Hs.Text)
                    (obj .: "schema_url")
                )
      )
instance (HsJSONPB.ToJSON ScopeMetrics) where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding
instance (HsJSONPB.FromJSON ScopeMetrics) where
  parseJSON = HsJSONPB.parseJSONPB
instance (HsJSONPB.ToSchema ScopeMetrics) where
  declareNamedSchema _ =
    do
      let declare_scope = HsJSONPB.declareSchemaRef
      scopeMetricsScope <- declare_scope Proxy.Proxy
      let declare_metrics = HsJSONPB.declareSchemaRef
      scopeMetricsMetrics <- declare_metrics Proxy.Proxy
      let declare_schema_url = HsJSONPB.declareSchemaRef
      scopeMetricsSchemaUrl <- declare_schema_url Proxy.Proxy
      let _ =
            Hs.pure ScopeMetrics
              <*> ( ( HsProtobuf.coerceOver
                        @(HsProtobuf.Nested Opentelemetry.Proto.Common.V1.Common.InstrumentationScope)
                        @(Hs.Maybe Opentelemetry.Proto.Common.V1.Common.InstrumentationScope)
                    )
                      (HsJSONPB.asProxy declare_scope)
                  )
              <*> ( ( HsProtobuf.coerceOver
                        @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.Metric)
                        @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.Metric)
                    )
                      (HsJSONPB.asProxy declare_metrics)
                  )
              <*> ( (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @Hs.Text)
                      (HsJSONPB.asProxy declare_schema_url)
                  )
      Hs.return
        HsJSONPB.NamedSchema
          { HsJSONPB._namedSchemaName = Hs.Just "ScopeMetrics"
          , HsJSONPB._namedSchemaSchema =
              Hs.mempty
                { HsJSONPB._schemaParamSchema =
                    Hs.mempty
                      { HsJSONPB._paramSchemaType =
                          Hs.Just
                            HsJSONPB.SwaggerObject
                      }
                , HsJSONPB._schemaProperties =
                    HsJSONPB.insOrdFromList
                      [
                        ( "scope"
                        , scopeMetricsScope
                        )
                      ,
                        ( "metrics"
                        , scopeMetricsMetrics
                        )
                      ,
                        ( "schema_url"
                        , scopeMetricsSchemaUrl
                        )
                      ]
                }
          }
data Metric = Metric
  { metricName :: Hs.Text
  , metricDescription :: Hs.Text
  , metricUnit :: Hs.Text
  , metricData :: (Hs.Maybe MetricData)
  , metricMetadata :: (Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
  }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)
instance (Hs.NFData Metric)
instance (HsProtobuf.Named Metric) where
  nameOf _ = Hs.fromString "Metric"
instance (HsProtobuf.HasDefault Metric)
instance (HsProtobuf.Message Metric) where
  encodeMessage
    _
    Metric
      { metricName
      , metricDescription
      , metricUnit
      , metricData
      , metricMetadata
      } =
      Hs.mappend
        ( Hs.mappend
            ( Hs.mappend
                ( Hs.mappend
                    ( HsProtobuf.encodeMessageField
                        (HsProtobuf.FieldNumber 1)
                        ((Hs.coerce @Hs.Text @(HsProtobuf.String Hs.Text)) metricName)
                    )
                    ( HsProtobuf.encodeMessageField
                        (HsProtobuf.FieldNumber 2)
                        ( (Hs.coerce @Hs.Text @(HsProtobuf.String Hs.Text))
                            metricDescription
                        )
                    )
                )
                ( HsProtobuf.encodeMessageField
                    (HsProtobuf.FieldNumber 3)
                    ((Hs.coerce @Hs.Text @(HsProtobuf.String Hs.Text)) metricUnit)
                )
            )
            ( case metricData of
                Hs.Nothing -> Hs.mempty
                Hs.Just x ->
                  case x of
                    MetricDataGauge y ->
                      HsProtobuf.encodeMessageField
                        (HsProtobuf.FieldNumber 5)
                        ( ( Hs.coerce
                              @(Hs.Maybe Opentelemetry.Proto.Metrics.V1.Metrics.Gauge)
                              @(HsProtobuf.Nested Opentelemetry.Proto.Metrics.V1.Metrics.Gauge)
                          )
                            (Hs.Just y)
                        )
                    MetricDataSum y ->
                      HsProtobuf.encodeMessageField
                        (HsProtobuf.FieldNumber 7)
                        ( ( Hs.coerce
                              @(Hs.Maybe Opentelemetry.Proto.Metrics.V1.Metrics.Sum)
                              @(HsProtobuf.Nested Opentelemetry.Proto.Metrics.V1.Metrics.Sum)
                          )
                            (Hs.Just y)
                        )
                    MetricDataHistogram y ->
                      HsProtobuf.encodeMessageField
                        (HsProtobuf.FieldNumber 9)
                        ( ( Hs.coerce
                              @(Hs.Maybe Opentelemetry.Proto.Metrics.V1.Metrics.Histogram)
                              @(HsProtobuf.Nested Opentelemetry.Proto.Metrics.V1.Metrics.Histogram)
                          )
                            (Hs.Just y)
                        )
                    MetricDataExponentialHistogram y ->
                      HsProtobuf.encodeMessageField
                        (HsProtobuf.FieldNumber 10)
                        ( ( Hs.coerce
                              @(Hs.Maybe Opentelemetry.Proto.Metrics.V1.Metrics.ExponentialHistogram)
                              @(HsProtobuf.Nested Opentelemetry.Proto.Metrics.V1.Metrics.ExponentialHistogram)
                          )
                            (Hs.Just y)
                        )
                    MetricDataSummary y ->
                      HsProtobuf.encodeMessageField
                        (HsProtobuf.FieldNumber 11)
                        ( ( Hs.coerce
                              @(Hs.Maybe Opentelemetry.Proto.Metrics.V1.Metrics.Summary)
                              @(HsProtobuf.Nested Opentelemetry.Proto.Metrics.V1.Metrics.Summary)
                          )
                            (Hs.Just y)
                        )
            )
        )
        ( HsProtobuf.encodeMessageField
            (HsProtobuf.FieldNumber 12)
            ( ( Hs.coerce
                  @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
                  @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue)
              )
                metricMetadata
            )
        )
  decodeMessage _ =
    Hs.pure Metric
      <*> ( (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @Hs.Text)
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
      <*> ( (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @Hs.Text)
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 2)
              )
          )
      <*> ( (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @Hs.Text)
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 3)
              )
          )
      <*> HsProtobuf.oneof
        Hs.Nothing
        [
          ( (HsProtobuf.FieldNumber 5)
          , Hs.pure (Hs.fmap MetricDataGauge)
              <*> ( ( HsProtobuf.coerceOver
                        @(HsProtobuf.Nested Opentelemetry.Proto.Metrics.V1.Metrics.Gauge)
                        @(Hs.Maybe Opentelemetry.Proto.Metrics.V1.Metrics.Gauge)
                    )
                      HsProtobuf.decodeMessageField
                  )
          )
        ,
          ( (HsProtobuf.FieldNumber 7)
          , Hs.pure (Hs.fmap MetricDataSum)
              <*> ( ( HsProtobuf.coerceOver
                        @(HsProtobuf.Nested Opentelemetry.Proto.Metrics.V1.Metrics.Sum)
                        @(Hs.Maybe Opentelemetry.Proto.Metrics.V1.Metrics.Sum)
                    )
                      HsProtobuf.decodeMessageField
                  )
          )
        ,
          ( (HsProtobuf.FieldNumber 9)
          , Hs.pure (Hs.fmap MetricDataHistogram)
              <*> ( ( HsProtobuf.coerceOver
                        @(HsProtobuf.Nested Opentelemetry.Proto.Metrics.V1.Metrics.Histogram)
                        @(Hs.Maybe Opentelemetry.Proto.Metrics.V1.Metrics.Histogram)
                    )
                      HsProtobuf.decodeMessageField
                  )
          )
        ,
          ( (HsProtobuf.FieldNumber 10)
          , Hs.pure (Hs.fmap MetricDataExponentialHistogram)
              <*> ( ( HsProtobuf.coerceOver
                        @(HsProtobuf.Nested Opentelemetry.Proto.Metrics.V1.Metrics.ExponentialHistogram)
                        @(Hs.Maybe Opentelemetry.Proto.Metrics.V1.Metrics.ExponentialHistogram)
                    )
                      HsProtobuf.decodeMessageField
                  )
          )
        ,
          ( (HsProtobuf.FieldNumber 11)
          , Hs.pure (Hs.fmap MetricDataSummary)
              <*> ( ( HsProtobuf.coerceOver
                        @(HsProtobuf.Nested Opentelemetry.Proto.Metrics.V1.Metrics.Summary)
                        @(Hs.Maybe Opentelemetry.Proto.Metrics.V1.Metrics.Summary)
                    )
                      HsProtobuf.decodeMessageField
                  )
          )
        ]
      <*> ( ( HsProtobuf.coerceOver
                @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue)
                @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
            )
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 12)
              )
          )
  dotProto _ =
    [ HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 1)
        (HsProtobufAST.Prim HsProtobufAST.String)
        (HsProtobufAST.Single "name")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 2)
        (HsProtobufAST.Prim HsProtobufAST.String)
        (HsProtobufAST.Single "description")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 3)
        (HsProtobufAST.Prim HsProtobufAST.String)
        (HsProtobufAST.Single "unit")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 12)
        ( HsProtobufAST.Repeated
            ( HsProtobufAST.Named
                ( HsProtobufAST.Dots
                    ( HsProtobufAST.Path
                        ("opentelemetry" Hs.:| ["proto", "common", "v1", "KeyValue"])
                    )
                )
            )
        )
        (HsProtobufAST.Single "metadata")
        []
        ""
    ]
instance (HsJSONPB.ToJSONPB Metric) where
  toJSONPB (Metric f1 f2 f3 f5_or_f7_or_f9_or_f10_or_f11 f12) =
    HsJSONPB.object
      [ "name" .= ((Hs.coerce @Hs.Text @(HsProtobuf.String Hs.Text)) f1)
      , "description"
          .= ((Hs.coerce @Hs.Text @(HsProtobuf.String Hs.Text)) f2)
      , "unit" .= ((Hs.coerce @Hs.Text @(HsProtobuf.String Hs.Text)) f3)
      , ( let
            encodeData =
              ( case f5_or_f7_or_f9_or_f10_or_f11 of
                  Hs.Just (MetricDataGauge f5) -> HsJSONPB.pair "gauge" f5
                  Hs.Just (MetricDataSum f7) -> HsJSONPB.pair "sum" f7
                  Hs.Just (MetricDataHistogram f9) -> HsJSONPB.pair "histogram" f9
                  Hs.Just (MetricDataExponentialHistogram f10) ->
                    HsJSONPB.pair "exponential_histogram" f10
                  Hs.Just (MetricDataSummary f11) -> HsJSONPB.pair "summary" f11
                  Hs.Nothing -> Hs.mempty
              )
           in
            ( \options ->
                if HsJSONPB.optEmitNamedOneof options
                  then ("data" .= HsJSONPB.objectOrNull [encodeData] options) options
                  else encodeData options
            )
        )
      , "metadata"
          .= ( ( Hs.coerce
                  @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
                  @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue)
               )
                f12
             )
      ]
  toEncodingPB (Metric f1 f2 f3 f5_or_f7_or_f9_or_f10_or_f11 f12) =
    HsJSONPB.pairs
      [ "name" .= ((Hs.coerce @Hs.Text @(HsProtobuf.String Hs.Text)) f1)
      , "description"
          .= ((Hs.coerce @Hs.Text @(HsProtobuf.String Hs.Text)) f2)
      , "unit" .= ((Hs.coerce @Hs.Text @(HsProtobuf.String Hs.Text)) f3)
      , ( let
            encodeData =
              ( case f5_or_f7_or_f9_or_f10_or_f11 of
                  Hs.Just (MetricDataGauge f5) -> HsJSONPB.pair "gauge" f5
                  Hs.Just (MetricDataSum f7) -> HsJSONPB.pair "sum" f7
                  Hs.Just (MetricDataHistogram f9) -> HsJSONPB.pair "histogram" f9
                  Hs.Just (MetricDataExponentialHistogram f10) ->
                    HsJSONPB.pair "exponential_histogram" f10
                  Hs.Just (MetricDataSummary f11) -> HsJSONPB.pair "summary" f11
                  Hs.Nothing -> Hs.mempty
              )
           in
            ( \options ->
                if HsJSONPB.optEmitNamedOneof options
                  then ("data" .= HsJSONPB.pairsOrNull [encodeData] options) options
                  else encodeData options
            )
        )
      , "metadata"
          .= ( ( Hs.coerce
                  @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
                  @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue)
               )
                f12
             )
      ]
instance (HsJSONPB.FromJSONPB Metric) where
  parseJSONPB =
    HsJSONPB.withObject
      "Metric"
      ( \obj ->
          Hs.pure Metric
            <*> ( (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @Hs.Text)
                    (obj .: "name")
                )
            <*> ( (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @Hs.Text)
                    (obj .: "description")
                )
            <*> ( (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @Hs.Text)
                    (obj .: "unit")
                )
            <*> ( let
                    parseData parseObj =
                      Hs.msum
                        [ Hs.Just Hs.. MetricDataGauge
                            <$> HsJSONPB.parseField parseObj "gauge"
                        , Hs.Just Hs.. MetricDataSum <$> HsJSONPB.parseField parseObj "sum"
                        , Hs.Just Hs.. MetricDataHistogram
                            <$> HsJSONPB.parseField parseObj "histogram"
                        , Hs.Just Hs.. MetricDataExponentialHistogram
                            <$> HsJSONPB.parseField parseObj "exponential_histogram"
                        , Hs.Just Hs.. MetricDataSummary
                            <$> HsJSONPB.parseField parseObj "summary"
                        , Hs.pure Hs.Nothing
                        ]
                   in
                    (obj .: "data" Hs.>>= HsJSONPB.withObject "data" parseData)
                      <|> (parseData obj)
                )
            <*> ( ( HsProtobuf.coerceOver
                      @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue)
                      @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
                  )
                    (obj .: "metadata")
                )
      )
instance (HsJSONPB.ToJSON Metric) where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding
instance (HsJSONPB.FromJSON Metric) where
  parseJSON = HsJSONPB.parseJSONPB
instance (HsJSONPB.ToSchema Metric) where
  declareNamedSchema _ =
    do
      let declare_name = HsJSONPB.declareSchemaRef
      metricName <- declare_name Proxy.Proxy
      let declare_description = HsJSONPB.declareSchemaRef
      metricDescription <- declare_description Proxy.Proxy
      let declare_unit = HsJSONPB.declareSchemaRef
      metricUnit <- declare_unit Proxy.Proxy
      let declare_data = HsJSONPB.declareSchemaRef
      metricData <- declare_data Proxy.Proxy
      let declare_metadata = HsJSONPB.declareSchemaRef
      metricMetadata <- declare_metadata Proxy.Proxy
      let _ =
            Hs.pure Metric
              <*> ( (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @Hs.Text)
                      (HsJSONPB.asProxy declare_name)
                  )
              <*> ( (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @Hs.Text)
                      (HsJSONPB.asProxy declare_description)
                  )
              <*> ( (HsProtobuf.coerceOver @(HsProtobuf.String Hs.Text) @Hs.Text)
                      (HsJSONPB.asProxy declare_unit)
                  )
              <*> HsJSONPB.asProxy declare_data
              <*> ( ( HsProtobuf.coerceOver
                        @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue)
                        @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
                    )
                      (HsJSONPB.asProxy declare_metadata)
                  )
      Hs.return
        HsJSONPB.NamedSchema
          { HsJSONPB._namedSchemaName = Hs.Just "Metric"
          , HsJSONPB._namedSchemaSchema =
              Hs.mempty
                { HsJSONPB._schemaParamSchema =
                    Hs.mempty
                      { HsJSONPB._paramSchemaType =
                          Hs.Just
                            HsJSONPB.SwaggerObject
                      }
                , HsJSONPB._schemaProperties =
                    HsJSONPB.insOrdFromList
                      [ ("name", metricName)
                      ,
                        ( "description"
                        , metricDescription
                        )
                      , ("unit", metricUnit)
                      , ("data", metricData)
                      ,
                        ( "metadata"
                        , metricMetadata
                        )
                      ]
                }
          }
data MetricData
  = MetricDataGauge Opentelemetry.Proto.Metrics.V1.Metrics.Gauge
  | MetricDataSum Opentelemetry.Proto.Metrics.V1.Metrics.Sum
  | MetricDataHistogram Opentelemetry.Proto.Metrics.V1.Metrics.Histogram
  | MetricDataExponentialHistogram Opentelemetry.Proto.Metrics.V1.Metrics.ExponentialHistogram
  | MetricDataSummary Opentelemetry.Proto.Metrics.V1.Metrics.Summary
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)
instance (Hs.NFData MetricData)
instance (HsProtobuf.Named MetricData) where
  nameOf _ = Hs.fromString "MetricData"
instance (HsJSONPB.ToSchema MetricData) where
  declareNamedSchema _ =
    do
      let declare_gauge = HsJSONPB.declareSchemaRef
      metricDataGauge <- declare_gauge Proxy.Proxy
      let _ = Hs.pure MetricDataGauge <*> HsJSONPB.asProxy declare_gauge
      let declare_sum = HsJSONPB.declareSchemaRef
      metricDataSum <- declare_sum Proxy.Proxy
      let _ = Hs.pure MetricDataSum <*> HsJSONPB.asProxy declare_sum
      let declare_histogram = HsJSONPB.declareSchemaRef
      metricDataHistogram <- declare_histogram Proxy.Proxy
      let _ =
            Hs.pure MetricDataHistogram
              <*> HsJSONPB.asProxy declare_histogram
      let declare_exponential_histogram = HsJSONPB.declareSchemaRef
      metricDataExponentialHistogram <-
        declare_exponential_histogram
          Proxy.Proxy
      let _ =
            Hs.pure MetricDataExponentialHistogram
              <*> HsJSONPB.asProxy declare_exponential_histogram
      let declare_summary = HsJSONPB.declareSchemaRef
      metricDataSummary <- declare_summary Proxy.Proxy
      let _ =
            Hs.pure MetricDataSummary
              <*> HsJSONPB.asProxy declare_summary
      Hs.return
        HsJSONPB.NamedSchema
          { HsJSONPB._namedSchemaName = Hs.Just "MetricData"
          , HsJSONPB._namedSchemaSchema =
              Hs.mempty
                { HsJSONPB._schemaParamSchema =
                    Hs.mempty
                      { HsJSONPB._paramSchemaType =
                          Hs.Just
                            HsJSONPB.SwaggerObject
                      }
                , HsJSONPB._schemaProperties =
                    HsJSONPB.insOrdFromList
                      [
                        ( "gauge"
                        , metricDataGauge
                        )
                      ,
                        ( "sum"
                        , metricDataSum
                        )
                      ,
                        ( "histogram"
                        , metricDataHistogram
                        )
                      ,
                        ( "exponential_histogram"
                        , metricDataExponentialHistogram
                        )
                      ,
                        ( "summary"
                        , metricDataSummary
                        )
                      ]
                , HsJSONPB._schemaMinProperties = Hs.Just 1
                , HsJSONPB._schemaMaxProperties = Hs.Just 1
                }
          }
newtype Gauge = Gauge {gaugeDataPoints :: (Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.NumberDataPoint)}
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)
instance (Hs.NFData Gauge)
instance (HsProtobuf.Named Gauge) where
  nameOf _ = Hs.fromString "Gauge"
instance (HsProtobuf.HasDefault Gauge)
instance (HsProtobuf.Message Gauge) where
  encodeMessage _ Gauge{gaugeDataPoints} =
    ( HsProtobuf.encodeMessageField
        (HsProtobuf.FieldNumber 1)
        ( ( Hs.coerce
              @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.NumberDataPoint)
              @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.NumberDataPoint)
          )
            gaugeDataPoints
        )
    )
  decodeMessage _ =
    Hs.pure Gauge
      <*> ( ( HsProtobuf.coerceOver
                @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.NumberDataPoint)
                @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.NumberDataPoint)
            )
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
  dotProto _ =
    [ HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 1)
        ( HsProtobufAST.Repeated
            (HsProtobufAST.Named (HsProtobufAST.Single "NumberDataPoint"))
        )
        (HsProtobufAST.Single "data_points")
        []
        ""
    ]
instance (HsJSONPB.ToJSONPB Gauge) where
  toJSONPB (Gauge f1) =
    HsJSONPB.object
      [ "data_points"
          .= ( ( Hs.coerce
                  @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.NumberDataPoint)
                  @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.NumberDataPoint)
               )
                f1
             )
      ]
  toEncodingPB (Gauge f1) =
    HsJSONPB.pairs
      [ "data_points"
          .= ( ( Hs.coerce
                  @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.NumberDataPoint)
                  @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.NumberDataPoint)
               )
                f1
             )
      ]
instance (HsJSONPB.FromJSONPB Gauge) where
  parseJSONPB =
    HsJSONPB.withObject
      "Gauge"
      ( \obj ->
          Hs.pure Gauge
            <*> ( ( HsProtobuf.coerceOver
                      @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.NumberDataPoint)
                      @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.NumberDataPoint)
                  )
                    (obj .: "data_points")
                )
      )
instance (HsJSONPB.ToJSON Gauge) where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding
instance (HsJSONPB.FromJSON Gauge) where
  parseJSON = HsJSONPB.parseJSONPB
instance (HsJSONPB.ToSchema Gauge) where
  declareNamedSchema _ =
    do
      let declare_data_points = HsJSONPB.declareSchemaRef
      gaugeDataPoints <- declare_data_points Proxy.Proxy
      let _ =
            Hs.pure Gauge
              <*> ( ( HsProtobuf.coerceOver
                        @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.NumberDataPoint)
                        @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.NumberDataPoint)
                    )
                      (HsJSONPB.asProxy declare_data_points)
                  )
      Hs.return
        HsJSONPB.NamedSchema
          { HsJSONPB._namedSchemaName = Hs.Just "Gauge"
          , HsJSONPB._namedSchemaSchema =
              Hs.mempty
                { HsJSONPB._schemaParamSchema =
                    Hs.mempty
                      { HsJSONPB._paramSchemaType =
                          Hs.Just
                            HsJSONPB.SwaggerObject
                      }
                , HsJSONPB._schemaProperties =
                    HsJSONPB.insOrdFromList
                      [
                        ( "data_points"
                        , gaugeDataPoints
                        )
                      ]
                }
          }
data Sum = Sum
  { sumDataPoints :: (Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.NumberDataPoint)
  , sumAggregationTemporality :: (HsProtobuf.Enumerated Opentelemetry.Proto.Metrics.V1.Metrics.AggregationTemporality)
  , sumIsMonotonic :: Hs.Bool
  }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)
instance (Hs.NFData Sum)
instance (HsProtobuf.Named Sum) where
  nameOf _ = Hs.fromString "Sum"
instance (HsProtobuf.HasDefault Sum)
instance (HsProtobuf.Message Sum) where
  encodeMessage
    _
    Sum{sumDataPoints, sumAggregationTemporality, sumIsMonotonic} =
      Hs.mappend
        ( Hs.mappend
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 1)
                ( ( Hs.coerce
                      @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.NumberDataPoint)
                      @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.NumberDataPoint)
                  )
                    sumDataPoints
                )
            )
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 2)
                sumAggregationTemporality
            )
        )
        ( HsProtobuf.encodeMessageField
            (HsProtobuf.FieldNumber 3)
            sumIsMonotonic
        )
  decodeMessage _ =
    Hs.pure Sum
      <*> ( ( HsProtobuf.coerceOver
                @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.NumberDataPoint)
                @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.NumberDataPoint)
            )
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
      <*> HsProtobuf.at
        HsProtobuf.decodeMessageField
        (HsProtobuf.FieldNumber 2)
      <*> HsProtobuf.at
        HsProtobuf.decodeMessageField
        (HsProtobuf.FieldNumber 3)
  dotProto _ =
    [ HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 1)
        ( HsProtobufAST.Repeated
            (HsProtobufAST.Named (HsProtobufAST.Single "NumberDataPoint"))
        )
        (HsProtobufAST.Single "data_points")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 2)
        ( HsProtobufAST.Prim
            ( HsProtobufAST.Named
                (HsProtobufAST.Single "AggregationTemporality")
            )
        )
        (HsProtobufAST.Single "aggregation_temporality")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 3)
        (HsProtobufAST.Prim HsProtobufAST.Bool)
        (HsProtobufAST.Single "is_monotonic")
        []
        ""
    ]
instance (HsJSONPB.ToJSONPB Sum) where
  toJSONPB (Sum f1 f2 f3) =
    HsJSONPB.object
      [ "data_points"
          .= ( ( Hs.coerce
                  @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.NumberDataPoint)
                  @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.NumberDataPoint)
               )
                f1
             )
      , "aggregation_temporality" .= f2
      , "is_monotonic" .= f3
      ]
  toEncodingPB (Sum f1 f2 f3) =
    HsJSONPB.pairs
      [ "data_points"
          .= ( ( Hs.coerce
                  @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.NumberDataPoint)
                  @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.NumberDataPoint)
               )
                f1
             )
      , "aggregation_temporality" .= f2
      , "is_monotonic" .= f3
      ]
instance (HsJSONPB.FromJSONPB Sum) where
  parseJSONPB =
    HsJSONPB.withObject
      "Sum"
      ( \obj ->
          Hs.pure Sum
            <*> ( ( HsProtobuf.coerceOver
                      @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.NumberDataPoint)
                      @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.NumberDataPoint)
                  )
                    (obj .: "data_points")
                )
            <*> obj .: "aggregation_temporality"
            <*> obj .: "is_monotonic"
      )
instance (HsJSONPB.ToJSON Sum) where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding
instance (HsJSONPB.FromJSON Sum) where
  parseJSON = HsJSONPB.parseJSONPB
instance (HsJSONPB.ToSchema Sum) where
  declareNamedSchema _ =
    do
      let declare_data_points = HsJSONPB.declareSchemaRef
      sumDataPoints <- declare_data_points Proxy.Proxy
      let declare_aggregation_temporality = HsJSONPB.declareSchemaRef
      sumAggregationTemporality <-
        declare_aggregation_temporality
          Proxy.Proxy
      let declare_is_monotonic = HsJSONPB.declareSchemaRef
      sumIsMonotonic <- declare_is_monotonic Proxy.Proxy
      let _ =
            Hs.pure Sum
              <*> ( ( HsProtobuf.coerceOver
                        @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.NumberDataPoint)
                        @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.NumberDataPoint)
                    )
                      (HsJSONPB.asProxy declare_data_points)
                  )
              <*> HsJSONPB.asProxy declare_aggregation_temporality
              <*> HsJSONPB.asProxy declare_is_monotonic
      Hs.return
        HsJSONPB.NamedSchema
          { HsJSONPB._namedSchemaName = Hs.Just "Sum"
          , HsJSONPB._namedSchemaSchema =
              Hs.mempty
                { HsJSONPB._schemaParamSchema =
                    Hs.mempty
                      { HsJSONPB._paramSchemaType =
                          Hs.Just
                            HsJSONPB.SwaggerObject
                      }
                , HsJSONPB._schemaProperties =
                    HsJSONPB.insOrdFromList
                      [
                        ( "data_points"
                        , sumDataPoints
                        )
                      ,
                        ( "aggregation_temporality"
                        , sumAggregationTemporality
                        )
                      ,
                        ( "is_monotonic"
                        , sumIsMonotonic
                        )
                      ]
                }
          }
data Histogram = Histogram
  { histogramDataPoints :: (Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.HistogramDataPoint)
  , histogramAggregationTemporality :: (HsProtobuf.Enumerated Opentelemetry.Proto.Metrics.V1.Metrics.AggregationTemporality)
  }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)
instance (Hs.NFData Histogram)
instance (HsProtobuf.Named Histogram) where
  nameOf _ = Hs.fromString "Histogram"
instance (HsProtobuf.HasDefault Histogram)
instance (HsProtobuf.Message Histogram) where
  encodeMessage
    _
    Histogram{histogramDataPoints, histogramAggregationTemporality} =
      Hs.mappend
        ( HsProtobuf.encodeMessageField
            (HsProtobuf.FieldNumber 1)
            ( ( Hs.coerce
                  @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.HistogramDataPoint)
                  @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.HistogramDataPoint)
              )
                histogramDataPoints
            )
        )
        ( HsProtobuf.encodeMessageField
            (HsProtobuf.FieldNumber 2)
            histogramAggregationTemporality
        )
  decodeMessage _ =
    Hs.pure Histogram
      <*> ( ( HsProtobuf.coerceOver
                @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.HistogramDataPoint)
                @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.HistogramDataPoint)
            )
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
      <*> HsProtobuf.at
        HsProtobuf.decodeMessageField
        (HsProtobuf.FieldNumber 2)
  dotProto _ =
    [ HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 1)
        ( HsProtobufAST.Repeated
            (HsProtobufAST.Named (HsProtobufAST.Single "HistogramDataPoint"))
        )
        (HsProtobufAST.Single "data_points")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 2)
        ( HsProtobufAST.Prim
            ( HsProtobufAST.Named
                (HsProtobufAST.Single "AggregationTemporality")
            )
        )
        (HsProtobufAST.Single "aggregation_temporality")
        []
        ""
    ]
instance (HsJSONPB.ToJSONPB Histogram) where
  toJSONPB (Histogram f1 f2) =
    HsJSONPB.object
      [ "data_points"
          .= ( ( Hs.coerce
                  @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.HistogramDataPoint)
                  @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.HistogramDataPoint)
               )
                f1
             )
      , "aggregation_temporality" .= f2
      ]
  toEncodingPB (Histogram f1 f2) =
    HsJSONPB.pairs
      [ "data_points"
          .= ( ( Hs.coerce
                  @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.HistogramDataPoint)
                  @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.HistogramDataPoint)
               )
                f1
             )
      , "aggregation_temporality" .= f2
      ]
instance (HsJSONPB.FromJSONPB Histogram) where
  parseJSONPB =
    HsJSONPB.withObject
      "Histogram"
      ( \obj ->
          Hs.pure Histogram
            <*> ( ( HsProtobuf.coerceOver
                      @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.HistogramDataPoint)
                      @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.HistogramDataPoint)
                  )
                    (obj .: "data_points")
                )
            <*> obj .: "aggregation_temporality"
      )
instance (HsJSONPB.ToJSON Histogram) where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding
instance (HsJSONPB.FromJSON Histogram) where
  parseJSON = HsJSONPB.parseJSONPB
instance (HsJSONPB.ToSchema Histogram) where
  declareNamedSchema _ =
    do
      let declare_data_points = HsJSONPB.declareSchemaRef
      histogramDataPoints <- declare_data_points Proxy.Proxy
      let declare_aggregation_temporality = HsJSONPB.declareSchemaRef
      histogramAggregationTemporality <-
        declare_aggregation_temporality
          Proxy.Proxy
      let _ =
            Hs.pure Histogram
              <*> ( ( HsProtobuf.coerceOver
                        @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.HistogramDataPoint)
                        @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.HistogramDataPoint)
                    )
                      (HsJSONPB.asProxy declare_data_points)
                  )
              <*> HsJSONPB.asProxy declare_aggregation_temporality
      Hs.return
        HsJSONPB.NamedSchema
          { HsJSONPB._namedSchemaName = Hs.Just "Histogram"
          , HsJSONPB._namedSchemaSchema =
              Hs.mempty
                { HsJSONPB._schemaParamSchema =
                    Hs.mempty
                      { HsJSONPB._paramSchemaType =
                          Hs.Just
                            HsJSONPB.SwaggerObject
                      }
                , HsJSONPB._schemaProperties =
                    HsJSONPB.insOrdFromList
                      [
                        ( "data_points"
                        , histogramDataPoints
                        )
                      ,
                        ( "aggregation_temporality"
                        , histogramAggregationTemporality
                        )
                      ]
                }
          }
data ExponentialHistogram = ExponentialHistogram
  { exponentialHistogramDataPoints :: (Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.ExponentialHistogramDataPoint)
  , exponentialHistogramAggregationTemporality :: (HsProtobuf.Enumerated Opentelemetry.Proto.Metrics.V1.Metrics.AggregationTemporality)
  }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)
instance (Hs.NFData ExponentialHistogram)
instance (HsProtobuf.Named ExponentialHistogram) where
  nameOf _ = Hs.fromString "ExponentialHistogram"
instance (HsProtobuf.HasDefault ExponentialHistogram)
instance (HsProtobuf.Message ExponentialHistogram) where
  encodeMessage
    _
    ExponentialHistogram
      { exponentialHistogramDataPoints
      , exponentialHistogramAggregationTemporality
      } =
      Hs.mappend
        ( HsProtobuf.encodeMessageField
            (HsProtobuf.FieldNumber 1)
            ( ( Hs.coerce
                  @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.ExponentialHistogramDataPoint)
                  @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.ExponentialHistogramDataPoint)
              )
                exponentialHistogramDataPoints
            )
        )
        ( HsProtobuf.encodeMessageField
            (HsProtobuf.FieldNumber 2)
            exponentialHistogramAggregationTemporality
        )
  decodeMessage _ =
    Hs.pure ExponentialHistogram
      <*> ( ( HsProtobuf.coerceOver
                @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.ExponentialHistogramDataPoint)
                @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.ExponentialHistogramDataPoint)
            )
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
      <*> HsProtobuf.at
        HsProtobuf.decodeMessageField
        (HsProtobuf.FieldNumber 2)
  dotProto _ =
    [ HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 1)
        ( HsProtobufAST.Repeated
            ( HsProtobufAST.Named
                (HsProtobufAST.Single "ExponentialHistogramDataPoint")
            )
        )
        (HsProtobufAST.Single "data_points")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 2)
        ( HsProtobufAST.Prim
            ( HsProtobufAST.Named
                (HsProtobufAST.Single "AggregationTemporality")
            )
        )
        (HsProtobufAST.Single "aggregation_temporality")
        []
        ""
    ]
instance (HsJSONPB.ToJSONPB ExponentialHistogram) where
  toJSONPB (ExponentialHistogram f1 f2) =
    HsJSONPB.object
      [ "data_points"
          .= ( ( Hs.coerce
                  @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.ExponentialHistogramDataPoint)
                  @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.ExponentialHistogramDataPoint)
               )
                f1
             )
      , "aggregation_temporality" .= f2
      ]
  toEncodingPB (ExponentialHistogram f1 f2) =
    HsJSONPB.pairs
      [ "data_points"
          .= ( ( Hs.coerce
                  @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.ExponentialHistogramDataPoint)
                  @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.ExponentialHistogramDataPoint)
               )
                f1
             )
      , "aggregation_temporality" .= f2
      ]
instance (HsJSONPB.FromJSONPB ExponentialHistogram) where
  parseJSONPB =
    HsJSONPB.withObject
      "ExponentialHistogram"
      ( \obj ->
          Hs.pure ExponentialHistogram
            <*> ( ( HsProtobuf.coerceOver
                      @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.ExponentialHistogramDataPoint)
                      @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.ExponentialHistogramDataPoint)
                  )
                    (obj .: "data_points")
                )
            <*> obj .: "aggregation_temporality"
      )
instance (HsJSONPB.ToJSON ExponentialHistogram) where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding
instance (HsJSONPB.FromJSON ExponentialHistogram) where
  parseJSON = HsJSONPB.parseJSONPB
instance (HsJSONPB.ToSchema ExponentialHistogram) where
  declareNamedSchema _ =
    do
      let declare_data_points = HsJSONPB.declareSchemaRef
      exponentialHistogramDataPoints <- declare_data_points Proxy.Proxy
      let declare_aggregation_temporality = HsJSONPB.declareSchemaRef
      exponentialHistogramAggregationTemporality <-
        declare_aggregation_temporality
          Proxy.Proxy
      let _ =
            Hs.pure ExponentialHistogram
              <*> ( ( HsProtobuf.coerceOver
                        @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.ExponentialHistogramDataPoint)
                        @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.ExponentialHistogramDataPoint)
                    )
                      (HsJSONPB.asProxy declare_data_points)
                  )
              <*> HsJSONPB.asProxy declare_aggregation_temporality
      Hs.return
        HsJSONPB.NamedSchema
          { HsJSONPB._namedSchemaName = Hs.Just "ExponentialHistogram"
          , HsJSONPB._namedSchemaSchema =
              Hs.mempty
                { HsJSONPB._schemaParamSchema =
                    Hs.mempty
                      { HsJSONPB._paramSchemaType =
                          Hs.Just
                            HsJSONPB.SwaggerObject
                      }
                , HsJSONPB._schemaProperties =
                    HsJSONPB.insOrdFromList
                      [
                        ( "data_points"
                        , exponentialHistogramDataPoints
                        )
                      ,
                        ( "aggregation_temporality"
                        , exponentialHistogramAggregationTemporality
                        )
                      ]
                }
          }
newtype Summary = Summary {summaryDataPoints :: (Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.SummaryDataPoint)}
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)
instance (Hs.NFData Summary)
instance (HsProtobuf.Named Summary) where
  nameOf _ = Hs.fromString "Summary"
instance (HsProtobuf.HasDefault Summary)
instance (HsProtobuf.Message Summary) where
  encodeMessage _ Summary{summaryDataPoints} =
    ( HsProtobuf.encodeMessageField
        (HsProtobuf.FieldNumber 1)
        ( ( Hs.coerce
              @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.SummaryDataPoint)
              @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.SummaryDataPoint)
          )
            summaryDataPoints
        )
    )
  decodeMessage _ =
    Hs.pure Summary
      <*> ( ( HsProtobuf.coerceOver
                @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.SummaryDataPoint)
                @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.SummaryDataPoint)
            )
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
  dotProto _ =
    [ HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 1)
        ( HsProtobufAST.Repeated
            (HsProtobufAST.Named (HsProtobufAST.Single "SummaryDataPoint"))
        )
        (HsProtobufAST.Single "data_points")
        []
        ""
    ]
instance (HsJSONPB.ToJSONPB Summary) where
  toJSONPB (Summary f1) =
    HsJSONPB.object
      [ "data_points"
          .= ( ( Hs.coerce
                  @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.SummaryDataPoint)
                  @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.SummaryDataPoint)
               )
                f1
             )
      ]
  toEncodingPB (Summary f1) =
    HsJSONPB.pairs
      [ "data_points"
          .= ( ( Hs.coerce
                  @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.SummaryDataPoint)
                  @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.SummaryDataPoint)
               )
                f1
             )
      ]
instance (HsJSONPB.FromJSONPB Summary) where
  parseJSONPB =
    HsJSONPB.withObject
      "Summary"
      ( \obj ->
          Hs.pure Summary
            <*> ( ( HsProtobuf.coerceOver
                      @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.SummaryDataPoint)
                      @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.SummaryDataPoint)
                  )
                    (obj .: "data_points")
                )
      )
instance (HsJSONPB.ToJSON Summary) where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding
instance (HsJSONPB.FromJSON Summary) where
  parseJSON = HsJSONPB.parseJSONPB
instance (HsJSONPB.ToSchema Summary) where
  declareNamedSchema _ =
    do
      let declare_data_points = HsJSONPB.declareSchemaRef
      summaryDataPoints <- declare_data_points Proxy.Proxy
      let _ =
            Hs.pure Summary
              <*> ( ( HsProtobuf.coerceOver
                        @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.SummaryDataPoint)
                        @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.SummaryDataPoint)
                    )
                      (HsJSONPB.asProxy declare_data_points)
                  )
      Hs.return
        HsJSONPB.NamedSchema
          { HsJSONPB._namedSchemaName = Hs.Just "Summary"
          , HsJSONPB._namedSchemaSchema =
              Hs.mempty
                { HsJSONPB._schemaParamSchema =
                    Hs.mempty
                      { HsJSONPB._paramSchemaType =
                          Hs.Just
                            HsJSONPB.SwaggerObject
                      }
                , HsJSONPB._schemaProperties =
                    HsJSONPB.insOrdFromList
                      [
                        ( "data_points"
                        , summaryDataPoints
                        )
                      ]
                }
          }
data AggregationTemporality
  = AggregationTemporalityAGGREGATION_TEMPORALITY_UNSPECIFIED
  | AggregationTemporalityAGGREGATION_TEMPORALITY_DELTA
  | AggregationTemporalityAGGREGATION_TEMPORALITY_CUMULATIVE
  deriving (Hs.Show, Hs.Eq, Hs.Generic, Hs.NFData)
instance (HsProtobuf.Named AggregationTemporality) where
  nameOf _ = Hs.fromString "AggregationTemporality"
instance (HsProtobuf.HasDefault AggregationTemporality)
instance (Hs.Bounded AggregationTemporality) where
  minBound =
    AggregationTemporalityAGGREGATION_TEMPORALITY_UNSPECIFIED
  maxBound = AggregationTemporalityAGGREGATION_TEMPORALITY_CUMULATIVE
instance (Hs.Ord AggregationTemporality) where
  compare x y =
    Hs.compare
      (HsProtobuf.fromProtoEnum x)
      (HsProtobuf.fromProtoEnum y)
instance (HsProtobuf.ProtoEnum AggregationTemporality) where
  toProtoEnumMay 0 =
    Hs.Just AggregationTemporalityAGGREGATION_TEMPORALITY_UNSPECIFIED
  toProtoEnumMay 1 =
    Hs.Just AggregationTemporalityAGGREGATION_TEMPORALITY_DELTA
  toProtoEnumMay 2 =
    Hs.Just AggregationTemporalityAGGREGATION_TEMPORALITY_CUMULATIVE
  toProtoEnumMay _ = Hs.Nothing
  fromProtoEnum
    AggregationTemporalityAGGREGATION_TEMPORALITY_UNSPECIFIED =
      0
  fromProtoEnum AggregationTemporalityAGGREGATION_TEMPORALITY_DELTA =
    1
  fromProtoEnum
    AggregationTemporalityAGGREGATION_TEMPORALITY_CUMULATIVE =
      2
instance (HsJSONPB.ToJSONPB AggregationTemporality) where
  toJSONPB x _ = HsJSONPB.enumFieldString x
  toEncodingPB x _ = HsJSONPB.enumFieldEncoding x
instance (HsJSONPB.FromJSONPB AggregationTemporality) where
  parseJSONPB (HsJSONPB.String "AGGREGATION_TEMPORALITY_UNSPECIFIED") =
    Hs.pure AggregationTemporalityAGGREGATION_TEMPORALITY_UNSPECIFIED
  parseJSONPB (HsJSONPB.String "AGGREGATION_TEMPORALITY_DELTA") =
    Hs.pure AggregationTemporalityAGGREGATION_TEMPORALITY_DELTA
  parseJSONPB (HsJSONPB.String "AGGREGATION_TEMPORALITY_CUMULATIVE") =
    Hs.pure AggregationTemporalityAGGREGATION_TEMPORALITY_CUMULATIVE
  parseJSONPB v = HsJSONPB.typeMismatch "AggregationTemporality" v
instance (HsJSONPB.ToJSON AggregationTemporality) where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding
instance (HsJSONPB.FromJSON AggregationTemporality) where
  parseJSON = HsJSONPB.parseJSONPB
instance (HsProtobuf.Finite AggregationTemporality)
data DataPointFlags
  = DataPointFlagsDATA_POINT_FLAGS_DO_NOT_USE
  | DataPointFlagsDATA_POINT_FLAGS_NO_RECORDED_VALUE_MASK
  deriving (Hs.Show, Hs.Eq, Hs.Generic, Hs.NFData)
instance (HsProtobuf.Named DataPointFlags) where
  nameOf _ = Hs.fromString "DataPointFlags"
instance (HsProtobuf.HasDefault DataPointFlags)
instance (Hs.Bounded DataPointFlags) where
  minBound = DataPointFlagsDATA_POINT_FLAGS_DO_NOT_USE
  maxBound = DataPointFlagsDATA_POINT_FLAGS_NO_RECORDED_VALUE_MASK
instance (Hs.Ord DataPointFlags) where
  compare x y =
    Hs.compare
      (HsProtobuf.fromProtoEnum x)
      (HsProtobuf.fromProtoEnum y)
instance (HsProtobuf.ProtoEnum DataPointFlags) where
  toProtoEnumMay 0 =
    Hs.Just DataPointFlagsDATA_POINT_FLAGS_DO_NOT_USE
  toProtoEnumMay 1 =
    Hs.Just DataPointFlagsDATA_POINT_FLAGS_NO_RECORDED_VALUE_MASK
  toProtoEnumMay _ = Hs.Nothing
  fromProtoEnum DataPointFlagsDATA_POINT_FLAGS_DO_NOT_USE = 0
  fromProtoEnum DataPointFlagsDATA_POINT_FLAGS_NO_RECORDED_VALUE_MASK =
    1
instance (HsJSONPB.ToJSONPB DataPointFlags) where
  toJSONPB x _ = HsJSONPB.enumFieldString x
  toEncodingPB x _ = HsJSONPB.enumFieldEncoding x
instance (HsJSONPB.FromJSONPB DataPointFlags) where
  parseJSONPB (HsJSONPB.String "DATA_POINT_FLAGS_DO_NOT_USE") =
    Hs.pure DataPointFlagsDATA_POINT_FLAGS_DO_NOT_USE
  parseJSONPB
    (HsJSONPB.String "DATA_POINT_FLAGS_NO_RECORDED_VALUE_MASK") =
      Hs.pure DataPointFlagsDATA_POINT_FLAGS_NO_RECORDED_VALUE_MASK
  parseJSONPB v = HsJSONPB.typeMismatch "DataPointFlags" v
instance (HsJSONPB.ToJSON DataPointFlags) where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding
instance (HsJSONPB.FromJSON DataPointFlags) where
  parseJSON = HsJSONPB.parseJSONPB
instance (HsProtobuf.Finite DataPointFlags)
data NumberDataPoint = NumberDataPoint
  { numberDataPointAttributes :: (Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
  , numberDataPointStartTimeUnixNano :: Hs.Word64
  , numberDataPointTimeUnixNano :: Hs.Word64
  , numberDataPointValue :: (Hs.Maybe NumberDataPointValue)
  , numberDataPointExemplars :: (Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.Exemplar)
  , numberDataPointFlags :: Hs.Word32
  }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)
instance (Hs.NFData NumberDataPoint)
instance (HsProtobuf.Named NumberDataPoint) where
  nameOf _ = Hs.fromString "NumberDataPoint"
instance (HsProtobuf.HasDefault NumberDataPoint)
instance (HsProtobuf.Message NumberDataPoint) where
  encodeMessage
    _
    NumberDataPoint
      { numberDataPointAttributes
      , numberDataPointStartTimeUnixNano
      , numberDataPointTimeUnixNano
      , numberDataPointValue
      , numberDataPointExemplars
      , numberDataPointFlags
      } =
      Hs.mappend
        ( Hs.mappend
            ( Hs.mappend
                ( Hs.mappend
                    ( Hs.mappend
                        ( HsProtobuf.encodeMessageField
                            (HsProtobuf.FieldNumber 7)
                            ( ( Hs.coerce
                                  @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
                                  @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue)
                              )
                                numberDataPointAttributes
                            )
                        )
                        ( HsProtobuf.encodeMessageField
                            (HsProtobuf.FieldNumber 2)
                            ( (Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64))
                                numberDataPointStartTimeUnixNano
                            )
                        )
                    )
                    ( HsProtobuf.encodeMessageField
                        (HsProtobuf.FieldNumber 3)
                        ( (Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64))
                            numberDataPointTimeUnixNano
                        )
                    )
                )
                ( case numberDataPointValue of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x ->
                      case x of
                        NumberDataPointValueAsDouble y ->
                          HsProtobuf.encodeMessageField
                            (HsProtobuf.FieldNumber 4)
                            (HsProtobuf.ForceEmit y)
                        NumberDataPointValueAsInt y ->
                          HsProtobuf.encodeMessageField
                            (HsProtobuf.FieldNumber 6)
                            ( HsProtobuf.ForceEmit
                                ( ( Hs.coerce
                                      @Hs.Int64
                                      @(HsProtobuf.Signed (HsProtobuf.Fixed Hs.Int64))
                                  )
                                    y
                                )
                            )
                )
            )
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 5)
                ( ( Hs.coerce
                      @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.Exemplar)
                      @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.Exemplar)
                  )
                    numberDataPointExemplars
                )
            )
        )
        ( HsProtobuf.encodeMessageField
            (HsProtobuf.FieldNumber 8)
            numberDataPointFlags
        )
  decodeMessage _ =
    Hs.pure NumberDataPoint
      <*> ( ( HsProtobuf.coerceOver
                @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue)
                @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
            )
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 7)
              )
          )
      <*> ( (HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 2)
              )
          )
      <*> ( (HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 3)
              )
          )
      <*> HsProtobuf.oneof
        Hs.Nothing
        [
          ( (HsProtobuf.FieldNumber 4)
          , Hs.pure (Hs.Just Hs.. NumberDataPointValueAsDouble)
              <*> HsProtobuf.decodeMessageField
          )
        ,
          ( (HsProtobuf.FieldNumber 6)
          , Hs.pure (Hs.Just Hs.. NumberDataPointValueAsInt)
              <*> ( ( HsProtobuf.coerceOver
                        @(HsProtobuf.Signed (HsProtobuf.Fixed Hs.Int64))
                        @Hs.Int64
                    )
                      HsProtobuf.decodeMessageField
                  )
          )
        ]
      <*> ( ( HsProtobuf.coerceOver
                @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.Exemplar)
                @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.Exemplar)
            )
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 5)
              )
          )
      <*> HsProtobuf.at
        HsProtobuf.decodeMessageField
        (HsProtobuf.FieldNumber 8)
  dotProto _ =
    [ HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 7)
        ( HsProtobufAST.Repeated
            ( HsProtobufAST.Named
                ( HsProtobufAST.Dots
                    ( HsProtobufAST.Path
                        ("opentelemetry" Hs.:| ["proto", "common", "v1", "KeyValue"])
                    )
                )
            )
        )
        (HsProtobufAST.Single "attributes")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 2)
        (HsProtobufAST.Prim HsProtobufAST.Fixed64)
        (HsProtobufAST.Single "start_time_unix_nano")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 3)
        (HsProtobufAST.Prim HsProtobufAST.Fixed64)
        (HsProtobufAST.Single "time_unix_nano")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 5)
        ( HsProtobufAST.Repeated
            (HsProtobufAST.Named (HsProtobufAST.Single "Exemplar"))
        )
        (HsProtobufAST.Single "exemplars")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 8)
        (HsProtobufAST.Prim HsProtobufAST.UInt32)
        (HsProtobufAST.Single "flags")
        []
        ""
    ]
instance (HsJSONPB.ToJSONPB NumberDataPoint) where
  toJSONPB (NumberDataPoint f7 f2 f3 f4_or_f6 f5 f8) =
    HsJSONPB.object
      [ "attributes"
          .= ( ( Hs.coerce
                  @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
                  @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue)
               )
                f7
             )
      , "start_time_unix_nano"
          .= ((Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64)) f2)
      , "time_unix_nano"
          .= ((Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64)) f3)
      , ( let
            encodeValue =
              ( case f4_or_f6 of
                  Hs.Just (NumberDataPointValueAsDouble f4) ->
                    HsJSONPB.pair "as_double" f4
                  Hs.Just (NumberDataPointValueAsInt f6) ->
                    HsJSONPB.pair
                      "as_int"
                      ( ( Hs.coerce
                            @Hs.Int64
                            @(HsProtobuf.Signed (HsProtobuf.Fixed Hs.Int64))
                        )
                          f6
                      )
                  Hs.Nothing -> Hs.mempty
              )
           in
            ( \options ->
                if HsJSONPB.optEmitNamedOneof options
                  then ("value" .= HsJSONPB.objectOrNull [encodeValue] options) options
                  else encodeValue options
            )
        )
      , "exemplars"
          .= ( ( Hs.coerce
                  @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.Exemplar)
                  @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.Exemplar)
               )
                f5
             )
      , "flags" .= f8
      ]
  toEncodingPB (NumberDataPoint f7 f2 f3 f4_or_f6 f5 f8) =
    HsJSONPB.pairs
      [ "attributes"
          .= ( ( Hs.coerce
                  @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
                  @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue)
               )
                f7
             )
      , "start_time_unix_nano"
          .= ((Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64)) f2)
      , "time_unix_nano"
          .= ((Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64)) f3)
      , ( let
            encodeValue =
              ( case f4_or_f6 of
                  Hs.Just (NumberDataPointValueAsDouble f4) ->
                    HsJSONPB.pair "as_double" f4
                  Hs.Just (NumberDataPointValueAsInt f6) ->
                    HsJSONPB.pair
                      "as_int"
                      ( ( Hs.coerce
                            @Hs.Int64
                            @(HsProtobuf.Signed (HsProtobuf.Fixed Hs.Int64))
                        )
                          f6
                      )
                  Hs.Nothing -> Hs.mempty
              )
           in
            ( \options ->
                if HsJSONPB.optEmitNamedOneof options
                  then ("value" .= HsJSONPB.pairsOrNull [encodeValue] options) options
                  else encodeValue options
            )
        )
      , "exemplars"
          .= ( ( Hs.coerce
                  @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.Exemplar)
                  @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.Exemplar)
               )
                f5
             )
      , "flags" .= f8
      ]
instance (HsJSONPB.FromJSONPB NumberDataPoint) where
  parseJSONPB =
    HsJSONPB.withObject
      "NumberDataPoint"
      ( \obj ->
          Hs.pure NumberDataPoint
            <*> ( ( HsProtobuf.coerceOver
                      @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue)
                      @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
                  )
                    (obj .: "attributes")
                )
            <*> ( (HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
                    (obj .: "start_time_unix_nano")
                )
            <*> ( (HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
                    (obj .: "time_unix_nano")
                )
            <*> ( let
                    parseValue parseObj =
                      Hs.msum
                        [ Hs.Just Hs.. NumberDataPointValueAsDouble
                            <$> HsJSONPB.parseField parseObj "as_double"
                        , Hs.Just
                            Hs.. NumberDataPointValueAsInt
                            Hs.. ( Hs.coerce
                                    @(HsProtobuf.Signed (HsProtobuf.Fixed Hs.Int64))
                                    @Hs.Int64
                                 )
                            <$> HsJSONPB.parseField parseObj "as_int"
                        , Hs.pure Hs.Nothing
                        ]
                   in
                    (obj .: "value" Hs.>>= HsJSONPB.withObject "value" parseValue)
                      <|> (parseValue obj)
                )
            <*> ( ( HsProtobuf.coerceOver
                      @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.Exemplar)
                      @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.Exemplar)
                  )
                    (obj .: "exemplars")
                )
            <*> obj .: "flags"
      )
instance (HsJSONPB.ToJSON NumberDataPoint) where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding
instance (HsJSONPB.FromJSON NumberDataPoint) where
  parseJSON = HsJSONPB.parseJSONPB
instance (HsJSONPB.ToSchema NumberDataPoint) where
  declareNamedSchema _ =
    do
      let declare_attributes = HsJSONPB.declareSchemaRef
      numberDataPointAttributes <- declare_attributes Proxy.Proxy
      let declare_start_time_unix_nano = HsJSONPB.declareSchemaRef
      numberDataPointStartTimeUnixNano <-
        declare_start_time_unix_nano
          Proxy.Proxy
      let declare_time_unix_nano = HsJSONPB.declareSchemaRef
      numberDataPointTimeUnixNano <- declare_time_unix_nano Proxy.Proxy
      let declare_value = HsJSONPB.declareSchemaRef
      numberDataPointValue <- declare_value Proxy.Proxy
      let declare_exemplars = HsJSONPB.declareSchemaRef
      numberDataPointExemplars <- declare_exemplars Proxy.Proxy
      let declare_flags = HsJSONPB.declareSchemaRef
      numberDataPointFlags <- declare_flags Proxy.Proxy
      let _ =
            Hs.pure NumberDataPoint
              <*> ( ( HsProtobuf.coerceOver
                        @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue)
                        @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
                    )
                      (HsJSONPB.asProxy declare_attributes)
                  )
              <*> ( (HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
                      (HsJSONPB.asProxy declare_start_time_unix_nano)
                  )
              <*> ( (HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
                      (HsJSONPB.asProxy declare_time_unix_nano)
                  )
              <*> HsJSONPB.asProxy declare_value
              <*> ( ( HsProtobuf.coerceOver
                        @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.Exemplar)
                        @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.Exemplar)
                    )
                      (HsJSONPB.asProxy declare_exemplars)
                  )
              <*> HsJSONPB.asProxy declare_flags
      Hs.return
        HsJSONPB.NamedSchema
          { HsJSONPB._namedSchemaName = Hs.Just "NumberDataPoint"
          , HsJSONPB._namedSchemaSchema =
              Hs.mempty
                { HsJSONPB._schemaParamSchema =
                    Hs.mempty
                      { HsJSONPB._paramSchemaType =
                          Hs.Just
                            HsJSONPB.SwaggerObject
                      }
                , HsJSONPB._schemaProperties =
                    HsJSONPB.insOrdFromList
                      [
                        ( "attributes"
                        , numberDataPointAttributes
                        )
                      ,
                        ( "start_time_unix_nano"
                        , numberDataPointStartTimeUnixNano
                        )
                      ,
                        ( "time_unix_nano"
                        , numberDataPointTimeUnixNano
                        )
                      ,
                        ( "value"
                        , numberDataPointValue
                        )
                      ,
                        ( "exemplars"
                        , numberDataPointExemplars
                        )
                      ,
                        ( "flags"
                        , numberDataPointFlags
                        )
                      ]
                }
          }
data NumberDataPointValue
  = NumberDataPointValueAsDouble Hs.Double
  | NumberDataPointValueAsInt Hs.Int64
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)
instance (Hs.NFData NumberDataPointValue)
instance (HsProtobuf.Named NumberDataPointValue) where
  nameOf _ = Hs.fromString "NumberDataPointValue"
instance (HsJSONPB.ToSchema NumberDataPointValue) where
  declareNamedSchema _ =
    do
      let declare_as_double = HsJSONPB.declareSchemaRef
      numberDataPointValueAsDouble <- declare_as_double Proxy.Proxy
      let _ =
            Hs.pure NumberDataPointValueAsDouble
              <*> HsJSONPB.asProxy declare_as_double
      let declare_as_int = HsJSONPB.declareSchemaRef
      numberDataPointValueAsInt <- declare_as_int Proxy.Proxy
      let _ =
            Hs.pure NumberDataPointValueAsInt
              <*> ( ( HsProtobuf.coerceOver
                        @(HsProtobuf.Signed (HsProtobuf.Fixed Hs.Int64))
                        @Hs.Int64
                    )
                      (HsJSONPB.asProxy declare_as_int)
                  )
      Hs.return
        HsJSONPB.NamedSchema
          { HsJSONPB._namedSchemaName = Hs.Just "NumberDataPointValue"
          , HsJSONPB._namedSchemaSchema =
              Hs.mempty
                { HsJSONPB._schemaParamSchema =
                    Hs.mempty
                      { HsJSONPB._paramSchemaType =
                          Hs.Just
                            HsJSONPB.SwaggerObject
                      }
                , HsJSONPB._schemaProperties =
                    HsJSONPB.insOrdFromList
                      [
                        ( "as_double"
                        , numberDataPointValueAsDouble
                        )
                      ,
                        ( "as_int"
                        , numberDataPointValueAsInt
                        )
                      ]
                , HsJSONPB._schemaMinProperties = Hs.Just 1
                , HsJSONPB._schemaMaxProperties = Hs.Just 1
                }
          }
data HistogramDataPoint = HistogramDataPoint
  { histogramDataPointAttributes :: (Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
  , histogramDataPointStartTimeUnixNano :: Hs.Word64
  , histogramDataPointTimeUnixNano :: Hs.Word64
  , histogramDataPointCount :: Hs.Word64
  , histogramDataPointSum :: Hs.Double
  , histogramDataPointBucketCounts :: (Hs.Vector Hs.Word64)
  , histogramDataPointExplicitBounds :: (Hs.Vector Hs.Double)
  , histogramDataPointExemplars :: (Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.Exemplar)
  , histogramDataPointFlags :: Hs.Word32
  , histogramDataPointMin :: Hs.Double
  , histogramDataPointMax :: Hs.Double
  }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)
instance (Hs.NFData HistogramDataPoint)
instance (HsProtobuf.Named HistogramDataPoint) where
  nameOf _ = Hs.fromString "HistogramDataPoint"
instance (HsProtobuf.HasDefault HistogramDataPoint)
instance (HsProtobuf.Message HistogramDataPoint) where
  encodeMessage
    _
    HistogramDataPoint
      { histogramDataPointAttributes
      , histogramDataPointStartTimeUnixNano
      , histogramDataPointTimeUnixNano
      , histogramDataPointCount
      , histogramDataPointSum
      , histogramDataPointBucketCounts
      , histogramDataPointExplicitBounds
      , histogramDataPointExemplars
      , histogramDataPointFlags
      , histogramDataPointMin
      , histogramDataPointMax
      } =
      Hs.mappend
        ( Hs.mappend
            ( Hs.mappend
                ( Hs.mappend
                    ( Hs.mappend
                        ( Hs.mappend
                            ( Hs.mappend
                                ( Hs.mappend
                                    ( Hs.mappend
                                        ( Hs.mappend
                                            ( HsProtobuf.encodeMessageField
                                                (HsProtobuf.FieldNumber 9)
                                                ( ( Hs.coerce
                                                      @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
                                                      @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue)
                                                  )
                                                    histogramDataPointAttributes
                                                )
                                            )
                                            ( HsProtobuf.encodeMessageField
                                                (HsProtobuf.FieldNumber 2)
                                                ( (Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64))
                                                    histogramDataPointStartTimeUnixNano
                                                )
                                            )
                                        )
                                        ( HsProtobuf.encodeMessageField
                                            (HsProtobuf.FieldNumber 3)
                                            ( (Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64))
                                                histogramDataPointTimeUnixNano
                                            )
                                        )
                                    )
                                    ( HsProtobuf.encodeMessageField
                                        (HsProtobuf.FieldNumber 4)
                                        ( (Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64))
                                            histogramDataPointCount
                                        )
                                    )
                                )
                                ( HsProtobuf.encodeMessageField
                                    (HsProtobuf.FieldNumber 5)
                                    histogramDataPointSum
                                )
                            )
                            ( HsProtobuf.encodeMessageField
                                (HsProtobuf.FieldNumber 6)
                                ( ( Hs.coerce
                                      @(Hs.Vector Hs.Word64)
                                      @(HsProtobuf.PackedVec (HsProtobuf.Fixed Hs.Word64))
                                  )
                                    histogramDataPointBucketCounts
                                )
                            )
                        )
                        ( HsProtobuf.encodeMessageField
                            (HsProtobuf.FieldNumber 7)
                            ( ( Hs.coerce
                                  @(Hs.Vector Hs.Double)
                                  @(HsProtobuf.PackedVec Hs.Double)
                              )
                                histogramDataPointExplicitBounds
                            )
                        )
                    )
                    ( HsProtobuf.encodeMessageField
                        (HsProtobuf.FieldNumber 8)
                        ( ( Hs.coerce
                              @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.Exemplar)
                              @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.Exemplar)
                          )
                            histogramDataPointExemplars
                        )
                    )
                )
                ( HsProtobuf.encodeMessageField
                    (HsProtobuf.FieldNumber 10)
                    histogramDataPointFlags
                )
            )
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 11)
                histogramDataPointMin
            )
        )
        ( HsProtobuf.encodeMessageField
            (HsProtobuf.FieldNumber 12)
            histogramDataPointMax
        )
  decodeMessage _ =
    Hs.pure HistogramDataPoint
      <*> ( ( HsProtobuf.coerceOver
                @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue)
                @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
            )
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 9)
              )
          )
      <*> ( (HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 2)
              )
          )
      <*> ( (HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 3)
              )
          )
      <*> ( (HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 4)
              )
          )
      <*> HsProtobuf.at
        HsProtobuf.decodeMessageField
        (HsProtobuf.FieldNumber 5)
      <*> ( ( HsProtobuf.coerceOver
                @(HsProtobuf.PackedVec (HsProtobuf.Fixed Hs.Word64))
                @(Hs.Vector Hs.Word64)
            )
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 6)
              )
          )
      <*> ( ( HsProtobuf.coerceOver
                @(HsProtobuf.PackedVec Hs.Double)
                @(Hs.Vector Hs.Double)
            )
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 7)
              )
          )
      <*> ( ( HsProtobuf.coerceOver
                @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.Exemplar)
                @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.Exemplar)
            )
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 8)
              )
          )
      <*> HsProtobuf.at
        HsProtobuf.decodeMessageField
        (HsProtobuf.FieldNumber 10)
      <*> HsProtobuf.at
        HsProtobuf.decodeMessageField
        (HsProtobuf.FieldNumber 11)
      <*> HsProtobuf.at
        HsProtobuf.decodeMessageField
        (HsProtobuf.FieldNumber 12)
  dotProto _ =
    [ HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 9)
        ( HsProtobufAST.Repeated
            ( HsProtobufAST.Named
                ( HsProtobufAST.Dots
                    ( HsProtobufAST.Path
                        ("opentelemetry" Hs.:| ["proto", "common", "v1", "KeyValue"])
                    )
                )
            )
        )
        (HsProtobufAST.Single "attributes")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 2)
        (HsProtobufAST.Prim HsProtobufAST.Fixed64)
        (HsProtobufAST.Single "start_time_unix_nano")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 3)
        (HsProtobufAST.Prim HsProtobufAST.Fixed64)
        (HsProtobufAST.Single "time_unix_nano")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 4)
        (HsProtobufAST.Prim HsProtobufAST.Fixed64)
        (HsProtobufAST.Single "count")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 5)
        (HsProtobufAST.Prim HsProtobufAST.Double)
        (HsProtobufAST.Single "sum")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 6)
        (HsProtobufAST.Repeated HsProtobufAST.Fixed64)
        (HsProtobufAST.Single "bucket_counts")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 7)
        (HsProtobufAST.Repeated HsProtobufAST.Double)
        (HsProtobufAST.Single "explicit_bounds")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 8)
        ( HsProtobufAST.Repeated
            (HsProtobufAST.Named (HsProtobufAST.Single "Exemplar"))
        )
        (HsProtobufAST.Single "exemplars")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 10)
        (HsProtobufAST.Prim HsProtobufAST.UInt32)
        (HsProtobufAST.Single "flags")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 11)
        (HsProtobufAST.Prim HsProtobufAST.Double)
        (HsProtobufAST.Single "min")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 12)
        (HsProtobufAST.Prim HsProtobufAST.Double)
        (HsProtobufAST.Single "max")
        []
        ""
    ]
instance (HsJSONPB.ToJSONPB HistogramDataPoint) where
  toJSONPB (HistogramDataPoint f9 f2 f3 f4 f5 f6 f7 f8 f10 f11 f12) =
    HsJSONPB.object
      [ "attributes"
          .= ( ( Hs.coerce
                  @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
                  @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue)
               )
                f9
             )
      , "start_time_unix_nano"
          .= ((Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64)) f2)
      , "time_unix_nano"
          .= ((Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64)) f3)
      , "count"
          .= ((Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64)) f4)
      , "sum" .= f5
      , "bucket_counts"
          .= ( ( Hs.coerce
                  @(Hs.Vector Hs.Word64)
                  @(HsProtobuf.PackedVec (HsProtobuf.Fixed Hs.Word64))
               )
                f6
             )
      , "explicit_bounds"
          .= ( ( Hs.coerce
                  @(Hs.Vector Hs.Double)
                  @(HsProtobuf.PackedVec Hs.Double)
               )
                f7
             )
      , "exemplars"
          .= ( ( Hs.coerce
                  @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.Exemplar)
                  @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.Exemplar)
               )
                f8
             )
      , "flags" .= f10
      , "min" .= f11
      , "max" .= f12
      ]
  toEncodingPB
    (HistogramDataPoint f9 f2 f3 f4 f5 f6 f7 f8 f10 f11 f12) =
      HsJSONPB.pairs
        [ "attributes"
            .= ( ( Hs.coerce
                    @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
                    @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue)
                 )
                  f9
               )
        , "start_time_unix_nano"
            .= ((Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64)) f2)
        , "time_unix_nano"
            .= ((Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64)) f3)
        , "count"
            .= ((Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64)) f4)
        , "sum" .= f5
        , "bucket_counts"
            .= ( ( Hs.coerce
                    @(Hs.Vector Hs.Word64)
                    @(HsProtobuf.PackedVec (HsProtobuf.Fixed Hs.Word64))
                 )
                  f6
               )
        , "explicit_bounds"
            .= ( ( Hs.coerce
                    @(Hs.Vector Hs.Double)
                    @(HsProtobuf.PackedVec Hs.Double)
                 )
                  f7
               )
        , "exemplars"
            .= ( ( Hs.coerce
                    @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.Exemplar)
                    @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.Exemplar)
                 )
                  f8
               )
        , "flags" .= f10
        , "min" .= f11
        , "max" .= f12
        ]
instance (HsJSONPB.FromJSONPB HistogramDataPoint) where
  parseJSONPB =
    HsJSONPB.withObject
      "HistogramDataPoint"
      ( \obj ->
          Hs.pure HistogramDataPoint
            <*> ( ( HsProtobuf.coerceOver
                      @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue)
                      @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
                  )
                    (obj .: "attributes")
                )
            <*> ( (HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
                    (obj .: "start_time_unix_nano")
                )
            <*> ( (HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
                    (obj .: "time_unix_nano")
                )
            <*> ( (HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
                    (obj .: "count")
                )
            <*> obj .: "sum"
            <*> ( ( HsProtobuf.coerceOver
                      @(HsProtobuf.PackedVec (HsProtobuf.Fixed Hs.Word64))
                      @(Hs.Vector Hs.Word64)
                  )
                    (obj .: "bucket_counts")
                )
            <*> ( ( HsProtobuf.coerceOver
                      @(HsProtobuf.PackedVec Hs.Double)
                      @(Hs.Vector Hs.Double)
                  )
                    (obj .: "explicit_bounds")
                )
            <*> ( ( HsProtobuf.coerceOver
                      @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.Exemplar)
                      @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.Exemplar)
                  )
                    (obj .: "exemplars")
                )
            <*> obj .: "flags"
            <*> obj .: "min"
            <*> obj .: "max"
      )
instance (HsJSONPB.ToJSON HistogramDataPoint) where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding
instance (HsJSONPB.FromJSON HistogramDataPoint) where
  parseJSON = HsJSONPB.parseJSONPB
instance (HsJSONPB.ToSchema HistogramDataPoint) where
  declareNamedSchema _ =
    do
      let declare_attributes = HsJSONPB.declareSchemaRef
      histogramDataPointAttributes <- declare_attributes Proxy.Proxy
      let declare_start_time_unix_nano = HsJSONPB.declareSchemaRef
      histogramDataPointStartTimeUnixNano <-
        declare_start_time_unix_nano
          Proxy.Proxy
      let declare_time_unix_nano = HsJSONPB.declareSchemaRef
      histogramDataPointTimeUnixNano <-
        declare_time_unix_nano
          Proxy.Proxy
      let declare_count = HsJSONPB.declareSchemaRef
      histogramDataPointCount <- declare_count Proxy.Proxy
      let declare_sum = HsJSONPB.declareSchemaRef
      histogramDataPointSum <- declare_sum Proxy.Proxy
      let declare_bucket_counts = HsJSONPB.declareSchemaRef
      histogramDataPointBucketCounts <- declare_bucket_counts Proxy.Proxy
      let declare_explicit_bounds = HsJSONPB.declareSchemaRef
      histogramDataPointExplicitBounds <-
        declare_explicit_bounds
          Proxy.Proxy
      let declare_exemplars = HsJSONPB.declareSchemaRef
      histogramDataPointExemplars <- declare_exemplars Proxy.Proxy
      let declare_flags = HsJSONPB.declareSchemaRef
      histogramDataPointFlags <- declare_flags Proxy.Proxy
      let declare_min = HsJSONPB.declareSchemaRef
      histogramDataPointMin <- declare_min Proxy.Proxy
      let declare_max = HsJSONPB.declareSchemaRef
      histogramDataPointMax <- declare_max Proxy.Proxy
      let _ =
            Hs.pure HistogramDataPoint
              <*> ( ( HsProtobuf.coerceOver
                        @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue)
                        @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
                    )
                      (HsJSONPB.asProxy declare_attributes)
                  )
              <*> ( (HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
                      (HsJSONPB.asProxy declare_start_time_unix_nano)
                  )
              <*> ( (HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
                      (HsJSONPB.asProxy declare_time_unix_nano)
                  )
              <*> ( (HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
                      (HsJSONPB.asProxy declare_count)
                  )
              <*> HsJSONPB.asProxy declare_sum
              <*> ( ( HsProtobuf.coerceOver
                        @(HsProtobuf.PackedVec (HsProtobuf.Fixed Hs.Word64))
                        @(Hs.Vector Hs.Word64)
                    )
                      (HsJSONPB.asProxy declare_bucket_counts)
                  )
              <*> ( ( HsProtobuf.coerceOver
                        @(HsProtobuf.PackedVec Hs.Double)
                        @(Hs.Vector Hs.Double)
                    )
                      (HsJSONPB.asProxy declare_explicit_bounds)
                  )
              <*> ( ( HsProtobuf.coerceOver
                        @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.Exemplar)
                        @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.Exemplar)
                    )
                      (HsJSONPB.asProxy declare_exemplars)
                  )
              <*> HsJSONPB.asProxy declare_flags
              <*> HsJSONPB.asProxy declare_min
              <*> HsJSONPB.asProxy declare_max
      Hs.return
        HsJSONPB.NamedSchema
          { HsJSONPB._namedSchemaName = Hs.Just "HistogramDataPoint"
          , HsJSONPB._namedSchemaSchema =
              Hs.mempty
                { HsJSONPB._schemaParamSchema =
                    Hs.mempty
                      { HsJSONPB._paramSchemaType =
                          Hs.Just
                            HsJSONPB.SwaggerObject
                      }
                , HsJSONPB._schemaProperties =
                    HsJSONPB.insOrdFromList
                      [
                        ( "attributes"
                        , histogramDataPointAttributes
                        )
                      ,
                        ( "start_time_unix_nano"
                        , histogramDataPointStartTimeUnixNano
                        )
                      ,
                        ( "time_unix_nano"
                        , histogramDataPointTimeUnixNano
                        )
                      ,
                        ( "count"
                        , histogramDataPointCount
                        )
                      ,
                        ( "sum"
                        , histogramDataPointSum
                        )
                      ,
                        ( "bucket_counts"
                        , histogramDataPointBucketCounts
                        )
                      ,
                        ( "explicit_bounds"
                        , histogramDataPointExplicitBounds
                        )
                      ,
                        ( "exemplars"
                        , histogramDataPointExemplars
                        )
                      ,
                        ( "flags"
                        , histogramDataPointFlags
                        )
                      ,
                        ( "min"
                        , histogramDataPointMin
                        )
                      ,
                        ( "max"
                        , histogramDataPointMax
                        )
                      ]
                }
          }
data ExponentialHistogramDataPoint = ExponentialHistogramDataPoint
  { exponentialHistogramDataPointAttributes :: (Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
  , exponentialHistogramDataPointStartTimeUnixNano :: Hs.Word64
  , exponentialHistogramDataPointTimeUnixNano :: Hs.Word64
  , exponentialHistogramDataPointCount :: Hs.Word64
  , exponentialHistogramDataPointSum :: Hs.Double
  , exponentialHistogramDataPointScale :: Hs.Int32
  , exponentialHistogramDataPointZeroCount :: Hs.Word64
  , exponentialHistogramDataPointPositive :: (Hs.Maybe Opentelemetry.Proto.Metrics.V1.Metrics.ExponentialHistogramDataPoint_Buckets)
  , exponentialHistogramDataPointNegative :: (Hs.Maybe Opentelemetry.Proto.Metrics.V1.Metrics.ExponentialHistogramDataPoint_Buckets)
  , exponentialHistogramDataPointFlags :: Hs.Word32
  , exponentialHistogramDataPointExemplars :: (Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.Exemplar)
  , exponentialHistogramDataPointMin :: Hs.Double
  , exponentialHistogramDataPointMax :: Hs.Double
  , exponentialHistogramDataPointZeroThreshold :: Hs.Double
  }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)
instance (Hs.NFData ExponentialHistogramDataPoint)
instance (HsProtobuf.Named ExponentialHistogramDataPoint) where
  nameOf _ = Hs.fromString "ExponentialHistogramDataPoint"
instance (HsProtobuf.HasDefault ExponentialHistogramDataPoint)
instance (HsProtobuf.Message ExponentialHistogramDataPoint) where
  encodeMessage
    _
    ExponentialHistogramDataPoint
      { exponentialHistogramDataPointAttributes
      , exponentialHistogramDataPointStartTimeUnixNano
      , exponentialHistogramDataPointTimeUnixNano
      , exponentialHistogramDataPointCount
      , exponentialHistogramDataPointSum
      , exponentialHistogramDataPointScale
      , exponentialHistogramDataPointZeroCount
      , exponentialHistogramDataPointPositive
      , exponentialHistogramDataPointNegative
      , exponentialHistogramDataPointFlags
      , exponentialHistogramDataPointExemplars
      , exponentialHistogramDataPointMin
      , exponentialHistogramDataPointMax
      , exponentialHistogramDataPointZeroThreshold
      } =
      Hs.mappend
        ( Hs.mappend
            ( Hs.mappend
                ( Hs.mappend
                    ( Hs.mappend
                        ( Hs.mappend
                            ( Hs.mappend
                                ( Hs.mappend
                                    ( Hs.mappend
                                        ( Hs.mappend
                                            ( Hs.mappend
                                                ( Hs.mappend
                                                    ( Hs.mappend
                                                        ( HsProtobuf.encodeMessageField
                                                            (HsProtobuf.FieldNumber 1)
                                                            ( ( Hs.coerce
                                                                  @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
                                                                  @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue)
                                                              )
                                                                exponentialHistogramDataPointAttributes
                                                            )
                                                        )
                                                        ( HsProtobuf.encodeMessageField
                                                            (HsProtobuf.FieldNumber 2)
                                                            ( (Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64))
                                                                exponentialHistogramDataPointStartTimeUnixNano
                                                            )
                                                        )
                                                    )
                                                    ( HsProtobuf.encodeMessageField
                                                        (HsProtobuf.FieldNumber 3)
                                                        ( (Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64))
                                                            exponentialHistogramDataPointTimeUnixNano
                                                        )
                                                    )
                                                )
                                                ( HsProtobuf.encodeMessageField
                                                    (HsProtobuf.FieldNumber 4)
                                                    ( (Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64))
                                                        exponentialHistogramDataPointCount
                                                    )
                                                )
                                            )
                                            ( HsProtobuf.encodeMessageField
                                                (HsProtobuf.FieldNumber 5)
                                                exponentialHistogramDataPointSum
                                            )
                                        )
                                        ( HsProtobuf.encodeMessageField
                                            (HsProtobuf.FieldNumber 6)
                                            ( (Hs.coerce @Hs.Int32 @(HsProtobuf.Signed Hs.Int32))
                                                exponentialHistogramDataPointScale
                                            )
                                        )
                                    )
                                    ( HsProtobuf.encodeMessageField
                                        (HsProtobuf.FieldNumber 7)
                                        ( (Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64))
                                            exponentialHistogramDataPointZeroCount
                                        )
                                    )
                                )
                                ( HsProtobuf.encodeMessageField
                                    (HsProtobuf.FieldNumber 8)
                                    ( ( Hs.coerce
                                          @(Hs.Maybe Opentelemetry.Proto.Metrics.V1.Metrics.ExponentialHistogramDataPoint_Buckets)
                                          @(HsProtobuf.Nested Opentelemetry.Proto.Metrics.V1.Metrics.ExponentialHistogramDataPoint_Buckets)
                                      )
                                        exponentialHistogramDataPointPositive
                                    )
                                )
                            )
                            ( HsProtobuf.encodeMessageField
                                (HsProtobuf.FieldNumber 9)
                                ( ( Hs.coerce
                                      @(Hs.Maybe Opentelemetry.Proto.Metrics.V1.Metrics.ExponentialHistogramDataPoint_Buckets)
                                      @(HsProtobuf.Nested Opentelemetry.Proto.Metrics.V1.Metrics.ExponentialHistogramDataPoint_Buckets)
                                  )
                                    exponentialHistogramDataPointNegative
                                )
                            )
                        )
                        ( HsProtobuf.encodeMessageField
                            (HsProtobuf.FieldNumber 10)
                            exponentialHistogramDataPointFlags
                        )
                    )
                    ( HsProtobuf.encodeMessageField
                        (HsProtobuf.FieldNumber 11)
                        ( ( Hs.coerce
                              @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.Exemplar)
                              @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.Exemplar)
                          )
                            exponentialHistogramDataPointExemplars
                        )
                    )
                )
                ( HsProtobuf.encodeMessageField
                    (HsProtobuf.FieldNumber 12)
                    exponentialHistogramDataPointMin
                )
            )
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 13)
                exponentialHistogramDataPointMax
            )
        )
        ( HsProtobuf.encodeMessageField
            (HsProtobuf.FieldNumber 14)
            exponentialHistogramDataPointZeroThreshold
        )
  decodeMessage _ =
    Hs.pure ExponentialHistogramDataPoint
      <*> ( ( HsProtobuf.coerceOver
                @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue)
                @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
            )
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
      <*> ( (HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 2)
              )
          )
      <*> ( (HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 3)
              )
          )
      <*> ( (HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 4)
              )
          )
      <*> HsProtobuf.at
        HsProtobuf.decodeMessageField
        (HsProtobuf.FieldNumber 5)
      <*> ( (HsProtobuf.coerceOver @(HsProtobuf.Signed Hs.Int32) @Hs.Int32)
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 6)
              )
          )
      <*> ( (HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 7)
              )
          )
      <*> ( ( HsProtobuf.coerceOver
                @(HsProtobuf.Nested Opentelemetry.Proto.Metrics.V1.Metrics.ExponentialHistogramDataPoint_Buckets)
                @(Hs.Maybe Opentelemetry.Proto.Metrics.V1.Metrics.ExponentialHistogramDataPoint_Buckets)
            )
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 8)
              )
          )
      <*> ( ( HsProtobuf.coerceOver
                @(HsProtobuf.Nested Opentelemetry.Proto.Metrics.V1.Metrics.ExponentialHistogramDataPoint_Buckets)
                @(Hs.Maybe Opentelemetry.Proto.Metrics.V1.Metrics.ExponentialHistogramDataPoint_Buckets)
            )
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 9)
              )
          )
      <*> HsProtobuf.at
        HsProtobuf.decodeMessageField
        (HsProtobuf.FieldNumber 10)
      <*> ( ( HsProtobuf.coerceOver
                @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.Exemplar)
                @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.Exemplar)
            )
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 11)
              )
          )
      <*> HsProtobuf.at
        HsProtobuf.decodeMessageField
        (HsProtobuf.FieldNumber 12)
      <*> HsProtobuf.at
        HsProtobuf.decodeMessageField
        (HsProtobuf.FieldNumber 13)
      <*> HsProtobuf.at
        HsProtobuf.decodeMessageField
        (HsProtobuf.FieldNumber 14)
  dotProto _ =
    [ HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 1)
        ( HsProtobufAST.Repeated
            ( HsProtobufAST.Named
                ( HsProtobufAST.Dots
                    ( HsProtobufAST.Path
                        ("opentelemetry" Hs.:| ["proto", "common", "v1", "KeyValue"])
                    )
                )
            )
        )
        (HsProtobufAST.Single "attributes")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 2)
        (HsProtobufAST.Prim HsProtobufAST.Fixed64)
        (HsProtobufAST.Single "start_time_unix_nano")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 3)
        (HsProtobufAST.Prim HsProtobufAST.Fixed64)
        (HsProtobufAST.Single "time_unix_nano")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 4)
        (HsProtobufAST.Prim HsProtobufAST.Fixed64)
        (HsProtobufAST.Single "count")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 5)
        (HsProtobufAST.Prim HsProtobufAST.Double)
        (HsProtobufAST.Single "sum")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 6)
        (HsProtobufAST.Prim HsProtobufAST.SInt32)
        (HsProtobufAST.Single "scale")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 7)
        (HsProtobufAST.Prim HsProtobufAST.Fixed64)
        (HsProtobufAST.Single "zero_count")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 8)
        ( HsProtobufAST.Prim
            (HsProtobufAST.Named (HsProtobufAST.Single "Buckets"))
        )
        (HsProtobufAST.Single "positive")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 9)
        ( HsProtobufAST.Prim
            (HsProtobufAST.Named (HsProtobufAST.Single "Buckets"))
        )
        (HsProtobufAST.Single "negative")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 10)
        (HsProtobufAST.Prim HsProtobufAST.UInt32)
        (HsProtobufAST.Single "flags")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 11)
        ( HsProtobufAST.Repeated
            (HsProtobufAST.Named (HsProtobufAST.Single "Exemplar"))
        )
        (HsProtobufAST.Single "exemplars")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 12)
        (HsProtobufAST.Prim HsProtobufAST.Double)
        (HsProtobufAST.Single "min")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 13)
        (HsProtobufAST.Prim HsProtobufAST.Double)
        (HsProtobufAST.Single "max")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 14)
        (HsProtobufAST.Prim HsProtobufAST.Double)
        (HsProtobufAST.Single "zero_threshold")
        []
        ""
    ]
instance (HsJSONPB.ToJSONPB ExponentialHistogramDataPoint) where
  toJSONPB
    ( ExponentialHistogramDataPoint
        f1
        f2
        f3
        f4
        f5
        f6
        f7
        f8
        f9
        f10
        f11
        f12
        f13
        f14
      ) =
      HsJSONPB.object
        [ "attributes"
            .= ( ( Hs.coerce
                    @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
                    @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue)
                 )
                  f1
               )
        , "start_time_unix_nano"
            .= ((Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64)) f2)
        , "time_unix_nano"
            .= ((Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64)) f3)
        , "count"
            .= ((Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64)) f4)
        , "sum" .= f5
        , "scale"
            .= ((Hs.coerce @Hs.Int32 @(HsProtobuf.Signed Hs.Int32)) f6)
        , "zero_count"
            .= ((Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64)) f7)
        , "positive"
            .= ( ( Hs.coerce
                    @(Hs.Maybe Opentelemetry.Proto.Metrics.V1.Metrics.ExponentialHistogramDataPoint_Buckets)
                    @(HsProtobuf.Nested Opentelemetry.Proto.Metrics.V1.Metrics.ExponentialHistogramDataPoint_Buckets)
                 )
                  f8
               )
        , "negative"
            .= ( ( Hs.coerce
                    @(Hs.Maybe Opentelemetry.Proto.Metrics.V1.Metrics.ExponentialHistogramDataPoint_Buckets)
                    @(HsProtobuf.Nested Opentelemetry.Proto.Metrics.V1.Metrics.ExponentialHistogramDataPoint_Buckets)
                 )
                  f9
               )
        , "flags" .= f10
        , "exemplars"
            .= ( ( Hs.coerce
                    @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.Exemplar)
                    @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.Exemplar)
                 )
                  f11
               )
        , "min" .= f12
        , "max" .= f13
        , "zero_threshold" .= f14
        ]
  toEncodingPB
    ( ExponentialHistogramDataPoint
        f1
        f2
        f3
        f4
        f5
        f6
        f7
        f8
        f9
        f10
        f11
        f12
        f13
        f14
      ) =
      HsJSONPB.pairs
        [ "attributes"
            .= ( ( Hs.coerce
                    @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
                    @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue)
                 )
                  f1
               )
        , "start_time_unix_nano"
            .= ((Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64)) f2)
        , "time_unix_nano"
            .= ((Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64)) f3)
        , "count"
            .= ((Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64)) f4)
        , "sum" .= f5
        , "scale"
            .= ((Hs.coerce @Hs.Int32 @(HsProtobuf.Signed Hs.Int32)) f6)
        , "zero_count"
            .= ((Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64)) f7)
        , "positive"
            .= ( ( Hs.coerce
                    @(Hs.Maybe Opentelemetry.Proto.Metrics.V1.Metrics.ExponentialHistogramDataPoint_Buckets)
                    @(HsProtobuf.Nested Opentelemetry.Proto.Metrics.V1.Metrics.ExponentialHistogramDataPoint_Buckets)
                 )
                  f8
               )
        , "negative"
            .= ( ( Hs.coerce
                    @(Hs.Maybe Opentelemetry.Proto.Metrics.V1.Metrics.ExponentialHistogramDataPoint_Buckets)
                    @(HsProtobuf.Nested Opentelemetry.Proto.Metrics.V1.Metrics.ExponentialHistogramDataPoint_Buckets)
                 )
                  f9
               )
        , "flags" .= f10
        , "exemplars"
            .= ( ( Hs.coerce
                    @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.Exemplar)
                    @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.Exemplar)
                 )
                  f11
               )
        , "min" .= f12
        , "max" .= f13
        , "zero_threshold" .= f14
        ]
instance (HsJSONPB.FromJSONPB ExponentialHistogramDataPoint) where
  parseJSONPB =
    HsJSONPB.withObject
      "ExponentialHistogramDataPoint"
      ( \obj ->
          Hs.pure ExponentialHistogramDataPoint
            <*> ( ( HsProtobuf.coerceOver
                      @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue)
                      @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
                  )
                    (obj .: "attributes")
                )
            <*> ( (HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
                    (obj .: "start_time_unix_nano")
                )
            <*> ( (HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
                    (obj .: "time_unix_nano")
                )
            <*> ( (HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
                    (obj .: "count")
                )
            <*> obj .: "sum"
            <*> ( (HsProtobuf.coerceOver @(HsProtobuf.Signed Hs.Int32) @Hs.Int32)
                    (obj .: "scale")
                )
            <*> ( (HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
                    (obj .: "zero_count")
                )
            <*> ( ( HsProtobuf.coerceOver
                      @(HsProtobuf.Nested Opentelemetry.Proto.Metrics.V1.Metrics.ExponentialHistogramDataPoint_Buckets)
                      @(Hs.Maybe Opentelemetry.Proto.Metrics.V1.Metrics.ExponentialHistogramDataPoint_Buckets)
                  )
                    (obj .: "positive")
                )
            <*> ( ( HsProtobuf.coerceOver
                      @(HsProtobuf.Nested Opentelemetry.Proto.Metrics.V1.Metrics.ExponentialHistogramDataPoint_Buckets)
                      @(Hs.Maybe Opentelemetry.Proto.Metrics.V1.Metrics.ExponentialHistogramDataPoint_Buckets)
                  )
                    (obj .: "negative")
                )
            <*> obj .: "flags"
            <*> ( ( HsProtobuf.coerceOver
                      @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.Exemplar)
                      @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.Exemplar)
                  )
                    (obj .: "exemplars")
                )
            <*> obj .: "min"
            <*> obj .: "max"
            <*> obj .: "zero_threshold"
      )
instance (HsJSONPB.ToJSON ExponentialHistogramDataPoint) where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding
instance (HsJSONPB.FromJSON ExponentialHistogramDataPoint) where
  parseJSON = HsJSONPB.parseJSONPB
instance (HsJSONPB.ToSchema ExponentialHistogramDataPoint) where
  declareNamedSchema _ =
    do
      let declare_attributes = HsJSONPB.declareSchemaRef
      exponentialHistogramDataPointAttributes <-
        declare_attributes
          Proxy.Proxy
      let declare_start_time_unix_nano = HsJSONPB.declareSchemaRef
      exponentialHistogramDataPointStartTimeUnixNano <-
        declare_start_time_unix_nano
          Proxy.Proxy
      let declare_time_unix_nano = HsJSONPB.declareSchemaRef
      exponentialHistogramDataPointTimeUnixNano <-
        declare_time_unix_nano
          Proxy.Proxy
      let declare_count = HsJSONPB.declareSchemaRef
      exponentialHistogramDataPointCount <- declare_count Proxy.Proxy
      let declare_sum = HsJSONPB.declareSchemaRef
      exponentialHistogramDataPointSum <- declare_sum Proxy.Proxy
      let declare_scale = HsJSONPB.declareSchemaRef
      exponentialHistogramDataPointScale <- declare_scale Proxy.Proxy
      let declare_zero_count = HsJSONPB.declareSchemaRef
      exponentialHistogramDataPointZeroCount <-
        declare_zero_count
          Proxy.Proxy
      let declare_positive = HsJSONPB.declareSchemaRef
      exponentialHistogramDataPointPositive <-
        declare_positive
          Proxy.Proxy
      let declare_negative = HsJSONPB.declareSchemaRef
      exponentialHistogramDataPointNegative <-
        declare_negative
          Proxy.Proxy
      let declare_flags = HsJSONPB.declareSchemaRef
      exponentialHistogramDataPointFlags <- declare_flags Proxy.Proxy
      let declare_exemplars = HsJSONPB.declareSchemaRef
      exponentialHistogramDataPointExemplars <-
        declare_exemplars
          Proxy.Proxy
      let declare_min = HsJSONPB.declareSchemaRef
      exponentialHistogramDataPointMin <- declare_min Proxy.Proxy
      let declare_max = HsJSONPB.declareSchemaRef
      exponentialHistogramDataPointMax <- declare_max Proxy.Proxy
      let declare_zero_threshold = HsJSONPB.declareSchemaRef
      exponentialHistogramDataPointZeroThreshold <-
        declare_zero_threshold
          Proxy.Proxy
      let _ =
            Hs.pure ExponentialHistogramDataPoint
              <*> ( ( HsProtobuf.coerceOver
                        @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue)
                        @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
                    )
                      (HsJSONPB.asProxy declare_attributes)
                  )
              <*> ( (HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
                      (HsJSONPB.asProxy declare_start_time_unix_nano)
                  )
              <*> ( (HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
                      (HsJSONPB.asProxy declare_time_unix_nano)
                  )
              <*> ( (HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
                      (HsJSONPB.asProxy declare_count)
                  )
              <*> HsJSONPB.asProxy declare_sum
              <*> ( (HsProtobuf.coerceOver @(HsProtobuf.Signed Hs.Int32) @Hs.Int32)
                      (HsJSONPB.asProxy declare_scale)
                  )
              <*> ( (HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
                      (HsJSONPB.asProxy declare_zero_count)
                  )
              <*> ( ( HsProtobuf.coerceOver
                        @(HsProtobuf.Nested Opentelemetry.Proto.Metrics.V1.Metrics.ExponentialHistogramDataPoint_Buckets)
                        @(Hs.Maybe Opentelemetry.Proto.Metrics.V1.Metrics.ExponentialHistogramDataPoint_Buckets)
                    )
                      (HsJSONPB.asProxy declare_positive)
                  )
              <*> ( ( HsProtobuf.coerceOver
                        @(HsProtobuf.Nested Opentelemetry.Proto.Metrics.V1.Metrics.ExponentialHistogramDataPoint_Buckets)
                        @(Hs.Maybe Opentelemetry.Proto.Metrics.V1.Metrics.ExponentialHistogramDataPoint_Buckets)
                    )
                      (HsJSONPB.asProxy declare_negative)
                  )
              <*> HsJSONPB.asProxy declare_flags
              <*> ( ( HsProtobuf.coerceOver
                        @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.Exemplar)
                        @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.Exemplar)
                    )
                      (HsJSONPB.asProxy declare_exemplars)
                  )
              <*> HsJSONPB.asProxy declare_min
              <*> HsJSONPB.asProxy declare_max
              <*> HsJSONPB.asProxy declare_zero_threshold
      Hs.return
        HsJSONPB.NamedSchema
          { HsJSONPB._namedSchemaName =
              Hs.Just
                "ExponentialHistogramDataPoint"
          , HsJSONPB._namedSchemaSchema =
              Hs.mempty
                { HsJSONPB._schemaParamSchema =
                    Hs.mempty
                      { HsJSONPB._paramSchemaType =
                          Hs.Just
                            HsJSONPB.SwaggerObject
                      }
                , HsJSONPB._schemaProperties =
                    HsJSONPB.insOrdFromList
                      [
                        ( "attributes"
                        , exponentialHistogramDataPointAttributes
                        )
                      ,
                        ( "start_time_unix_nano"
                        , exponentialHistogramDataPointStartTimeUnixNano
                        )
                      ,
                        ( "time_unix_nano"
                        , exponentialHistogramDataPointTimeUnixNano
                        )
                      ,
                        ( "count"
                        , exponentialHistogramDataPointCount
                        )
                      ,
                        ( "sum"
                        , exponentialHistogramDataPointSum
                        )
                      ,
                        ( "scale"
                        , exponentialHistogramDataPointScale
                        )
                      ,
                        ( "zero_count"
                        , exponentialHistogramDataPointZeroCount
                        )
                      ,
                        ( "positive"
                        , exponentialHistogramDataPointPositive
                        )
                      ,
                        ( "negative"
                        , exponentialHistogramDataPointNegative
                        )
                      ,
                        ( "flags"
                        , exponentialHistogramDataPointFlags
                        )
                      ,
                        ( "exemplars"
                        , exponentialHistogramDataPointExemplars
                        )
                      ,
                        ( "min"
                        , exponentialHistogramDataPointMin
                        )
                      ,
                        ( "max"
                        , exponentialHistogramDataPointMax
                        )
                      ,
                        ( "zero_threshold"
                        , exponentialHistogramDataPointZeroThreshold
                        )
                      ]
                }
          }
data ExponentialHistogramDataPoint_Buckets = ExponentialHistogramDataPoint_Buckets
  { exponentialHistogramDataPoint_BucketsOffset :: Hs.Int32
  , exponentialHistogramDataPoint_BucketsBucketCounts :: (Hs.Vector Hs.Word64)
  }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)
instance (Hs.NFData ExponentialHistogramDataPoint_Buckets)
instance (HsProtobuf.Named ExponentialHistogramDataPoint_Buckets) where
  nameOf _ = Hs.fromString "ExponentialHistogramDataPoint_Buckets"
instance (HsProtobuf.HasDefault ExponentialHistogramDataPoint_Buckets)
instance (HsProtobuf.Message ExponentialHistogramDataPoint_Buckets) where
  encodeMessage
    _
    ExponentialHistogramDataPoint_Buckets
      { exponentialHistogramDataPoint_BucketsOffset
      , exponentialHistogramDataPoint_BucketsBucketCounts
      } =
      Hs.mappend
        ( HsProtobuf.encodeMessageField
            (HsProtobuf.FieldNumber 1)
            ( (Hs.coerce @Hs.Int32 @(HsProtobuf.Signed Hs.Int32))
                exponentialHistogramDataPoint_BucketsOffset
            )
        )
        ( HsProtobuf.encodeMessageField
            (HsProtobuf.FieldNumber 2)
            ( ( Hs.coerce
                  @(Hs.Vector Hs.Word64)
                  @(HsProtobuf.PackedVec Hs.Word64)
              )
                exponentialHistogramDataPoint_BucketsBucketCounts
            )
        )
  decodeMessage _ =
    Hs.pure ExponentialHistogramDataPoint_Buckets
      <*> ( (HsProtobuf.coerceOver @(HsProtobuf.Signed Hs.Int32) @Hs.Int32)
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 1)
              )
          )
      <*> ( ( HsProtobuf.coerceOver
                @(HsProtobuf.PackedVec Hs.Word64)
                @(Hs.Vector Hs.Word64)
            )
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 2)
              )
          )
  dotProto _ =
    [ HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 1)
        (HsProtobufAST.Prim HsProtobufAST.SInt32)
        (HsProtobufAST.Single "offset")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 2)
        (HsProtobufAST.Repeated HsProtobufAST.UInt64)
        (HsProtobufAST.Single "bucket_counts")
        []
        ""
    ]
instance (HsJSONPB.ToJSONPB ExponentialHistogramDataPoint_Buckets) where
  toJSONPB (ExponentialHistogramDataPoint_Buckets f1 f2) =
    HsJSONPB.object
      [ "offset"
          .= ((Hs.coerce @Hs.Int32 @(HsProtobuf.Signed Hs.Int32)) f1)
      , "bucket_counts"
          .= ( ( Hs.coerce
                  @(Hs.Vector Hs.Word64)
                  @(HsProtobuf.PackedVec Hs.Word64)
               )
                f2
             )
      ]
  toEncodingPB (ExponentialHistogramDataPoint_Buckets f1 f2) =
    HsJSONPB.pairs
      [ "offset"
          .= ((Hs.coerce @Hs.Int32 @(HsProtobuf.Signed Hs.Int32)) f1)
      , "bucket_counts"
          .= ( ( Hs.coerce
                  @(Hs.Vector Hs.Word64)
                  @(HsProtobuf.PackedVec Hs.Word64)
               )
                f2
             )
      ]
instance (HsJSONPB.FromJSONPB ExponentialHistogramDataPoint_Buckets) where
  parseJSONPB =
    HsJSONPB.withObject
      "ExponentialHistogramDataPoint_Buckets"
      ( \obj ->
          Hs.pure ExponentialHistogramDataPoint_Buckets
            <*> ( (HsProtobuf.coerceOver @(HsProtobuf.Signed Hs.Int32) @Hs.Int32)
                    (obj .: "offset")
                )
            <*> ( ( HsProtobuf.coerceOver
                      @(HsProtobuf.PackedVec Hs.Word64)
                      @(Hs.Vector Hs.Word64)
                  )
                    (obj .: "bucket_counts")
                )
      )
instance (HsJSONPB.ToJSON ExponentialHistogramDataPoint_Buckets) where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding
instance (HsJSONPB.FromJSON ExponentialHistogramDataPoint_Buckets) where
  parseJSON = HsJSONPB.parseJSONPB
instance (HsJSONPB.ToSchema ExponentialHistogramDataPoint_Buckets) where
  declareNamedSchema _ =
    do
      let declare_offset = HsJSONPB.declareSchemaRef
      exponentialHistogramDataPoint_BucketsOffset <-
        declare_offset
          Proxy.Proxy
      let declare_bucket_counts = HsJSONPB.declareSchemaRef
      exponentialHistogramDataPoint_BucketsBucketCounts <-
        declare_bucket_counts
          Proxy.Proxy
      let _ =
            Hs.pure ExponentialHistogramDataPoint_Buckets
              <*> ( (HsProtobuf.coerceOver @(HsProtobuf.Signed Hs.Int32) @Hs.Int32)
                      (HsJSONPB.asProxy declare_offset)
                  )
              <*> ( ( HsProtobuf.coerceOver
                        @(HsProtobuf.PackedVec Hs.Word64)
                        @(Hs.Vector Hs.Word64)
                    )
                      (HsJSONPB.asProxy declare_bucket_counts)
                  )
      Hs.return
        HsJSONPB.NamedSchema
          { HsJSONPB._namedSchemaName =
              Hs.Just
                "ExponentialHistogramDataPoint_Buckets"
          , HsJSONPB._namedSchemaSchema =
              Hs.mempty
                { HsJSONPB._schemaParamSchema =
                    Hs.mempty
                      { HsJSONPB._paramSchemaType =
                          Hs.Just
                            HsJSONPB.SwaggerObject
                      }
                , HsJSONPB._schemaProperties =
                    HsJSONPB.insOrdFromList
                      [
                        ( "offset"
                        , exponentialHistogramDataPoint_BucketsOffset
                        )
                      ,
                        ( "bucket_counts"
                        , exponentialHistogramDataPoint_BucketsBucketCounts
                        )
                      ]
                }
          }
data SummaryDataPoint = SummaryDataPoint
  { summaryDataPointAttributes :: (Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
  , summaryDataPointStartTimeUnixNano :: Hs.Word64
  , summaryDataPointTimeUnixNano :: Hs.Word64
  , summaryDataPointCount :: Hs.Word64
  , summaryDataPointSum :: Hs.Double
  , summaryDataPointQuantileValues :: (Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.SummaryDataPoint_ValueAtQuantile)
  , summaryDataPointFlags :: Hs.Word32
  }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)
instance (Hs.NFData SummaryDataPoint)
instance (HsProtobuf.Named SummaryDataPoint) where
  nameOf _ = Hs.fromString "SummaryDataPoint"
instance (HsProtobuf.HasDefault SummaryDataPoint)
instance (HsProtobuf.Message SummaryDataPoint) where
  encodeMessage
    _
    SummaryDataPoint
      { summaryDataPointAttributes
      , summaryDataPointStartTimeUnixNano
      , summaryDataPointTimeUnixNano
      , summaryDataPointCount
      , summaryDataPointSum
      , summaryDataPointQuantileValues
      , summaryDataPointFlags
      } =
      Hs.mappend
        ( Hs.mappend
            ( Hs.mappend
                ( Hs.mappend
                    ( Hs.mappend
                        ( Hs.mappend
                            ( HsProtobuf.encodeMessageField
                                (HsProtobuf.FieldNumber 7)
                                ( ( Hs.coerce
                                      @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
                                      @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue)
                                  )
                                    summaryDataPointAttributes
                                )
                            )
                            ( HsProtobuf.encodeMessageField
                                (HsProtobuf.FieldNumber 2)
                                ( (Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64))
                                    summaryDataPointStartTimeUnixNano
                                )
                            )
                        )
                        ( HsProtobuf.encodeMessageField
                            (HsProtobuf.FieldNumber 3)
                            ( (Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64))
                                summaryDataPointTimeUnixNano
                            )
                        )
                    )
                    ( HsProtobuf.encodeMessageField
                        (HsProtobuf.FieldNumber 4)
                        ( (Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64))
                            summaryDataPointCount
                        )
                    )
                )
                ( HsProtobuf.encodeMessageField
                    (HsProtobuf.FieldNumber 5)
                    summaryDataPointSum
                )
            )
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 6)
                ( ( Hs.coerce
                      @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.SummaryDataPoint_ValueAtQuantile)
                      @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.SummaryDataPoint_ValueAtQuantile)
                  )
                    summaryDataPointQuantileValues
                )
            )
        )
        ( HsProtobuf.encodeMessageField
            (HsProtobuf.FieldNumber 8)
            summaryDataPointFlags
        )
  decodeMessage _ =
    Hs.pure SummaryDataPoint
      <*> ( ( HsProtobuf.coerceOver
                @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue)
                @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
            )
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 7)
              )
          )
      <*> ( (HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 2)
              )
          )
      <*> ( (HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 3)
              )
          )
      <*> ( (HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 4)
              )
          )
      <*> HsProtobuf.at
        HsProtobuf.decodeMessageField
        (HsProtobuf.FieldNumber 5)
      <*> ( ( HsProtobuf.coerceOver
                @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.SummaryDataPoint_ValueAtQuantile)
                @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.SummaryDataPoint_ValueAtQuantile)
            )
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 6)
              )
          )
      <*> HsProtobuf.at
        HsProtobuf.decodeMessageField
        (HsProtobuf.FieldNumber 8)
  dotProto _ =
    [ HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 7)
        ( HsProtobufAST.Repeated
            ( HsProtobufAST.Named
                ( HsProtobufAST.Dots
                    ( HsProtobufAST.Path
                        ("opentelemetry" Hs.:| ["proto", "common", "v1", "KeyValue"])
                    )
                )
            )
        )
        (HsProtobufAST.Single "attributes")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 2)
        (HsProtobufAST.Prim HsProtobufAST.Fixed64)
        (HsProtobufAST.Single "start_time_unix_nano")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 3)
        (HsProtobufAST.Prim HsProtobufAST.Fixed64)
        (HsProtobufAST.Single "time_unix_nano")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 4)
        (HsProtobufAST.Prim HsProtobufAST.Fixed64)
        (HsProtobufAST.Single "count")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 5)
        (HsProtobufAST.Prim HsProtobufAST.Double)
        (HsProtobufAST.Single "sum")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 6)
        ( HsProtobufAST.Repeated
            (HsProtobufAST.Named (HsProtobufAST.Single "ValueAtQuantile"))
        )
        (HsProtobufAST.Single "quantile_values")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 8)
        (HsProtobufAST.Prim HsProtobufAST.UInt32)
        (HsProtobufAST.Single "flags")
        []
        ""
    ]
instance (HsJSONPB.ToJSONPB SummaryDataPoint) where
  toJSONPB (SummaryDataPoint f7 f2 f3 f4 f5 f6 f8) =
    HsJSONPB.object
      [ "attributes"
          .= ( ( Hs.coerce
                  @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
                  @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue)
               )
                f7
             )
      , "start_time_unix_nano"
          .= ((Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64)) f2)
      , "time_unix_nano"
          .= ((Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64)) f3)
      , "count"
          .= ((Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64)) f4)
      , "sum" .= f5
      , "quantile_values"
          .= ( ( Hs.coerce
                  @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.SummaryDataPoint_ValueAtQuantile)
                  @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.SummaryDataPoint_ValueAtQuantile)
               )
                f6
             )
      , "flags" .= f8
      ]
  toEncodingPB (SummaryDataPoint f7 f2 f3 f4 f5 f6 f8) =
    HsJSONPB.pairs
      [ "attributes"
          .= ( ( Hs.coerce
                  @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
                  @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue)
               )
                f7
             )
      , "start_time_unix_nano"
          .= ((Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64)) f2)
      , "time_unix_nano"
          .= ((Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64)) f3)
      , "count"
          .= ((Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64)) f4)
      , "sum" .= f5
      , "quantile_values"
          .= ( ( Hs.coerce
                  @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.SummaryDataPoint_ValueAtQuantile)
                  @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.SummaryDataPoint_ValueAtQuantile)
               )
                f6
             )
      , "flags" .= f8
      ]
instance (HsJSONPB.FromJSONPB SummaryDataPoint) where
  parseJSONPB =
    HsJSONPB.withObject
      "SummaryDataPoint"
      ( \obj ->
          Hs.pure SummaryDataPoint
            <*> ( ( HsProtobuf.coerceOver
                      @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue)
                      @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
                  )
                    (obj .: "attributes")
                )
            <*> ( (HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
                    (obj .: "start_time_unix_nano")
                )
            <*> ( (HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
                    (obj .: "time_unix_nano")
                )
            <*> ( (HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
                    (obj .: "count")
                )
            <*> obj .: "sum"
            <*> ( ( HsProtobuf.coerceOver
                      @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.SummaryDataPoint_ValueAtQuantile)
                      @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.SummaryDataPoint_ValueAtQuantile)
                  )
                    (obj .: "quantile_values")
                )
            <*> obj .: "flags"
      )
instance (HsJSONPB.ToJSON SummaryDataPoint) where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding
instance (HsJSONPB.FromJSON SummaryDataPoint) where
  parseJSON = HsJSONPB.parseJSONPB
instance (HsJSONPB.ToSchema SummaryDataPoint) where
  declareNamedSchema _ =
    do
      let declare_attributes = HsJSONPB.declareSchemaRef
      summaryDataPointAttributes <- declare_attributes Proxy.Proxy
      let declare_start_time_unix_nano = HsJSONPB.declareSchemaRef
      summaryDataPointStartTimeUnixNano <-
        declare_start_time_unix_nano
          Proxy.Proxy
      let declare_time_unix_nano = HsJSONPB.declareSchemaRef
      summaryDataPointTimeUnixNano <- declare_time_unix_nano Proxy.Proxy
      let declare_count = HsJSONPB.declareSchemaRef
      summaryDataPointCount <- declare_count Proxy.Proxy
      let declare_sum = HsJSONPB.declareSchemaRef
      summaryDataPointSum <- declare_sum Proxy.Proxy
      let declare_quantile_values = HsJSONPB.declareSchemaRef
      summaryDataPointQuantileValues <-
        declare_quantile_values
          Proxy.Proxy
      let declare_flags = HsJSONPB.declareSchemaRef
      summaryDataPointFlags <- declare_flags Proxy.Proxy
      let _ =
            Hs.pure SummaryDataPoint
              <*> ( ( HsProtobuf.coerceOver
                        @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue)
                        @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
                    )
                      (HsJSONPB.asProxy declare_attributes)
                  )
              <*> ( (HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
                      (HsJSONPB.asProxy declare_start_time_unix_nano)
                  )
              <*> ( (HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
                      (HsJSONPB.asProxy declare_time_unix_nano)
                  )
              <*> ( (HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
                      (HsJSONPB.asProxy declare_count)
                  )
              <*> HsJSONPB.asProxy declare_sum
              <*> ( ( HsProtobuf.coerceOver
                        @(HsProtobuf.NestedVec Opentelemetry.Proto.Metrics.V1.Metrics.SummaryDataPoint_ValueAtQuantile)
                        @(Hs.Vector Opentelemetry.Proto.Metrics.V1.Metrics.SummaryDataPoint_ValueAtQuantile)
                    )
                      (HsJSONPB.asProxy declare_quantile_values)
                  )
              <*> HsJSONPB.asProxy declare_flags
      Hs.return
        HsJSONPB.NamedSchema
          { HsJSONPB._namedSchemaName = Hs.Just "SummaryDataPoint"
          , HsJSONPB._namedSchemaSchema =
              Hs.mempty
                { HsJSONPB._schemaParamSchema =
                    Hs.mempty
                      { HsJSONPB._paramSchemaType =
                          Hs.Just
                            HsJSONPB.SwaggerObject
                      }
                , HsJSONPB._schemaProperties =
                    HsJSONPB.insOrdFromList
                      [
                        ( "attributes"
                        , summaryDataPointAttributes
                        )
                      ,
                        ( "start_time_unix_nano"
                        , summaryDataPointStartTimeUnixNano
                        )
                      ,
                        ( "time_unix_nano"
                        , summaryDataPointTimeUnixNano
                        )
                      ,
                        ( "count"
                        , summaryDataPointCount
                        )
                      ,
                        ( "sum"
                        , summaryDataPointSum
                        )
                      ,
                        ( "quantile_values"
                        , summaryDataPointQuantileValues
                        )
                      ,
                        ( "flags"
                        , summaryDataPointFlags
                        )
                      ]
                }
          }
data SummaryDataPoint_ValueAtQuantile = SummaryDataPoint_ValueAtQuantile
  { summaryDataPoint_ValueAtQuantileQuantile :: Hs.Double
  , summaryDataPoint_ValueAtQuantileValue :: Hs.Double
  }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)
instance (Hs.NFData SummaryDataPoint_ValueAtQuantile)
instance (HsProtobuf.Named SummaryDataPoint_ValueAtQuantile) where
  nameOf _ = Hs.fromString "SummaryDataPoint_ValueAtQuantile"
instance (HsProtobuf.HasDefault SummaryDataPoint_ValueAtQuantile)
instance (HsProtobuf.Message SummaryDataPoint_ValueAtQuantile) where
  encodeMessage
    _
    SummaryDataPoint_ValueAtQuantile
      { summaryDataPoint_ValueAtQuantileQuantile
      , summaryDataPoint_ValueAtQuantileValue
      } =
      Hs.mappend
        ( HsProtobuf.encodeMessageField
            (HsProtobuf.FieldNumber 1)
            summaryDataPoint_ValueAtQuantileQuantile
        )
        ( HsProtobuf.encodeMessageField
            (HsProtobuf.FieldNumber 2)
            summaryDataPoint_ValueAtQuantileValue
        )
  decodeMessage _ =
    Hs.pure SummaryDataPoint_ValueAtQuantile
      <*> HsProtobuf.at
        HsProtobuf.decodeMessageField
        (HsProtobuf.FieldNumber 1)
      <*> HsProtobuf.at
        HsProtobuf.decodeMessageField
        (HsProtobuf.FieldNumber 2)
  dotProto _ =
    [ HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 1)
        (HsProtobufAST.Prim HsProtobufAST.Double)
        (HsProtobufAST.Single "quantile")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 2)
        (HsProtobufAST.Prim HsProtobufAST.Double)
        (HsProtobufAST.Single "value")
        []
        ""
    ]
instance (HsJSONPB.ToJSONPB SummaryDataPoint_ValueAtQuantile) where
  toJSONPB (SummaryDataPoint_ValueAtQuantile f1 f2) =
    HsJSONPB.object ["quantile" .= f1, "value" .= f2]
  toEncodingPB (SummaryDataPoint_ValueAtQuantile f1 f2) =
    HsJSONPB.pairs ["quantile" .= f1, "value" .= f2]
instance (HsJSONPB.FromJSONPB SummaryDataPoint_ValueAtQuantile) where
  parseJSONPB =
    HsJSONPB.withObject
      "SummaryDataPoint_ValueAtQuantile"
      ( \obj ->
          Hs.pure SummaryDataPoint_ValueAtQuantile
            <*> obj .: "quantile"
            <*> obj .: "value"
      )
instance (HsJSONPB.ToJSON SummaryDataPoint_ValueAtQuantile) where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding
instance (HsJSONPB.FromJSON SummaryDataPoint_ValueAtQuantile) where
  parseJSON = HsJSONPB.parseJSONPB
instance (HsJSONPB.ToSchema SummaryDataPoint_ValueAtQuantile) where
  declareNamedSchema _ =
    do
      let declare_quantile = HsJSONPB.declareSchemaRef
      summaryDataPoint_ValueAtQuantileQuantile <-
        declare_quantile
          Proxy.Proxy
      let declare_value = HsJSONPB.declareSchemaRef
      summaryDataPoint_ValueAtQuantileValue <- declare_value Proxy.Proxy
      let _ =
            Hs.pure SummaryDataPoint_ValueAtQuantile
              <*> HsJSONPB.asProxy declare_quantile
              <*> HsJSONPB.asProxy declare_value
      Hs.return
        HsJSONPB.NamedSchema
          { HsJSONPB._namedSchemaName =
              Hs.Just
                "SummaryDataPoint_ValueAtQuantile"
          , HsJSONPB._namedSchemaSchema =
              Hs.mempty
                { HsJSONPB._schemaParamSchema =
                    Hs.mempty
                      { HsJSONPB._paramSchemaType =
                          Hs.Just
                            HsJSONPB.SwaggerObject
                      }
                , HsJSONPB._schemaProperties =
                    HsJSONPB.insOrdFromList
                      [
                        ( "quantile"
                        , summaryDataPoint_ValueAtQuantileQuantile
                        )
                      ,
                        ( "value"
                        , summaryDataPoint_ValueAtQuantileValue
                        )
                      ]
                }
          }
data Exemplar = Exemplar
  { exemplarFilteredAttributes :: (Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
  , exemplarTimeUnixNano :: Hs.Word64
  , exemplarValue :: (Hs.Maybe ExemplarValue)
  , exemplarSpanId :: Hs.ByteString
  , exemplarTraceId :: Hs.ByteString
  }
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)
instance (Hs.NFData Exemplar)
instance (HsProtobuf.Named Exemplar) where
  nameOf _ = Hs.fromString "Exemplar"
instance (HsProtobuf.HasDefault Exemplar)
instance (HsProtobuf.Message Exemplar) where
  encodeMessage
    _
    Exemplar
      { exemplarFilteredAttributes
      , exemplarTimeUnixNano
      , exemplarValue
      , exemplarSpanId
      , exemplarTraceId
      } =
      Hs.mappend
        ( Hs.mappend
            ( Hs.mappend
                ( Hs.mappend
                    ( HsProtobuf.encodeMessageField
                        (HsProtobuf.FieldNumber 7)
                        ( ( Hs.coerce
                              @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
                              @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue)
                          )
                            exemplarFilteredAttributes
                        )
                    )
                    ( HsProtobuf.encodeMessageField
                        (HsProtobuf.FieldNumber 2)
                        ( (Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64))
                            exemplarTimeUnixNano
                        )
                    )
                )
                ( case exemplarValue of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x ->
                      case x of
                        ExemplarValueAsDouble y ->
                          HsProtobuf.encodeMessageField
                            (HsProtobuf.FieldNumber 3)
                            (HsProtobuf.ForceEmit y)
                        ExemplarValueAsInt y ->
                          HsProtobuf.encodeMessageField
                            (HsProtobuf.FieldNumber 6)
                            ( HsProtobuf.ForceEmit
                                ( ( Hs.coerce
                                      @Hs.Int64
                                      @(HsProtobuf.Signed (HsProtobuf.Fixed Hs.Int64))
                                  )
                                    y
                                )
                            )
                )
            )
            ( HsProtobuf.encodeMessageField
                (HsProtobuf.FieldNumber 4)
                ( (Hs.coerce @Hs.ByteString @(HsProtobuf.Bytes Hs.ByteString))
                    exemplarSpanId
                )
            )
        )
        ( HsProtobuf.encodeMessageField
            (HsProtobuf.FieldNumber 5)
            ( (Hs.coerce @Hs.ByteString @(HsProtobuf.Bytes Hs.ByteString))
                exemplarTraceId
            )
        )
  decodeMessage _ =
    Hs.pure Exemplar
      <*> ( ( HsProtobuf.coerceOver
                @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue)
                @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
            )
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 7)
              )
          )
      <*> ( (HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 2)
              )
          )
      <*> HsProtobuf.oneof
        Hs.Nothing
        [
          ( (HsProtobuf.FieldNumber 3)
          , Hs.pure (Hs.Just Hs.. ExemplarValueAsDouble)
              <*> HsProtobuf.decodeMessageField
          )
        ,
          ( (HsProtobuf.FieldNumber 6)
          , Hs.pure (Hs.Just Hs.. ExemplarValueAsInt)
              <*> ( ( HsProtobuf.coerceOver
                        @(HsProtobuf.Signed (HsProtobuf.Fixed Hs.Int64))
                        @Hs.Int64
                    )
                      HsProtobuf.decodeMessageField
                  )
          )
        ]
      <*> ( ( HsProtobuf.coerceOver
                @(HsProtobuf.Bytes Hs.ByteString)
                @Hs.ByteString
            )
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 4)
              )
          )
      <*> ( ( HsProtobuf.coerceOver
                @(HsProtobuf.Bytes Hs.ByteString)
                @Hs.ByteString
            )
              ( HsProtobuf.at
                  HsProtobuf.decodeMessageField
                  (HsProtobuf.FieldNumber 5)
              )
          )
  dotProto _ =
    [ HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 7)
        ( HsProtobufAST.Repeated
            ( HsProtobufAST.Named
                ( HsProtobufAST.Dots
                    ( HsProtobufAST.Path
                        ("opentelemetry" Hs.:| ["proto", "common", "v1", "KeyValue"])
                    )
                )
            )
        )
        (HsProtobufAST.Single "filtered_attributes")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 2)
        (HsProtobufAST.Prim HsProtobufAST.Fixed64)
        (HsProtobufAST.Single "time_unix_nano")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 4)
        (HsProtobufAST.Prim HsProtobufAST.Bytes)
        (HsProtobufAST.Single "span_id")
        []
        ""
    , HsProtobufAST.DotProtoField
        (HsProtobuf.FieldNumber 5)
        (HsProtobufAST.Prim HsProtobufAST.Bytes)
        (HsProtobufAST.Single "trace_id")
        []
        ""
    ]
instance (HsJSONPB.ToJSONPB Exemplar) where
  toJSONPB (Exemplar f7 f2 f3_or_f6 f4 f5) =
    HsJSONPB.object
      [ "filtered_attributes"
          .= ( ( Hs.coerce
                  @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
                  @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue)
               )
                f7
             )
      , "time_unix_nano"
          .= ((Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64)) f2)
      , ( let
            encodeValue =
              ( case f3_or_f6 of
                  Hs.Just (ExemplarValueAsDouble f3) -> HsJSONPB.pair "as_double" f3
                  Hs.Just (ExemplarValueAsInt f6) ->
                    HsJSONPB.pair
                      "as_int"
                      ( ( Hs.coerce
                            @Hs.Int64
                            @(HsProtobuf.Signed (HsProtobuf.Fixed Hs.Int64))
                        )
                          f6
                      )
                  Hs.Nothing -> Hs.mempty
              )
           in
            ( \options ->
                if HsJSONPB.optEmitNamedOneof options
                  then ("value" .= HsJSONPB.objectOrNull [encodeValue] options) options
                  else encodeValue options
            )
        )
      , "span_id"
          .= ((Hs.coerce @Hs.ByteString @(HsProtobuf.Bytes Hs.ByteString)) f4)
      , "trace_id"
          .= ((Hs.coerce @Hs.ByteString @(HsProtobuf.Bytes Hs.ByteString)) f5)
      ]
  toEncodingPB (Exemplar f7 f2 f3_or_f6 f4 f5) =
    HsJSONPB.pairs
      [ "filtered_attributes"
          .= ( ( Hs.coerce
                  @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
                  @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue)
               )
                f7
             )
      , "time_unix_nano"
          .= ((Hs.coerce @Hs.Word64 @(HsProtobuf.Fixed Hs.Word64)) f2)
      , ( let
            encodeValue =
              ( case f3_or_f6 of
                  Hs.Just (ExemplarValueAsDouble f3) -> HsJSONPB.pair "as_double" f3
                  Hs.Just (ExemplarValueAsInt f6) ->
                    HsJSONPB.pair
                      "as_int"
                      ( ( Hs.coerce
                            @Hs.Int64
                            @(HsProtobuf.Signed (HsProtobuf.Fixed Hs.Int64))
                        )
                          f6
                      )
                  Hs.Nothing -> Hs.mempty
              )
           in
            ( \options ->
                if HsJSONPB.optEmitNamedOneof options
                  then ("value" .= HsJSONPB.pairsOrNull [encodeValue] options) options
                  else encodeValue options
            )
        )
      , "span_id"
          .= ((Hs.coerce @Hs.ByteString @(HsProtobuf.Bytes Hs.ByteString)) f4)
      , "trace_id"
          .= ((Hs.coerce @Hs.ByteString @(HsProtobuf.Bytes Hs.ByteString)) f5)
      ]
instance (HsJSONPB.FromJSONPB Exemplar) where
  parseJSONPB =
    HsJSONPB.withObject
      "Exemplar"
      ( \obj ->
          Hs.pure Exemplar
            <*> ( ( HsProtobuf.coerceOver
                      @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue)
                      @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
                  )
                    (obj .: "filtered_attributes")
                )
            <*> ( (HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
                    (obj .: "time_unix_nano")
                )
            <*> ( let
                    parseValue parseObj =
                      Hs.msum
                        [ Hs.Just Hs.. ExemplarValueAsDouble
                            <$> HsJSONPB.parseField parseObj "as_double"
                        , Hs.Just
                            Hs.. ExemplarValueAsInt
                            Hs.. ( Hs.coerce
                                    @(HsProtobuf.Signed (HsProtobuf.Fixed Hs.Int64))
                                    @Hs.Int64
                                 )
                            <$> HsJSONPB.parseField parseObj "as_int"
                        , Hs.pure Hs.Nothing
                        ]
                   in
                    (obj .: "value" Hs.>>= HsJSONPB.withObject "value" parseValue)
                      <|> (parseValue obj)
                )
            <*> ( ( HsProtobuf.coerceOver
                      @(HsProtobuf.Bytes Hs.ByteString)
                      @Hs.ByteString
                  )
                    (obj .: "span_id")
                )
            <*> ( ( HsProtobuf.coerceOver
                      @(HsProtobuf.Bytes Hs.ByteString)
                      @Hs.ByteString
                  )
                    (obj .: "trace_id")
                )
      )
instance (HsJSONPB.ToJSON Exemplar) where
  toJSON = HsJSONPB.toAesonValue
  toEncoding = HsJSONPB.toAesonEncoding
instance (HsJSONPB.FromJSON Exemplar) where
  parseJSON = HsJSONPB.parseJSONPB
instance (HsJSONPB.ToSchema Exemplar) where
  declareNamedSchema _ =
    do
      let declare_filtered_attributes = HsJSONPB.declareSchemaRef
      exemplarFilteredAttributes <-
        declare_filtered_attributes
          Proxy.Proxy
      let declare_time_unix_nano = HsJSONPB.declareSchemaRef
      exemplarTimeUnixNano <- declare_time_unix_nano Proxy.Proxy
      let declare_value = HsJSONPB.declareSchemaRef
      exemplarValue <- declare_value Proxy.Proxy
      let declare_span_id = HsJSONPB.declareSchemaRef
      exemplarSpanId <- declare_span_id Proxy.Proxy
      let declare_trace_id = HsJSONPB.declareSchemaRef
      exemplarTraceId <- declare_trace_id Proxy.Proxy
      let _ =
            Hs.pure Exemplar
              <*> ( ( HsProtobuf.coerceOver
                        @(HsProtobuf.NestedVec Opentelemetry.Proto.Common.V1.Common.KeyValue)
                        @(Hs.Vector Opentelemetry.Proto.Common.V1.Common.KeyValue)
                    )
                      (HsJSONPB.asProxy declare_filtered_attributes)
                  )
              <*> ( (HsProtobuf.coerceOver @(HsProtobuf.Fixed Hs.Word64) @Hs.Word64)
                      (HsJSONPB.asProxy declare_time_unix_nano)
                  )
              <*> HsJSONPB.asProxy declare_value
              <*> ( ( HsProtobuf.coerceOver
                        @(HsProtobuf.Bytes Hs.ByteString)
                        @Hs.ByteString
                    )
                      (HsJSONPB.asProxy declare_span_id)
                  )
              <*> ( ( HsProtobuf.coerceOver
                        @(HsProtobuf.Bytes Hs.ByteString)
                        @Hs.ByteString
                    )
                      (HsJSONPB.asProxy declare_trace_id)
                  )
      Hs.return
        HsJSONPB.NamedSchema
          { HsJSONPB._namedSchemaName = Hs.Just "Exemplar"
          , HsJSONPB._namedSchemaSchema =
              Hs.mempty
                { HsJSONPB._schemaParamSchema =
                    Hs.mempty
                      { HsJSONPB._paramSchemaType =
                          Hs.Just
                            HsJSONPB.SwaggerObject
                      }
                , HsJSONPB._schemaProperties =
                    HsJSONPB.insOrdFromList
                      [
                        ( "filtered_attributes"
                        , exemplarFilteredAttributes
                        )
                      ,
                        ( "time_unix_nano"
                        , exemplarTimeUnixNano
                        )
                      ,
                        ( "value"
                        , exemplarValue
                        )
                      ,
                        ( "span_id"
                        , exemplarSpanId
                        )
                      ,
                        ( "trace_id"
                        , exemplarTraceId
                        )
                      ]
                }
          }
data ExemplarValue
  = ExemplarValueAsDouble Hs.Double
  | ExemplarValueAsInt Hs.Int64
  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic)
instance (Hs.NFData ExemplarValue)
instance (HsProtobuf.Named ExemplarValue) where
  nameOf _ = Hs.fromString "ExemplarValue"
instance (HsJSONPB.ToSchema ExemplarValue) where
  declareNamedSchema _ =
    do
      let declare_as_double = HsJSONPB.declareSchemaRef
      exemplarValueAsDouble <- declare_as_double Proxy.Proxy
      let _ =
            Hs.pure ExemplarValueAsDouble
              <*> HsJSONPB.asProxy declare_as_double
      let declare_as_int = HsJSONPB.declareSchemaRef
      exemplarValueAsInt <- declare_as_int Proxy.Proxy
      let _ =
            Hs.pure ExemplarValueAsInt
              <*> ( ( HsProtobuf.coerceOver
                        @(HsProtobuf.Signed (HsProtobuf.Fixed Hs.Int64))
                        @Hs.Int64
                    )
                      (HsJSONPB.asProxy declare_as_int)
                  )
      Hs.return
        HsJSONPB.NamedSchema
          { HsJSONPB._namedSchemaName = Hs.Just "ExemplarValue"
          , HsJSONPB._namedSchemaSchema =
              Hs.mempty
                { HsJSONPB._schemaParamSchema =
                    Hs.mempty
                      { HsJSONPB._paramSchemaType =
                          Hs.Just
                            HsJSONPB.SwaggerObject
                      }
                , HsJSONPB._schemaProperties =
                    HsJSONPB.insOrdFromList
                      [
                        ( "as_double"
                        , exemplarValueAsDouble
                        )
                      ,
                        ( "as_int"
                        , exemplarValueAsInt
                        )
                      ]
                , HsJSONPB._schemaMinProperties = Hs.Just 1
                , HsJSONPB._schemaMaxProperties = Hs.Just 1
                }
          }
